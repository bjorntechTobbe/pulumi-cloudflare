// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Cloudflare worker script resource. In order for a script to be active, you'll also need to setup a `cloudflare..WorkerRoute`.
 * 
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-cloudflare/blob/master/website/docs/r/worker_script.html.markdown.
 */
export class WorkerScript extends pulumi.CustomResource {
    /**
     * Get an existing WorkerScript resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkerScriptState, opts?: pulumi.CustomResourceOptions): WorkerScript {
        return new WorkerScript(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'cloudflare:index/workerScript:WorkerScript';

    /**
     * Returns true if the given object is an instance of WorkerScript.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkerScript {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkerScript.__pulumiType;
    }

    /**
     * The script content.
     */
    public readonly content!: pulumi.Output<string>;
    public readonly kvNamespaceBindings!: pulumi.Output<outputs.WorkerScriptKvNamespaceBinding[] | undefined>;
    /**
     * The name for the binding.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a WorkerScript resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkerScriptArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkerScriptArgs | WorkerScriptState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as WorkerScriptState | undefined;
            inputs["content"] = state ? state.content : undefined;
            inputs["kvNamespaceBindings"] = state ? state.kvNamespaceBindings : undefined;
            inputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as WorkerScriptArgs | undefined;
            if (!args || args.content === undefined) {
                throw new Error("Missing required property 'content'");
            }
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            inputs["content"] = args ? args.content : undefined;
            inputs["kvNamespaceBindings"] = args ? args.kvNamespaceBindings : undefined;
            inputs["name"] = args ? args.name : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(WorkerScript.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkerScript resources.
 */
export interface WorkerScriptState {
    /**
     * The script content.
     */
    readonly content?: pulumi.Input<string>;
    readonly kvNamespaceBindings?: pulumi.Input<pulumi.Input<inputs.WorkerScriptKvNamespaceBinding>[]>;
    /**
     * The name for the binding.
     */
    readonly name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkerScript resource.
 */
export interface WorkerScriptArgs {
    /**
     * The script content.
     */
    readonly content: pulumi.Input<string>;
    readonly kvNamespaceBindings?: pulumi.Input<pulumi.Input<inputs.WorkerScriptKvNamespaceBinding>[]>;
    /**
     * The name for the binding.
     */
    readonly name: pulumi.Input<string>;
}
