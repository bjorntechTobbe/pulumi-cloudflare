// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.RulesetRuleActionParameterFromValueTargetUrlArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;


public final class RulesetRuleActionParameterFromValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetRuleActionParameterFromValueArgs Empty = new RulesetRuleActionParameterFromValueArgs();

    @Import(name="preserveQueryString", required=true)
    private Output<Boolean> preserveQueryString;

    public Output<Boolean> preserveQueryString() {
        return this.preserveQueryString;
    }

    @Import(name="statusCode", required=true)
    private Output<Integer> statusCode;

    public Output<Integer> statusCode() {
        return this.statusCode;
    }

    @Import(name="targetUrls", required=true)
    private Output<List<RulesetRuleActionParameterFromValueTargetUrlArgs>> targetUrls;

    public Output<List<RulesetRuleActionParameterFromValueTargetUrlArgs>> targetUrls() {
        return this.targetUrls;
    }

    private RulesetRuleActionParameterFromValueArgs() {}

    private RulesetRuleActionParameterFromValueArgs(RulesetRuleActionParameterFromValueArgs $) {
        this.preserveQueryString = $.preserveQueryString;
        this.statusCode = $.statusCode;
        this.targetUrls = $.targetUrls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetRuleActionParameterFromValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetRuleActionParameterFromValueArgs $;

        public Builder() {
            $ = new RulesetRuleActionParameterFromValueArgs();
        }

        public Builder(RulesetRuleActionParameterFromValueArgs defaults) {
            $ = new RulesetRuleActionParameterFromValueArgs(Objects.requireNonNull(defaults));
        }

        public Builder preserveQueryString(Output<Boolean> preserveQueryString) {
            $.preserveQueryString = preserveQueryString;
            return this;
        }

        public Builder preserveQueryString(Boolean preserveQueryString) {
            return preserveQueryString(Output.of(preserveQueryString));
        }

        public Builder statusCode(Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public Builder targetUrls(Output<List<RulesetRuleActionParameterFromValueTargetUrlArgs>> targetUrls) {
            $.targetUrls = targetUrls;
            return this;
        }

        public Builder targetUrls(List<RulesetRuleActionParameterFromValueTargetUrlArgs> targetUrls) {
            return targetUrls(Output.of(targetUrls));
        }

        public Builder targetUrls(RulesetRuleActionParameterFromValueTargetUrlArgs... targetUrls) {
            return targetUrls(List.of(targetUrls));
        }

        public RulesetRuleActionParameterFromValueArgs build() {
            $.preserveQueryString = Objects.requireNonNull($.preserveQueryString, "expected parameter 'preserveQueryString' to be non-null");
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            $.targetUrls = Objects.requireNonNull($.targetUrls, "expected parameter 'targetUrls' to be non-null");
            return $;
        }
    }

}
