// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.RulesetRuleActionParameterCacheKeyCustomKeyCookieArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParameterCacheKeyCustomKeyHeaderArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParameterCacheKeyCustomKeyHostArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParameterCacheKeyCustomKeyQueryStringArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParameterCacheKeyCustomKeyUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class RulesetRuleActionParameterCacheKeyCustomKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetRuleActionParameterCacheKeyCustomKeyArgs Empty = new RulesetRuleActionParameterCacheKeyCustomKeyArgs();

    @Import(name="cookies", required=true)
    private Output<List<RulesetRuleActionParameterCacheKeyCustomKeyCookieArgs>> cookies;

    public Output<List<RulesetRuleActionParameterCacheKeyCustomKeyCookieArgs>> cookies() {
        return this.cookies;
    }

    @Import(name="headers", required=true)
    private Output<List<RulesetRuleActionParameterCacheKeyCustomKeyHeaderArgs>> headers;

    public Output<List<RulesetRuleActionParameterCacheKeyCustomKeyHeaderArgs>> headers() {
        return this.headers;
    }

    @Import(name="hosts", required=true)
    private Output<List<RulesetRuleActionParameterCacheKeyCustomKeyHostArgs>> hosts;

    public Output<List<RulesetRuleActionParameterCacheKeyCustomKeyHostArgs>> hosts() {
        return this.hosts;
    }

    @Import(name="queryStrings", required=true)
    private Output<List<RulesetRuleActionParameterCacheKeyCustomKeyQueryStringArgs>> queryStrings;

    public Output<List<RulesetRuleActionParameterCacheKeyCustomKeyQueryStringArgs>> queryStrings() {
        return this.queryStrings;
    }

    @Import(name="users", required=true)
    private Output<List<RulesetRuleActionParameterCacheKeyCustomKeyUserArgs>> users;

    public Output<List<RulesetRuleActionParameterCacheKeyCustomKeyUserArgs>> users() {
        return this.users;
    }

    private RulesetRuleActionParameterCacheKeyCustomKeyArgs() {}

    private RulesetRuleActionParameterCacheKeyCustomKeyArgs(RulesetRuleActionParameterCacheKeyCustomKeyArgs $) {
        this.cookies = $.cookies;
        this.headers = $.headers;
        this.hosts = $.hosts;
        this.queryStrings = $.queryStrings;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetRuleActionParameterCacheKeyCustomKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetRuleActionParameterCacheKeyCustomKeyArgs $;

        public Builder() {
            $ = new RulesetRuleActionParameterCacheKeyCustomKeyArgs();
        }

        public Builder(RulesetRuleActionParameterCacheKeyCustomKeyArgs defaults) {
            $ = new RulesetRuleActionParameterCacheKeyCustomKeyArgs(Objects.requireNonNull(defaults));
        }

        public Builder cookies(Output<List<RulesetRuleActionParameterCacheKeyCustomKeyCookieArgs>> cookies) {
            $.cookies = cookies;
            return this;
        }

        public Builder cookies(List<RulesetRuleActionParameterCacheKeyCustomKeyCookieArgs> cookies) {
            return cookies(Output.of(cookies));
        }

        public Builder cookies(RulesetRuleActionParameterCacheKeyCustomKeyCookieArgs... cookies) {
            return cookies(List.of(cookies));
        }

        public Builder headers(Output<List<RulesetRuleActionParameterCacheKeyCustomKeyHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(List<RulesetRuleActionParameterCacheKeyCustomKeyHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        public Builder headers(RulesetRuleActionParameterCacheKeyCustomKeyHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        public Builder hosts(Output<List<RulesetRuleActionParameterCacheKeyCustomKeyHostArgs>> hosts) {
            $.hosts = hosts;
            return this;
        }

        public Builder hosts(List<RulesetRuleActionParameterCacheKeyCustomKeyHostArgs> hosts) {
            return hosts(Output.of(hosts));
        }

        public Builder hosts(RulesetRuleActionParameterCacheKeyCustomKeyHostArgs... hosts) {
            return hosts(List.of(hosts));
        }

        public Builder queryStrings(Output<List<RulesetRuleActionParameterCacheKeyCustomKeyQueryStringArgs>> queryStrings) {
            $.queryStrings = queryStrings;
            return this;
        }

        public Builder queryStrings(List<RulesetRuleActionParameterCacheKeyCustomKeyQueryStringArgs> queryStrings) {
            return queryStrings(Output.of(queryStrings));
        }

        public Builder queryStrings(RulesetRuleActionParameterCacheKeyCustomKeyQueryStringArgs... queryStrings) {
            return queryStrings(List.of(queryStrings));
        }

        public Builder users(Output<List<RulesetRuleActionParameterCacheKeyCustomKeyUserArgs>> users) {
            $.users = users;
            return this;
        }

        public Builder users(List<RulesetRuleActionParameterCacheKeyCustomKeyUserArgs> users) {
            return users(Output.of(users));
        }

        public Builder users(RulesetRuleActionParameterCacheKeyCustomKeyUserArgs... users) {
            return users(List.of(users));
        }

        public RulesetRuleActionParameterCacheKeyCustomKeyArgs build() {
            $.cookies = Objects.requireNonNull($.cookies, "expected parameter 'cookies' to be non-null");
            $.headers = Objects.requireNonNull($.headers, "expected parameter 'headers' to be non-null");
            $.hosts = Objects.requireNonNull($.hosts, "expected parameter 'hosts' to be non-null");
            $.queryStrings = Objects.requireNonNull($.queryStrings, "expected parameter 'queryStrings' to be non-null");
            $.users = Objects.requireNonNull($.users, "expected parameter 'users' to be non-null");
            return $;
        }
    }

}
