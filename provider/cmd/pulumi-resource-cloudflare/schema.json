{
    "name": "cloudflare",
    "description": "A Pulumi package for creating and managing Cloudflare cloud resources.",
    "keywords": [
        "pulumi",
        "cloudflare"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`cloudflare` Terraform Provider](https://github.com/cloudflare/terraform-provider-cloudflare).",
    "repository": "https://github.com/pulumi/pulumi-cloudflare",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "cloudflare": "Cloudflare"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-cloudflare/sdk/v4/go/cloudflare"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Cloudflare cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/cloudflare/terraform-provider-cloudflare)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-cloudflare` repo](https://github.com/pulumi/pulumi-cloudflare/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`cloudflare/terraform-provider-cloudflare` repo](https://github.com/cloudflare/terraform-provider-cloudflare/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/cloudflare/terraform-provider-cloudflare)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-cloudflare` repo](https://github.com/pulumi/pulumi-cloudflare/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`cloudflare/terraform-provider-cloudflare` repo](https://github.com/cloudflare/terraform-provider-cloudflare/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "accountId": {
                "type": "string",
                "description": "Configure API client to always use that account\n"
            },
            "apiBasePath": {
                "type": "string",
                "description": "Configure the base path used by the API client\n"
            },
            "apiClientLogging": {
                "type": "boolean",
                "description": "Whether to print logs from the API client (using the default log library logger)\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_API_CLIENT_LOGGING"
                    ]
                }
            },
            "apiHostname": {
                "type": "string",
                "description": "Configure the hostname used by the API client\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key for operations.\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The API Token for operations.\n"
            },
            "apiUserServiceKey": {
                "type": "string",
                "description": "A special Cloudflare API key good for a restricted set of endpoints\n"
            },
            "email": {
                "type": "string",
                "description": "A registered Cloudflare email address\n"
            },
            "maxBackoff": {
                "type": "integer",
                "description": "Maximum backoff period in seconds after failed API calls\n",
                "default": 30,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_MAX_BACKOFF"
                    ]
                }
            },
            "minBackoff": {
                "type": "integer",
                "description": "Minimum backoff period in seconds after failed API calls\n",
                "default": 1,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_MIN_BACKOFF"
                    ]
                }
            },
            "retries": {
                "type": "integer",
                "description": "Maximum number of retries to perform when an API request fails\n",
                "default": 3,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_RETRIES"
                    ]
                }
            },
            "rps": {
                "type": "integer",
                "description": "RPS limit to apply when making calls to the API\n",
                "default": 4,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_RPS"
                    ]
                }
            }
        }
    },
    "types": {
        "cloudflare:index/AccessApplicationCorsHeader:AccessApplicationCorsHeader": {
            "properties": {
                "allowAllHeaders": {
                    "type": "boolean",
                    "description": "Boolean value to determine whether all\nHTTP headers are exposed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowAllMethods": {
                    "type": "boolean",
                    "description": "Boolean value to determine whether all\nmethods are exposed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowAllOrigins": {
                    "type": "boolean",
                    "description": "Boolean value to determine whether all\norigins are permitted to make CORS requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Boolean value to determine if credentials\n(cookies, authorization headers, or TLS client certificates) are included with\nrequests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of HTTP headers to expose via CORS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of methods to expose via CORS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of origins permitted to make CORS requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Integer representing the maximum time a preflight\nrequest will be cached.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupExclude:AccessGroupExclude": {
            "properties": {
                "anyValidServiceToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupExcludeAzure:AccessGroupExcludeAzure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "commonName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "devicePostures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "everyone": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "githubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupExcludeGithub:AccessGroupExcludeGithub"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gsuites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupExcludeGsuite:AccessGroupExcludeGsuite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loginMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oktas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupExcludeOkta:AccessGroupExcludeOkta"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupExcludeSaml:AccessGroupExcludeSaml"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTokens": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupExcludeAzure:AccessGroupExcludeAzure": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupExcludeGithub:AccessGroupExcludeGithub": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupExcludeGsuite:AccessGroupExcludeGsuite": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupExcludeOkta:AccessGroupExcludeOkta": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Friendly name of the Access Group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupExcludeSaml:AccessGroupExcludeSaml": {
            "properties": {
                "attributeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupInclude:AccessGroupInclude": {
            "properties": {
                "anyValidServiceToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupIncludeAzure:AccessGroupIncludeAzure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "commonName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "devicePostures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "everyone": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "githubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupIncludeGithub:AccessGroupIncludeGithub"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gsuites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupIncludeGsuite:AccessGroupIncludeGsuite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loginMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oktas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupIncludeOkta:AccessGroupIncludeOkta"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupIncludeSaml:AccessGroupIncludeSaml"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTokens": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupIncludeAzure:AccessGroupIncludeAzure": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupIncludeGithub:AccessGroupIncludeGithub": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupIncludeGsuite:AccessGroupIncludeGsuite": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupIncludeOkta:AccessGroupIncludeOkta": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Friendly name of the Access Group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupIncludeSaml:AccessGroupIncludeSaml": {
            "properties": {
                "attributeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupRequire:AccessGroupRequire": {
            "properties": {
                "anyValidServiceToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupRequireAzure:AccessGroupRequireAzure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "commonName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "devicePostures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "everyone": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "githubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupRequireGithub:AccessGroupRequireGithub"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gsuites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupRequireGsuite:AccessGroupRequireGsuite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loginMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oktas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupRequireOkta:AccessGroupRequireOkta"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupRequireSaml:AccessGroupRequireSaml"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTokens": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupRequireAzure:AccessGroupRequireAzure": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupRequireGithub:AccessGroupRequireGithub": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupRequireGsuite:AccessGroupRequireGsuite": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupRequireOkta:AccessGroupRequireOkta": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Friendly name of the Access Group.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessGroupRequireSaml:AccessGroupRequireSaml": {
            "properties": {
                "attributeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessIdentityProviderConfig:AccessIdentityProviderConfig": {
            "properties": {
                "apiToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appsDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "centrifyAccount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "centrifyAppId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certsUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "directoryId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailAttributeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idpPublicCert": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuerUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oktaAccount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oneloginAccount": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redirectUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signRequest": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssoTargetUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportGroups": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "redirectUrl"
                    ]
                }
            }
        },
        "cloudflare:index/AccessPolicyApprovalGroup:AccessPolicyApprovalGroup": {
            "properties": {
                "approvalsNeeded": {
                    "type": "integer",
                    "description": "Number of approvals needed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of emails to request approval from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailListUuid": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "approvalsNeeded"
            ]
        },
        "cloudflare:index/AccessPolicyExclude:AccessPolicyExclude": {
            "properties": {
                "anyValidServiceToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyExcludeAzure:AccessPolicyExcludeAzure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "commonName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "devicePostures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "everyone": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "githubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyExcludeGithub:AccessPolicyExcludeGithub"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gsuites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyExcludeGsuite:AccessPolicyExcludeGsuite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loginMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oktas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyExcludeOkta:AccessPolicyExcludeOkta"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyExcludeSaml:AccessPolicyExcludeSaml"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTokens": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyExcludeAzure:AccessPolicyExcludeAzure": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyExcludeGithub:AccessPolicyExcludeGithub": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyExcludeGsuite:AccessPolicyExcludeGsuite": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyExcludeOkta:AccessPolicyExcludeOkta": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Friendly name of the Access Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyExcludeSaml:AccessPolicyExcludeSaml": {
            "properties": {
                "attributeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyInclude:AccessPolicyInclude": {
            "properties": {
                "anyValidServiceToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyIncludeAzure:AccessPolicyIncludeAzure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "commonName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "devicePostures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "everyone": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "githubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyIncludeGithub:AccessPolicyIncludeGithub"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gsuites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyIncludeGsuite:AccessPolicyIncludeGsuite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loginMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oktas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyIncludeOkta:AccessPolicyIncludeOkta"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyIncludeSaml:AccessPolicyIncludeSaml"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTokens": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyIncludeAzure:AccessPolicyIncludeAzure": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyIncludeGithub:AccessPolicyIncludeGithub": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyIncludeGsuite:AccessPolicyIncludeGsuite": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyIncludeOkta:AccessPolicyIncludeOkta": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Friendly name of the Access Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyIncludeSaml:AccessPolicyIncludeSaml": {
            "properties": {
                "attributeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyRequire:AccessPolicyRequire": {
            "properties": {
                "anyValidServiceToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyRequireAzure:AccessPolicyRequireAzure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "commonName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "devicePostures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailDomains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "everyone": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "githubs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyRequireGithub:AccessPolicyRequireGithub"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gsuites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyRequireGsuite:AccessPolicyRequireGsuite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loginMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "oktas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyRequireOkta:AccessPolicyRequireOkta"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyRequireSaml:AccessPolicyRequireSaml"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceTokens": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyRequireAzure:AccessPolicyRequireAzure": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyRequireGithub:AccessPolicyRequireGithub": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyRequireGsuite:AccessPolicyRequireGsuite": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyRequireOkta:AccessPolicyRequireOkta": {
            "properties": {
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Friendly name of the Access Application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessPolicyRequireSaml:AccessPolicyRequireSaml": {
            "properties": {
                "attributeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityProviderId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/AccessRuleConfiguration:AccessRuleConfiguration": {
            "properties": {
                "target": {
                    "type": "string",
                    "description": "The request property to target. Allowed values: \"ip\", \"ip6\", \"ip_range\", \"asn\", \"country\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The value to target. Depends on target's type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "target",
                "value"
            ]
        },
        "cloudflare:index/ApiTokenCondition:ApiTokenCondition": {
            "properties": {
                "requestIp": {
                    "$ref": "#/types/cloudflare:index/ApiTokenConditionRequestIp:ApiTokenConditionRequestIp",
                    "description": "Request IP related conditions. See the definition below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/ApiTokenConditionRequestIp:ApiTokenConditionRequestIp": {
            "properties": {
                "ins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IPv4/IPv6 CIDR addresses where\nthe Token can be used from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notIns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IPv4/IPv6 CIDR addresses where\nthe Token cannot be used from.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/ApiTokenPolicy:ApiTokenPolicy": {
            "properties": {
                "effect": {
                    "type": "string",
                    "description": "Policy effect. Valid values are `allow` or `deny`. `allow`\nis set as default.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "permissionGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of permissions groups\nids ([see official docs](https://developers.cloudflare.com/api/tokens/create/permissions)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map describes what operations against which resources\nare allowed or denied.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "permissionGroups",
                "resources"
            ]
        },
        "cloudflare:index/CertificatePackValidationError:CertificatePackValidationError": {
            "properties": {
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "message"
                    ]
                }
            }
        },
        "cloudflare:index/CertificatePackValidationRecord:CertificatePackValidationRecord": {
            "properties": {
                "cnameName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameTarget": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpBody": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "txtName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "txtValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cnameName",
                        "cnameTarget",
                        "emails",
                        "httpBody",
                        "httpUrl",
                        "txtName",
                        "txtValue"
                    ]
                }
            }
        },
        "cloudflare:index/CustomHostnameSsl:CustomHostnameSsl": {
            "properties": {
                "certificateAuthority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customCertificate": {
                    "type": "string",
                    "description": "If a custom uploaded certificate is used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customKey": {
                    "type": "string",
                    "description": "The key for a custom uploaded certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "Domain control validation (DCV) method used for this\nhostname. Valid values are `\"txt\"`, `\"http\"` and `\"email\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CustomHostnameSslSetting:CustomHostnameSslSetting"
                    },
                    "description": "SSL/TLS settings for the certificate. See further notes below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Level of validation to be used for this hostname. Domain validation (\"dv\") must be used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validationErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CustomHostnameSslValidationError:CustomHostnameSslValidationError"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validationRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CustomHostnameSslValidationRecord:CustomHostnameSslValidationRecord"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wildcard": {
                    "type": "boolean",
                    "description": "Indicates whether the certificate covers a wildcard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateAuthority",
                        "settings",
                        "status",
                        "validationErrors",
                        "validationRecords"
                    ]
                }
            }
        },
        "cloudflare:index/CustomHostnameSslSetting:CustomHostnameSslSetting": {
            "properties": {
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of SSL/TLS ciphers to associate with this certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "earlyHints": {
                    "type": "string",
                    "description": "Whether or not early hints should be supported. Valid values are `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http2": {
                    "type": "string",
                    "description": "Whether or not HTTP2 should be supported. Valid values are `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "Lowest version of TLS this certificate should\nsupport. Valid values are `\"1.0\"`, `\"1.1\"`, `\"1.2\"` and `\"1.3\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls13": {
                    "type": "string",
                    "description": "Whether or not TLSv1.3 should be supported. Valid values are `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/CustomHostnameSslValidationError:CustomHostnameSslValidationError": {
            "properties": {
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "message"
                    ]
                }
            }
        },
        "cloudflare:index/CustomHostnameSslValidationRecord:CustomHostnameSslValidationRecord": {
            "properties": {
                "cnameName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameTarget": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpBody": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "txtName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "txtValue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cnameName",
                        "cnameTarget",
                        "emails",
                        "httpBody",
                        "httpUrl",
                        "txtName",
                        "txtValue"
                    ]
                }
            }
        },
        "cloudflare:index/CustomSslCustomSslOptions:CustomSslCustomSslOptions": {
            "properties": {
                "bundleMethod": {
                    "type": "string",
                    "description": "Method of building intermediate certificate chain. A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it. Valid values are `ubiquitous` (default), `optimal`, `force`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificate": {
                    "type": "string",
                    "description": "Certificate certificate and the intermediate(s)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoRestrictions": {
                    "type": "string",
                    "description": "Specifies the region where your private key can be held locally. Valid values are `us`, `eu`, `highest_security`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privateKey": {
                    "type": "string",
                    "description": "Certificate's private key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Whether to enable support for legacy clients which do not include SNI in the TLS handshake. Valid values are `legacy_custom` (default), `sni_custom`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/CustomSslCustomSslPriority:CustomSslCustomSslPriority": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/DevicePostureIntegrationConfig:DevicePostureIntegrationConfig": {
            "properties": {
                "apiUrl": {
                    "type": "string",
                    "description": "The third-party API's URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authUrl": {
                    "type": "string",
                    "description": "The third-party authorization API URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "The client identifier for authenticating API calls.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The client secret for authenticating API calls.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/DevicePostureRuleInput:DevicePostureRuleInput": {
            "properties": {
                "complianceStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "description": "= (Required) The domain that the client must join.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "= (Required) True if the firewall must be enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exists": {
                    "type": "boolean",
                    "description": "Checks if the file should exist.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The Teams List id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "description": "= (Required) The version comparison operator in (\u003e,\u003e=,\u003c,\u003c=,==)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to the application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requireAll": {
                    "type": "boolean",
                    "description": "= (Required) True if all drives must be encrypted.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "running": {
                    "type": "boolean",
                    "description": "Checks if the application should be running.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sha256": {
                    "type": "string",
                    "description": "The sha256 hash of the file.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The thumbprint of the application certificate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "= (Required) The operating system semantic version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "exists",
                        "requireAll",
                        "running"
                    ]
                }
            }
        },
        "cloudflare:index/DevicePostureRuleMatch:DevicePostureRuleMatch": {
            "properties": {
                "platform": {
                    "type": "string",
                    "description": "The platform of the device. Valid values are `windows`, `mac`, `linux`, `android`, and `ios`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/FallbackDomainDomain:FallbackDomainDomain": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The DNS servers to receive the redirected request.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "suffix": {
                    "type": "string",
                    "description": "The domain to ignore DNS requests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/HealthcheckHeader:HealthcheckHeader": {
            "properties": {
                "header": {
                    "type": "string",
                    "description": "The header name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of string values for the header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "header",
                "values"
            ]
        },
        "cloudflare:index/IpListItem:IpListItem": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A note that can be used to annotate the item.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The IPv4 address, IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "cloudflare:index/LoadBalancerMonitorHeader:LoadBalancerMonitorHeader": {
            "properties": {
                "header": {
                    "type": "string",
                    "description": "The header name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of string values for the header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "header",
                "values"
            ]
        },
        "cloudflare:index/LoadBalancerPoolLoadShedding:LoadBalancerPoolLoadShedding": {
            "properties": {
                "defaultPercent": {
                    "type": "number",
                    "description": "Percent of traffic to shed 0 - 100.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultPolicy": {
                    "type": "string",
                    "description": "Method of shedding traffic \"\", \"hash\" or \"random\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionPercent": {
                    "type": "number",
                    "description": "Percent of session traffic to shed 0 - 100.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionPolicy": {
                    "type": "string",
                    "description": "Method of shedding session traffic \"\" or \"hash\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/LoadBalancerPoolOrigin:LoadBalancerPoolOrigin": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPoolOriginHeader:LoadBalancerPoolOriginHeader"
                    },
                    "description": "The header name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A human-identifiable name for the origin.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "number",
                    "description": "The weight (0.01 - 1.00) of this origin, relative to other origins in the pool. Equal values mean equal weighting. A weight of 0 means traffic will not be sent to this origin, but health is still checked. Default: 1.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "name"
            ]
        },
        "cloudflare:index/LoadBalancerPoolOriginHeader:LoadBalancerPoolOriginHeader": {
            "properties": {
                "header": {
                    "type": "string",
                    "description": "The header name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of string values for the header.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "header",
                "values"
            ]
        },
        "cloudflare:index/LoadBalancerPoolOriginSteering:LoadBalancerPoolOriginSteering": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Either \"random\" (default) or \"hash\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/LoadBalancerPopPool:LoadBalancerPopPool": {
            "properties": {
                "poolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of pool IDs in failover priority to use for traffic reaching the given PoP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pop": {
                    "type": "string",
                    "description": "A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the [status page](https://www.cloudflarestatus.com/). Multiple entries should not be specified with the same PoP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "poolIds",
                "pop"
            ]
        },
        "cloudflare:index/LoadBalancerRegionPool:LoadBalancerRegionPool": {
            "properties": {
                "poolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of pool IDs in failover priority to use for traffic reaching the given PoP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "A region code which must be in the list defined [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions). Multiple entries should not be specified with the same region.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "poolIds",
                "region"
            ]
        },
        "cloudflare:index/LoadBalancerRule:LoadBalancerRule": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "The statement to evaluate to determine if this rules effects should be applied. An empty condition is always true. See [load balancing rules](https://developers.cloudflare.com/load-balancing/understand-basics/load-balancing-rules).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "description": "A disabled rule will be be executed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fixedResponse": {
                    "$ref": "#/types/cloudflare:index/LoadBalancerRuleFixedResponse:LoadBalancerRuleFixedResponse",
                    "description": "Settings for a HTTP response to return directly to the eyeball if the condition is true. Note: overrides or fixed_response must be set. See the field documentation below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Human readable name for this rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerRuleOverride:LoadBalancerRuleOverride"
                    },
                    "description": "The Load Balancer settings to alter if this rules condition is true. Note: overrides or fixed_response must be set. See the field documentation below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority used when determining the order of rule execution. Lower values are executed first. If not provided list order will be used.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "terminates": {
                    "type": "boolean",
                    "description": "Terminates indicates that if this rule is true no further rules should be executed. Note: setting a fixed_response forces this field to true.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "priority",
                        "terminates"
                    ]
                }
            }
        },
        "cloudflare:index/LoadBalancerRuleFixedResponse:LoadBalancerRuleFixedResponse": {
            "properties": {
                "contentType": {
                    "type": "string",
                    "description": "The value of the HTTP context-type header for this fixed response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "description": "The value of the HTTP location header for this fixed response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageBody": {
                    "type": "string",
                    "description": "The text used as the html body for this fixed response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "description": "The HTTP status code used for this fixed response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/LoadBalancerRuleOverride:LoadBalancerRuleOverride": {
            "properties": {
                "defaultPools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "See default_pool_ids above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fallbackPool": {
                    "type": "string",
                    "description": "See fallback_pool_id above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "popPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerRuleOverridePopPool:LoadBalancerRuleOverridePopPool"
                    },
                    "description": "See pop_pools above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regionPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerRuleOverrideRegionPool:LoadBalancerRuleOverrideRegionPool"
                    },
                    "description": "See region_pools above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "See field above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionAffinityAttributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "See field above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sessionAffinityTtl": {
                    "type": "integer",
                    "description": "See field above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "steeringPolicy": {
                    "type": "string",
                    "description": "See field above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "See field above.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/LoadBalancerRuleOverridePopPool:LoadBalancerRuleOverridePopPool": {
            "properties": {
                "poolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of pool IDs in failover priority to use for traffic reaching the given PoP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pop": {
                    "type": "string",
                    "description": "A 3-letter code for the Point-of-Presence. Allowed values can be found in the list of datacenters on the [status page](https://www.cloudflarestatus.com/). Multiple entries should not be specified with the same PoP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "poolIds",
                "pop"
            ]
        },
        "cloudflare:index/LoadBalancerRuleOverrideRegionPool:LoadBalancerRuleOverrideRegionPool": {
            "properties": {
                "poolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of pool IDs in failover priority to use for traffic reaching the given PoP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "A region code which must be in the list defined [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions). Multiple entries should not be specified with the same region.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "poolIds",
                "region"
            ]
        },
        "cloudflare:index/NotificationPolicyEmailIntegration:NotificationPolicyEmailIntegration": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "cloudflare:index/NotificationPolicyFilters:NotificationPolicyFilters": {
            "properties": {
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "State of the pool to alert on. Example: `\"true\"`, `\"false\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "healthCheckIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Identifier health check.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limits": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A numerical limit. Example: `\"100\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "poolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Load balancer pool identifier.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Product name. Available values: `\"worker_requests\"`, `\"worker_durable_objects_requests\"`, `\"worker_durable_objects_duration\"`, `\"worker_durable_objects_data_transfer\"`, `\"worker_durable_objects_stored_data\"`, `\"worker_durable_objects_storage_deletes\"`, `\"worker_durable_objects_storage_writes\"`, `\"worker_durable_objects_storage_reads\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A numerical limit. Example: `\"99.9\"`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Status to alert on. Example: `\"Unhealthy\"`, `\"Healthy\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of zone identifiers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/NotificationPolicyPagerdutyIntegration:NotificationPolicyPagerdutyIntegration": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "cloudflare:index/NotificationPolicyWebhooksIntegration:NotificationPolicyWebhooksIntegration": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification policy.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "cloudflare:index/PageRuleActions:PageRuleActions": {
            "properties": {
                "alwaysOnline": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alwaysUseHttps": {
                    "type": "boolean",
                    "description": "Boolean of whether this action is enabled. Default: false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "automaticHttpsRewrites": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserCacheTtl": {
                    "type": "string",
                    "description": "The Time To Live for the browser cache. `0` means 'Respect Existing Headers'\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserCheck": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bypassCacheOnCookie": {
                    "type": "string",
                    "description": "String value of cookie name to conditionally bypass cache the page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheByDeviceType": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheDeceptionArmor": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheKeyFields": {
                    "$ref": "#/types/cloudflare:index/PageRuleActionsCacheKeyFields:PageRuleActionsCacheKeyFields",
                    "description": "Controls how Cloudflare creates Cache Keys used to identify files in cache. See below for full description.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheLevel": {
                    "type": "string",
                    "description": "Whether to set the cache level to `\"bypass\"`, `\"basic\"`, `\"simplified\"`, `\"aggressive\"`, or `\"cache_everything\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheOnCookie": {
                    "type": "string",
                    "description": "String value of cookie name to conditionally cache the page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheTtlByStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/PageRuleActionsCacheTtlByStatus:PageRuleActionsCacheTtlByStatus"
                    },
                    "description": "Set cache TTL based on the response status from the origin web server. Can be specified multiple times. See below for full description.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableApps": {
                    "type": "boolean",
                    "description": "Boolean of whether this action is enabled. Default: false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disablePerformance": {
                    "type": "boolean",
                    "description": "Boolean of whether this action is enabled. Default: false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableRailgun": {
                    "type": "boolean",
                    "description": "Boolean of whether this action is enabled. Default: false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableSecurity": {
                    "type": "boolean",
                    "description": "Boolean of whether this action is enabled. Default: false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableZaraz": {
                    "type": "boolean",
                    "description": "Boolean of whether this action is enabled. Default: false.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "edgeCacheTtl": {
                    "type": "integer",
                    "description": "The Time To Live for the edge cache.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailObfuscation": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "explicitCacheControl": {
                    "type": "string",
                    "description": "Whether origin Cache-Control action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardingUrl": {
                    "$ref": "#/types/cloudflare:index/PageRuleActionsForwardingUrl:PageRuleActionsForwardingUrl",
                    "description": "The URL to forward to, and with what status. See below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostHeaderOverride": {
                    "type": "string",
                    "description": "Value of the Host header to send.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipGeolocation": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minifies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/PageRuleActionsMinify:PageRuleActionsMinify"
                    },
                    "description": "The configuration for HTML, CSS and JS minification. See below for full list of options.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mirage": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opportunisticEncryption": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "originErrorPagePassThru": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "polish": {
                    "type": "string",
                    "description": "Whether this action is `\"off\"`, `\"lossless\"` or `\"lossy\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resolveOverride": {
                    "type": "string",
                    "description": "Overridden origin server name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "respectStrongEtag": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseBuffering": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rocketLoader": {
                    "type": "string",
                    "description": "Whether to set the rocket loader to `\"on\"`, `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityLevel": {
                    "type": "string",
                    "description": "Whether to set the security level to `\"off\"`, `\"essentially_off\"`, `\"low\"`, `\"medium\"`, `\"high\"`, or `\"under_attack\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideExclude": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQueryStringForCache": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "Whether to set the SSL mode to `\"off\"`, `\"flexible\"`, `\"full\"`, `\"strict\"`, or `\"origin_pull\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trueClientIpHeader": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waf": {
                    "type": "string",
                    "description": "Whether this action is `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/PageRuleActionsCacheKeyFields:PageRuleActionsCacheKeyFields": {
            "properties": {
                "cookie": {
                    "$ref": "#/types/cloudflare:index/PageRuleActionsCacheKeyFieldsCookie:PageRuleActionsCacheKeyFieldsCookie",
                    "description": "Controls what cookies go into Cache Key:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "header": {
                    "$ref": "#/types/cloudflare:index/PageRuleActionsCacheKeyFieldsHeader:PageRuleActionsCacheKeyFieldsHeader",
                    "description": "Controls what HTTP headers go into Cache Key:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "$ref": "#/types/cloudflare:index/PageRuleActionsCacheKeyFieldsHost:PageRuleActionsCacheKeyFieldsHost",
                    "description": "Controls which Host header goes into Cache Key:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryString": {
                    "$ref": "#/types/cloudflare:index/PageRuleActionsCacheKeyFieldsQueryString:PageRuleActionsCacheKeyFieldsQueryString",
                    "description": "Controls which URL query string parameters go into the Cache Key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "user": {
                    "$ref": "#/types/cloudflare:index/PageRuleActionsCacheKeyFieldsUser:PageRuleActionsCacheKeyFieldsUser",
                    "description": "Controls which end user-related features go into the Cache Key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cookie",
                "header",
                "host",
                "queryString",
                "user"
            ]
        },
        "cloudflare:index/PageRuleActionsCacheKeyFieldsCookie:PageRuleActionsCacheKeyFieldsCookie": {
            "properties": {
                "checkPresences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Check for presence of specified HTTP headers, without including their actual values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only use values of specified query string parameters in Cache Key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "checkPresences",
                        "includes"
                    ]
                }
            }
        },
        "cloudflare:index/PageRuleActionsCacheKeyFieldsHeader:PageRuleActionsCacheKeyFieldsHeader": {
            "properties": {
                "checkPresences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Check for presence of specified HTTP headers, without including their actual values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Exclude these query string parameters from Cache Key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only use values of specified query string parameters in Cache Key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "checkPresences",
                        "excludes",
                        "includes"
                    ]
                }
            }
        },
        "cloudflare:index/PageRuleActionsCacheKeyFieldsHost:PageRuleActionsCacheKeyFieldsHost": {
            "properties": {
                "resolved": {
                    "type": "boolean",
                    "description": "`false` (default) - includes the Host header in the HTTP request sent to the origin; `true` - includes the Host header that was resolved to get the origin IP for the request (e.g. changed with Resolve Override Page Rule).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/PageRuleActionsCacheKeyFieldsQueryString:PageRuleActionsCacheKeyFieldsQueryString": {
            "properties": {
                "excludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Exclude these query string parameters from Cache Key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ignore": {
                    "type": "boolean",
                    "description": "`false` (default) - all query string parameters are used for Cache Key, unless explicitly excluded; `true` - all query string parameters are ignored; value is ignored if any of `exclude` or `include` is non-empty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only use values of specified query string parameters in Cache Key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "excludes",
                        "ignore",
                        "includes"
                    ]
                }
            }
        },
        "cloudflare:index/PageRuleActionsCacheKeyFieldsUser:PageRuleActionsCacheKeyFieldsUser": {
            "properties": {
                "deviceType": {
                    "type": "boolean",
                    "description": "`true` - classifies a request as “mobile”, “desktop”, or “tablet” based on the User Agent; defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geo": {
                    "type": "boolean",
                    "description": "`true` - includes the client’s country, derived from the IP address; defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lang": {
                    "type": "boolean",
                    "description": "`true` - includes the first language code contained in the `Accept-Language` header sent by the client; defaults to `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deviceType",
                        "geo",
                        "lang"
                    ]
                }
            }
        },
        "cloudflare:index/PageRuleActionsCacheTtlByStatus:PageRuleActionsCacheTtlByStatus": {
            "properties": {
                "codes": {
                    "type": "string",
                    "description": "A HTTP code (e.g. `404`) or range of codes (e.g. `400-499`)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "Duration a resource lives in the Cloudflare cache.\n* positive number - cache for specified duration in seconds\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "codes",
                "ttl"
            ]
        },
        "cloudflare:index/PageRuleActionsForwardingUrl:PageRuleActionsForwardingUrl": {
            "properties": {
                "statusCode": {
                    "type": "integer",
                    "description": "The status code to use for the redirection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL to which the page rule should forward.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "statusCode",
                "url"
            ]
        },
        "cloudflare:index/PageRuleActionsMinify:PageRuleActionsMinify": {
            "properties": {
                "css": {
                    "type": "string",
                    "description": "Whether CSS should be minified. Valid values are `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "description": "Whether HTML should be minified. Valid values are `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "js": {
                    "type": "string",
                    "description": "Whether Javascript should be minified. Valid values are `\"on\"` or `\"off\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "css",
                "html",
                "js"
            ]
        },
        "cloudflare:index/RateLimitAction:RateLimitAction": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "The type of action to perform. Allowable values are 'simulate', 'ban', 'challenge', 'js_challenge' and 'managed_challenge'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "response": {
                    "$ref": "#/types/cloudflare:index/RateLimitActionResponse:RateLimitActionResponse",
                    "description": "Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "The time in seconds as an integer to perform the mitigation action. This field is required if the `mode` is either `simulate` or `ban`. Must be the same or greater than the period (min: 1, max: 86400).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "cloudflare:index/RateLimitActionResponse:RateLimitActionResponse": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The body to return, the content here should conform to the content_type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentType": {
                    "type": "string",
                    "description": "The content-type of the body, must be one of: 'text/plain', 'text/xml', 'application/json'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "body",
                "contentType"
            ]
        },
        "cloudflare:index/RateLimitCorrelate:RateLimitCorrelate": {
            "properties": {
                "by": {
                    "type": "string",
                    "description": "If set to 'nat', NAT support will be enabled for rate limiting.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RateLimitMatch:RateLimitMatch": {
            "properties": {
                "request": {
                    "$ref": "#/types/cloudflare:index/RateLimitMatchRequest:RateLimitMatchRequest",
                    "description": "Matches HTTP requests (from the client to Cloudflare). See definition below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "response": {
                    "$ref": "#/types/cloudflare:index/RateLimitMatchResponse:RateLimitMatchResponse",
                    "description": "Custom content-type and body to return, this overrides the custom error for the zone. This field is not required. Omission will result in default HTML error page. Definition below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "request",
                        "response"
                    ]
                }
            }
        },
        "cloudflare:index/RateLimitMatchRequest:RateLimitMatchRequest": {
            "properties": {
                "methods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "HTTP Methods, can be a subset ['POST','PUT'] or all ['\\_ALL\\_']. Default: ['\\_ALL\\_'].\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "schemes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "HTTP Schemes, can be one ['HTTPS'], both ['HTTP','HTTPS'] or all ['\\_ALL\\_'].  Default: ['\\_ALL\\_'].\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlPattern": {
                    "type": "string",
                    "description": "The URL pattern to match comprised of the host and path, i.e. example.org/path. Wildcard are expanded to match applicable traffic, query strings are not matched. Use * for all traffic to your zone. Default: '*'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "methods",
                        "schemes",
                        "urlPattern"
                    ]
                }
            }
        },
        "cloudflare:index/RateLimitMatchResponse:RateLimitMatchResponse": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "block is a list of maps with the following attributes:\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "originTraffic": {
                    "type": "boolean",
                    "description": "Only count traffic that has come from your origin servers. If true, cached items that Cloudflare serve will not count towards rate limiting. Default: `true`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "HTTP Status codes, can be one [403], many [401,403] or indicate all by not providing this value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "originTraffic",
                        "statuses"
                    ]
                }
            }
        },
        "cloudflare:index/RecordData:RecordData": {
            "properties": {
                "algorithm": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "altitude": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "digest": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "digestType": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fingerprint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "flags": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keyTag": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latDegrees": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latDirection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latMinutes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latSeconds": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longDegrees": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longDirection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longMinutes": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "longSeconds": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchingType": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the record\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precisionHorz": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precisionVert": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preference": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the record\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proto": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "publicKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regex": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replacement": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "selector": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "integer",
                    "description": "The type of the record\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The (string) value of the record. Either this or `data` must be specified\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRule:RulesetRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to perform in the rule-level override. Valid values are `\"block\"`, `\"challenge\"`, `\"ddos_dynamic\"`, `\"execute\"`, `\"force_connection_close\"`, `\"js_challenge\"`, `\"managed_challenge\"`, `\"log\"`, `\"rewrite\"`, `\"score\"`, or `\"skip\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "actionParameters": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleActionParameters:RulesetRuleActionParameters",
                    "description": "List of parameters that configure the behavior of the ruleset rule action (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "Brief summary of the ruleset rule and its intended use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defines if the current rule-level override enables or disables the rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "exposedCredentialCheck": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleExposedCredentialCheck:RulesetRuleExposedCredentialCheck",
                    "description": "List of parameters that configure exposed credential checks (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "description": "Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID to apply the override to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logging": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleLogging:RulesetRuleLogging",
                    "description": "List parameters to configure how the rule generates logs (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ratelimit": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleRatelimit:RulesetRuleRatelimit",
                    "description": "List of parameters that configure HTTP rate limiting behaviour (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ref": {
                    "type": "string",
                    "description": "Rule reference.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expression",
                        "id",
                        "ref",
                        "version"
                    ]
                }
            }
        },
        "cloudflare:index/RulesetRuleActionParameters:RulesetRuleActionParameters": {
            "properties": {
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersHeader:RulesetRuleActionParametersHeader"
                    },
                    "description": "List of HTTP header modifications to perform in the ruleset rule (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostHeader": {
                    "type": "string",
                    "description": "Host Header that request origin receives.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID to apply the override to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increment": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matchedData": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersMatchedData:RulesetRuleActionParametersMatchedData",
                    "description": "List of properties to configure WAF payload logging (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "origin": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersOrigin:RulesetRuleActionParametersOrigin",
                    "description": "List of properties to change request origin (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrides": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersOverrides:RulesetRuleActionParametersOverrides",
                    "description": "List of override configurations to apply to the ruleset (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Products to target with the actions. Valid values are `\"bic\"`, `\"hot\"`, `\"ratelimit\"`, `\"securityLevel\"`, `\"uablock\"`, `\"waf\"` or `\"zonelockdown\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersResponse:RulesetRuleActionParametersResponse"
                    },
                    "description": "List of parameters that configure the response given to end users (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "List of rule-based overrides (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleset": {
                    "type": "string",
                    "description": "Which ruleset ID to target.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rulesets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of managed WAF rule IDs to target. Only valid when the \"action\" is set to skip.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uri": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersUri:RulesetRuleActionParametersUri",
                    "description": "List of URI properties to configure for the ruleset rule when performing URL rewrite transformations (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "version"
                    ]
                }
            }
        },
        "cloudflare:index/RulesetRuleActionParametersHeader:RulesetRuleActionParametersHeader": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the HTTP request header to target.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operation": {
                    "type": "string",
                    "description": "Action to perform on the HTTP request header. Valid values are `\"set\"` or `\"remove\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Static string value of the updated URI path or query string component. Conflicts with `expression`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersMatchedData:RulesetRuleActionParametersMatchedData": {
            "properties": {
                "publicKey": {
                    "type": "string",
                    "description": "Public key to use within WAF Ruleset payload logging to view the HTTP request parameters. You can generate a public key [using the `matched-data-cli` command-line tool](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/command-line/generate-key-pair) or [in the Cloudflare dashboard](https://developers.cloudflare.com/waf/managed-rulesets/payload-logging/configure).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersOrigin:RulesetRuleActionParametersOrigin": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Origin Hostname where request is sent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Oirign Port where request is sent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersOverrides:RulesetRuleActionParametersOverrides": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to perform in the rule-level override. Valid values are `\"block\"`, `\"challenge\"`, `\"ddos_dynamic\"`, `\"execute\"`, `\"force_connection_close\"`, `\"js_challenge\"`, `\"managed_challenge\"`, `\"log\"`, `\"rewrite\"`, `\"score\"`, or `\"skip\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersOverridesCategory:RulesetRuleActionParametersOverridesCategory"
                    },
                    "description": "List of tag-based overrides (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defines if the current rule-level override enables or disables the rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersOverridesRule:RulesetRuleActionParametersOverridesRule"
                    },
                    "description": "List of rule-based overrides (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersOverridesCategory:RulesetRuleActionParametersOverridesCategory": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to perform in the rule-level override. Valid values are `\"block\"`, `\"challenge\"`, `\"ddos_dynamic\"`, `\"execute\"`, `\"force_connection_close\"`, `\"js_challenge\"`, `\"managed_challenge\"`, `\"log\"`, `\"rewrite\"`, `\"score\"`, or `\"skip\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "category": {
                    "type": "string",
                    "description": "Tag name to apply the ruleset rule override to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defines if the current rule-level override enables or disables the rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersOverridesRule:RulesetRuleActionParametersOverridesRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to perform in the rule-level override. Valid values are `\"block\"`, `\"challenge\"`, `\"ddos_dynamic\"`, `\"execute\"`, `\"force_connection_close\"`, `\"js_challenge\"`, `\"managed_challenge\"`, `\"log\"`, `\"rewrite\"`, `\"score\"`, or `\"skip\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Defines if the current rule-level override enables or disables the rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID to apply the override to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scoreThreshold": {
                    "type": "integer",
                    "description": "Anomaly score threshold to apply in the ruleset rule override. Only applicable to modsecurity-based rulesets.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitivityLevel": {
                    "type": "string",
                    "description": "Sensitivity level for a ruleset rule override.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersResponse:RulesetRuleActionParametersResponse": {
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Body content to include in the response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contentType": {
                    "type": "string",
                    "description": "HTTP content type to send in the response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "description": "HTTP status code to send in the response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersUri:RulesetRuleActionParametersUri": {
            "properties": {
                "origin": {
                    "type": "boolean",
                    "description": "List of properties to change request origin (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersUriPath:RulesetRuleActionParametersUriPath",
                    "description": "URI path configuration when performing a URL rewrite (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "$ref": "#/types/cloudflare:index/RulesetRuleActionParametersUriQuery:RulesetRuleActionParametersUriQuery",
                    "description": "Query string configuration when performing a URL rewrite (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersUriPath:RulesetRuleActionParametersUriPath": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Static string value of the updated URI path or query string component. Conflicts with `expression`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleActionParametersUriQuery:RulesetRuleActionParametersUriQuery": {
            "properties": {
                "expression": {
                    "type": "string",
                    "description": "Expression that defines the updated (dynamic) value of the URI path or query string component. Conflicts with `value`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Static string value of the updated URI path or query string component. Conflicts with `expression`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleExposedCredentialCheck:RulesetRuleExposedCredentialCheck": {
            "properties": {
                "passwordExpression": {
                    "type": "string",
                    "description": "Firewall Rules expression language based on Wireshark display filters for where to check for the \"password\" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "usernameExpression": {
                    "type": "string",
                    "description": "Firewall Rules expression language based on Wireshark display filters for where to check for the \"username\" value. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleLogging:RulesetRuleLogging": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Defines if the current rule-level override enables or disables the rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/RulesetRuleRatelimit:RulesetRuleRatelimit": {
            "properties": {
                "characteristics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of parameters that define how Cloudflare tracks the request rate for this rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countingExpression": {
                    "type": "string",
                    "description": "Criteria for counting HTTP requests to trigger the Rate Limiting action. Uses the Firewall Rules expression language based on Wireshark display filters. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language) documentation for all available fields, operators, and functions.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mitigationTimeout": {
                    "type": "integer",
                    "description": "Once the request rate is reached, the Rate Limiting rule blocks further requests for the period of time defined in this field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "integer",
                    "description": "The period of time to consider (in seconds) when evaluating the request rate.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestsPerPeriod": {
                    "type": "integer",
                    "description": "The number of requests over the period of time that will trigger the Rate Limiting rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestsToOrigin": {
                    "type": "boolean",
                    "description": "Whether to include requests to origin within the Rate Limiting count.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/SpectrumApplicationDns:SpectrumApplicationDns": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Fully qualified domain name of the origin e.g. origin-ssh.example.com.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of DNS record associated with the application. Valid values: `CNAME`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "cloudflare:index/SpectrumApplicationOriginDns:SpectrumApplicationOriginDns": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Fully qualified domain name of the origin e.g. origin-ssh.example.com.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "cloudflare:index/SpectrumApplicationOriginPortRange:SpectrumApplicationOriginPortRange": {
            "properties": {
                "end": {
                    "type": "integer",
                    "description": "Upper bound of the origin port range, e.g. `2000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "description": "Lower bound of the origin port range, e.g. `1000`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "cloudflare:index/SplitTunnelTunnel:SplitTunnelTunnel": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address in CIDR format to include in the tunnel configuration. Conflicts with `\"host\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the tunnel.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "The domain name to include in the tunnel configuration. Conflicts with `\"address\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/TeamsAccountAntivirus:TeamsAccountAntivirus": {
            "properties": {
                "enabledDownloadPhase": {
                    "type": "boolean",
                    "description": "Scan on file download.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabledUploadPhase": {
                    "type": "boolean",
                    "description": "Scan on file upload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "failClosed": {
                    "type": "boolean",
                    "description": "Block requests for files that cannot be scanned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabledDownloadPhase",
                "enabledUploadPhase",
                "failClosed"
            ]
        },
        "cloudflare:index/TeamsAccountBlockPage:TeamsAccountBlockPage": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "Hex code of block page background color.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicator of enablement.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "footerText": {
                    "type": "string",
                    "description": "Block page header text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headerText": {
                    "type": "string",
                    "description": "Block page footer text.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logoPath": {
                    "type": "string",
                    "description": "URL of block page logo.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of block page configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/TeamsAccountFips:TeamsAccountFips": {
            "properties": {
                "tls": {
                    "type": "boolean",
                    "description": "Only allow FIPS-compliant TLS configuration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/TeamsAccountLogging:TeamsAccountLogging": {
            "properties": {
                "redactPii": {
                    "type": "boolean",
                    "description": "Redact personally identifiable information from activity logging (PII fields are: source IP,\nuser email, user ID, device ID, URL, referrer, user agent).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "settingsByRuleType": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountLoggingSettingsByRuleType:TeamsAccountLoggingSettingsByRuleType",
                    "description": "Represents whether all requests are logged or only the blocked requests are\nlogged in DNS, HTTP and L4 filters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "redactPii",
                "settingsByRuleType"
            ]
        },
        "cloudflare:index/TeamsAccountLoggingSettingsByRuleType:TeamsAccountLoggingSettingsByRuleType": {
            "properties": {
                "dns": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountLoggingSettingsByRuleTypeDns:TeamsAccountLoggingSettingsByRuleTypeDns",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountLoggingSettingsByRuleTypeHttp:TeamsAccountLoggingSettingsByRuleTypeHttp",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "l4": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountLoggingSettingsByRuleTypeL4:TeamsAccountLoggingSettingsByRuleTypeL4",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dns",
                "http",
                "l4"
            ]
        },
        "cloudflare:index/TeamsAccountLoggingSettingsByRuleTypeDns:TeamsAccountLoggingSettingsByRuleTypeDns": {
            "properties": {
                "logAll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logBlocks": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logAll",
                "logBlocks"
            ]
        },
        "cloudflare:index/TeamsAccountLoggingSettingsByRuleTypeHttp:TeamsAccountLoggingSettingsByRuleTypeHttp": {
            "properties": {
                "logAll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logBlocks": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logAll",
                "logBlocks"
            ]
        },
        "cloudflare:index/TeamsAccountLoggingSettingsByRuleTypeL4:TeamsAccountLoggingSettingsByRuleTypeL4": {
            "properties": {
                "logAll": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logBlocks": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logAll",
                "logBlocks"
            ]
        },
        "cloudflare:index/TeamsAccountProxy:TeamsAccountProxy": {
            "properties": {
                "tcp": {
                    "type": "boolean",
                    "description": "Whether gateway proxy is enabled on gateway devices for tcp traffic.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "udp": {
                    "type": "boolean",
                    "description": "Whether gateway proxy is enabled on gateway devices for udp traffic.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tcp",
                "udp"
            ]
        },
        "cloudflare:index/TeamsLocationNetwork:TeamsLocationNetwork": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the teams location.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "network": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "network"
                    ]
                }
            }
        },
        "cloudflare:index/TeamsRuleRuleSettings:TeamsRuleRuleSettings": {
            "properties": {
                "addHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Add custom headers to allowed requests in the form of key-value pairs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bisoAdminControls": {
                    "$ref": "#/types/cloudflare:index/TeamsRuleRuleSettingsBisoAdminControls:TeamsRuleRuleSettingsBisoAdminControls",
                    "description": "Configure how browser isolation behaves (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blockPageEnabled": {
                    "type": "boolean",
                    "description": "Indicator of block page enablement.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blockPageReason": {
                    "type": "string",
                    "description": "The displayed reason for a user being blocked.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkSession": {
                    "$ref": "#/types/cloudflare:index/TeamsRuleRuleSettingsCheckSession:TeamsRuleRuleSettingsCheckSession",
                    "description": "Configure how session check behaves (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insecureDisableDnssecValidation": {
                    "type": "boolean",
                    "description": "Disable DNSSEC validation (must be Allow rule)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "l4override": {
                    "$ref": "#/types/cloudflare:index/TeamsRuleRuleSettingsL4override:TeamsRuleRuleSettingsL4override",
                    "description": "Settings to forward layer 4 traffic (refer to the nested schema).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideHost": {
                    "type": "string",
                    "description": "The host to override matching DNS queries with.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IPs to override matching DNS queries with.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/TeamsRuleRuleSettingsBisoAdminControls:TeamsRuleRuleSettingsBisoAdminControls": {
            "properties": {
                "disableCopyPaste": {
                    "type": "boolean",
                    "description": "Disable copy-paste.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableDownload": {
                    "type": "boolean",
                    "description": "Disable download.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableKeyboard": {
                    "type": "boolean",
                    "description": "Disable keyboard usage.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disablePrinting": {
                    "type": "boolean",
                    "description": "Disable printing.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableUpload": {
                    "type": "boolean",
                    "description": "Disable upload.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/TeamsRuleRuleSettingsCheckSession:TeamsRuleRuleSettingsCheckSession": {
            "properties": {
                "duration": {
                    "type": "string",
                    "description": "Configure how fresh the session needs to be to be considered valid.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enforce": {
                    "type": "boolean",
                    "description": "Enable session enforcement for this rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "duration",
                "enforce"
            ]
        },
        "cloudflare:index/TeamsRuleRuleSettingsL4override:TeamsRuleRuleSettingsL4override": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "Override IP to forward traffic to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Override Port to forward traffic to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "ip",
                "port"
            ]
        },
        "cloudflare:index/WorkerScriptKvNamespaceBinding:WorkerScriptKvNamespaceBinding": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The global variable for the binding in your Worker code.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespaceId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "namespaceId"
            ]
        },
        "cloudflare:index/WorkerScriptPlainTextBinding:WorkerScriptPlainTextBinding": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The global variable for the binding in your Worker code.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "The secret text you want to store.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "text"
            ]
        },
        "cloudflare:index/WorkerScriptSecretTextBinding:WorkerScriptSecretTextBinding": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The global variable for the binding in your Worker code.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "description": "The secret text you want to store.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "text"
            ]
        },
        "cloudflare:index/WorkerScriptWebassemblyBinding:WorkerScriptWebassemblyBinding": {
            "properties": {
                "module": {
                    "type": "string",
                    "description": "The base64 encoded wasm module you want to store.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The global variable for the binding in your Worker code.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "module",
                "name"
            ]
        },
        "cloudflare:index/ZoneLockdownConfiguration:ZoneLockdownConfiguration": {
            "properties": {
                "target": {
                    "type": "string",
                    "description": "The request property to target. Allowed values: \"ip\", \"ip_range\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value to target. Depends on target's type. IP addresses should just be standard IPv4/IPv6 notation i.e. `198.51.100.4` or `2001:db8::/32` and IP ranges in CIDR format i.e. `198.51.0.0/16`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "value"
            ]
        },
        "cloudflare:index/ZoneSettingsOverrideInitialSetting:ZoneSettingsOverrideInitialSetting": {
            "properties": {
                "alwaysOnline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alwaysUseHttps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "automaticHttpsRewrites": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binaryAst": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "brotli": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserCacheTtl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserCheck": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheLevel": {
                    "type": "string",
                    "description": "Allowed values: \"aggressive\" (default) - delivers a different resource each time the query string changes, \"basic\" - delivers resources from cache when there is no query string, \"simplified\" - delivers the same resource to everyone independent of the query string.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "challengeTtl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameFlattening": {
                    "type": "string",
                    "description": "Allowed values: \"flatten_at_root\" (default), \"flatten_all\", \"flatten_none\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "developmentMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "earlyHints": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailObfuscation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filterLogsToCloudflare": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "h2Prioritization": {
                    "type": "string",
                    "description": "Allowed values: \"on\", \"off\" (default), \"custom\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hotlinkProtection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http2": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http3": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageResizing": {
                    "type": "string",
                    "description": "Allowed values: \"on\", \"off\" (default), \"open\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipGeolocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logToCloudflare": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxUpload": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "Allowed values: \"1.0\" (default), \"1.1\", \"1.2\", \"1.3\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minify": {
                    "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideInitialSettingMinify:ZoneSettingsOverrideInitialSettingMinify",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mirage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobileRedirect": {
                    "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideInitialSettingMobileRedirect:ZoneSettingsOverrideInitialSettingMobileRedirect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opportunisticEncryption": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opportunisticOnion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orangeToOrange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "originErrorPagePassThru": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "polish": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (default), \"lossless\", \"lossy\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefetchPreload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privacyPass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pseudoIpv4": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (default), \"add_header\", \"overwrite_header\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseBuffering": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rocketLoader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityHeader": {
                    "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideInitialSettingSecurityHeader:ZoneSettingsOverrideInitialSettingSecurityHeader",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityLevel": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (Enterprise only), \"essentially_off\", \"low\", \"medium\" (default), \"high\", \"under_attack\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideExclude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQueryStringForCache": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (default), \"flexible\", \"full\", \"strict\", \"origin_pull\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls12Only": {
                    "type": "string",
                    "deprecationMessage": "tls_1_2_only has been deprecated in favour of using `min_tls_version = \"1.2\"` instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls13": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (default), \"on\", \"zrt\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientAuth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trueClientIpHeader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "universalSsl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visitorIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waf": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "webp": {
                    "type": "string",
                    "description": ". Note that the value specified will be ignored unless `polish` is turned on (i.e. is \"lossless\" or \"lossy\")\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "websockets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zeroRtt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "alwaysOnline",
                        "alwaysUseHttps",
                        "automaticHttpsRewrites",
                        "binaryAst",
                        "brotli",
                        "browserCacheTtl",
                        "browserCheck",
                        "cacheLevel",
                        "challengeTtl",
                        "ciphers",
                        "cnameFlattening",
                        "developmentMode",
                        "earlyHints",
                        "emailObfuscation",
                        "filterLogsToCloudflare",
                        "h2Prioritization",
                        "hotlinkProtection",
                        "http2",
                        "http3",
                        "imageResizing",
                        "ipGeolocation",
                        "ipv6",
                        "logToCloudflare",
                        "maxUpload",
                        "minTlsVersion",
                        "minify",
                        "mirage",
                        "mobileRedirect",
                        "opportunisticEncryption",
                        "opportunisticOnion",
                        "orangeToOrange",
                        "originErrorPagePassThru",
                        "polish",
                        "prefetchPreload",
                        "privacyPass",
                        "proxyReadTimeout",
                        "pseudoIpv4",
                        "responseBuffering",
                        "rocketLoader",
                        "securityHeader",
                        "securityLevel",
                        "serverSideExclude",
                        "sortQueryStringForCache",
                        "ssl",
                        "tls12Only",
                        "tls13",
                        "tlsClientAuth",
                        "trueClientIpHeader",
                        "universalSsl",
                        "visitorIp",
                        "waf",
                        "webp",
                        "websockets",
                        "zeroRtt"
                    ]
                }
            }
        },
        "cloudflare:index/ZoneSettingsOverrideInitialSettingMinify:ZoneSettingsOverrideInitialSettingMinify": {
            "properties": {
                "css": {
                    "type": "string",
                    "description": "\"on\"/\"off\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "description": "\"on\"/\"off\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "js": {
                    "type": "string",
                    "description": "\"on\"/\"off\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "css",
                "html",
                "js"
            ]
        },
        "cloudflare:index/ZoneSettingsOverrideInitialSettingMobileRedirect:ZoneSettingsOverrideInitialSettingMobileRedirect": {
            "properties": {
                "mobileSubdomain": {
                    "type": "string",
                    "description": "String value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "\"on\"/\"off\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stripUri": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "mobileSubdomain",
                "status",
                "stripUri"
            ]
        },
        "cloudflare:index/ZoneSettingsOverrideInitialSettingSecurityHeader:ZoneSettingsOverrideInitialSettingSecurityHeader": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeSubdomains": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Integer\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nosniff": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preload": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "includeSubdomains",
                        "maxAge",
                        "nosniff",
                        "preload"
                    ]
                }
            }
        },
        "cloudflare:index/ZoneSettingsOverrideSettings:ZoneSettingsOverrideSettings": {
            "properties": {
                "alwaysOnline": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alwaysUseHttps": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "automaticHttpsRewrites": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binaryAst": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "brotli": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserCacheTtl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserCheck": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cacheLevel": {
                    "type": "string",
                    "description": "Allowed values: \"aggressive\" (default) - delivers a different resource each time the query string changes, \"basic\" - delivers resources from cache when there is no query string, \"simplified\" - delivers the same resource to everyone independent of the query string.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "challengeTtl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ciphers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameFlattening": {
                    "type": "string",
                    "description": "Allowed values: \"flatten_at_root\" (default), \"flatten_all\", \"flatten_none\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "developmentMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "earlyHints": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "emailObfuscation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filterLogsToCloudflare": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "h2Prioritization": {
                    "type": "string",
                    "description": "Allowed values: \"on\", \"off\" (default), \"custom\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hotlinkProtection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http2": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http3": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageResizing": {
                    "type": "string",
                    "description": "Allowed values: \"on\", \"off\" (default), \"open\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipGeolocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logToCloudflare": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxUpload": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minTlsVersion": {
                    "type": "string",
                    "description": "Allowed values: \"1.0\" (default), \"1.1\", \"1.2\", \"1.3\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minify": {
                    "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideSettingsMinify:ZoneSettingsOverrideSettingsMinify",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mirage": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mobileRedirect": {
                    "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideSettingsMobileRedirect:ZoneSettingsOverrideSettingsMobileRedirect",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opportunisticEncryption": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opportunisticOnion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orangeToOrange": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "originErrorPagePassThru": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "polish": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (default), \"lossless\", \"lossy\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefetchPreload": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "privacyPass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "proxyReadTimeout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pseudoIpv4": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (default), \"add_header\", \"overwrite_header\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseBuffering": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rocketLoader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityHeader": {
                    "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideSettingsSecurityHeader:ZoneSettingsOverrideSettingsSecurityHeader",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityLevel": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (Enterprise only), \"essentially_off\", \"low\", \"medium\" (default), \"high\", \"under_attack\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSideExclude": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQueryStringForCache": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ssl": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (default), \"flexible\", \"full\", \"strict\", \"origin_pull\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls12Only": {
                    "type": "string",
                    "deprecationMessage": "tls_1_2_only has been deprecated in favour of using `min_tls_version = \"1.2\"` instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tls13": {
                    "type": "string",
                    "description": "Allowed values: \"off\" (default), \"on\", \"zrt\".\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tlsClientAuth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "trueClientIpHeader": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "universalSsl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "visitorIp": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waf": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "webp": {
                    "type": "string",
                    "description": ". Note that the value specified will be ignored unless `polish` is turned on (i.e. is \"lossless\" or \"lossy\")\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "websockets": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zeroRtt": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "alwaysOnline",
                        "alwaysUseHttps",
                        "automaticHttpsRewrites",
                        "binaryAst",
                        "brotli",
                        "browserCacheTtl",
                        "browserCheck",
                        "cacheLevel",
                        "challengeTtl",
                        "ciphers",
                        "cnameFlattening",
                        "developmentMode",
                        "earlyHints",
                        "emailObfuscation",
                        "filterLogsToCloudflare",
                        "h2Prioritization",
                        "hotlinkProtection",
                        "http2",
                        "http3",
                        "imageResizing",
                        "ipGeolocation",
                        "ipv6",
                        "logToCloudflare",
                        "maxUpload",
                        "minTlsVersion",
                        "minify",
                        "mirage",
                        "mobileRedirect",
                        "opportunisticEncryption",
                        "opportunisticOnion",
                        "orangeToOrange",
                        "originErrorPagePassThru",
                        "polish",
                        "prefetchPreload",
                        "privacyPass",
                        "proxyReadTimeout",
                        "pseudoIpv4",
                        "responseBuffering",
                        "rocketLoader",
                        "securityHeader",
                        "securityLevel",
                        "serverSideExclude",
                        "sortQueryStringForCache",
                        "ssl",
                        "tls12Only",
                        "tls13",
                        "tlsClientAuth",
                        "trueClientIpHeader",
                        "universalSsl",
                        "visitorIp",
                        "waf",
                        "webp",
                        "websockets",
                        "zeroRtt"
                    ]
                }
            }
        },
        "cloudflare:index/ZoneSettingsOverrideSettingsMinify:ZoneSettingsOverrideSettingsMinify": {
            "properties": {
                "css": {
                    "type": "string",
                    "description": "\"on\"/\"off\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "description": "\"on\"/\"off\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "js": {
                    "type": "string",
                    "description": "\"on\"/\"off\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "css",
                "html",
                "js"
            ]
        },
        "cloudflare:index/ZoneSettingsOverrideSettingsMobileRedirect:ZoneSettingsOverrideSettingsMobileRedirect": {
            "properties": {
                "mobileSubdomain": {
                    "type": "string",
                    "description": "String value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "\"on\"/\"off\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stripUri": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "mobileSubdomain",
                "status",
                "stripUri"
            ]
        },
        "cloudflare:index/ZoneSettingsOverrideSettingsSecurityHeader:ZoneSettingsOverrideSettingsSecurityHeader": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeSubdomains": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Integer\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nosniff": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preload": {
                    "type": "boolean",
                    "description": "true/false\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "includeSubdomains",
                        "maxAge",
                        "nosniff",
                        "preload"
                    ]
                }
            }
        },
        "cloudflare:index/getAccountRolesRole:getAccountRolesRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of role's permissions\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Role identifier tag\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Role Name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getDevicesDevice:getDevicesDevice": {
            "properties": {
                "created": {
                    "type": "string",
                    "description": "When the device was created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceType": {
                    "type": "string",
                    "description": "The type of the device.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Device ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "description": "IPv4 or IPv6 address.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "The device's public key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastSeen": {
                    "type": "string",
                    "description": "When the device was last seen.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "model": {
                    "type": "string",
                    "description": "The device model name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The device name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "osVersion": {
                    "type": "string",
                    "description": "The operating system version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updated": {
                    "type": "string",
                    "description": "When the device was updated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userEmail": {
                    "type": "string",
                    "description": "User's email.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userId": {
                    "type": "string",
                    "description": "User's ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userName": {
                    "type": "string",
                    "description": "User's Name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "The WARP client version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getWafGroupsFilter:getWafGroupsFilter": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Mode of the WAF Rule Groups to lookup. Valid values: on and off.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A regular expression matching the name of the WAF Rule Groups to lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getWafGroupsGroup:getWafGroupsGroup": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The WAF Rule Group description\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The WAF Rule Group ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "Mode of the WAF Rule Groups to lookup. Valid values: on and off.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiedRulesCount": {
                    "type": "integer",
                    "description": "The number of modified rules in the WAF Rule Group\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A regular expression matching the name of the WAF Rule Groups to lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Package in which to search for the WAF Rule Groups.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rulesCount": {
                    "type": "integer",
                    "description": "The number of rules in the WAF Rule Group\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getWafPackagesFilter:getWafPackagesFilter": {
            "properties": {
                "actionMode": {
                    "type": "string",
                    "description": "Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode of the WAF Rule Packages to lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A regular expression matching the name of the WAF Rule Packages to lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getWafPackagesPackage:getWafPackagesPackage": {
            "properties": {
                "actionMode": {
                    "type": "string",
                    "description": "Action mode of the WAF Rule Packages to lookup. Valid values: simulate, block and challenge.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The WAF Rule Package description\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detectionMode": {
                    "type": "string",
                    "description": "Detection mode of the WAF Rule Packages to lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The WAF Rule Package ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A regular expression matching the name of the WAF Rule Packages to lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitivity": {
                    "type": "string",
                    "description": "Sensitivity of the WAF Rule Packages to lookup. Valid values: high, medium, low and off.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getWafRulesFilter:getWafRulesFilter": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A regular expression matching the description of the WAF Rules to lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "Mode of the WAF Rules to lookup. Valid values: one of [\"block\", \"challenge\", \"default\", \"disable\", \"simulate\"] or [\"on\", \"off\"] depending on the WAF Rule type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getWafRulesRule:getWafRulesRule": {
            "properties": {
                "allowedModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of allowed `mode` values for the WAF Rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defaultMode": {
                    "type": "string",
                    "description": "The default `mode` value for the WAF Rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "description": "A regular expression matching the description of the WAF Rules to lookup.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Group in which the WAF Rules to lookup have to be.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupName": {
                    "type": "string",
                    "description": "The Name of the WAF Rule Group that contains the WAF Rule\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The WAF Rule ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mode": {
                    "type": "string",
                    "description": "Mode of the WAF Rules to lookup. Valid values: one of [\"block\", \"challenge\", \"default\", \"disable\", \"simulate\"] or [\"on\", \"off\"] depending on the WAF Rule type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Package in which to search for the WAF Rules.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "description": "The WAF Rule priority\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getZonesFilter:getZonesFilter": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Only search for zones in this account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupType": {
                    "type": "string",
                    "description": "The type of search to perform for the `name` value\nwhen querying the zone API. Valid values: `\"exact\"` and `\"contains\"`. Defaults\nto `\"exact\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "match": {
                    "type": "string",
                    "description": "A RE2 compatible regular expression to filter the\nresults. This is performed client side whereas the `name` and `lookup_type`\nare performed on the Cloudflare server side.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A string value to search for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paused": {
                    "type": "boolean",
                    "description": "Paused status of the zone to lookup. Valid values are\n`true` or `false`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Status of the zone to lookup. Valid values: `\"active\"`,\n`\"pending\"`, `\"initializing\"`, `\"moved\"`, `\"deleted\"`, `\"deactivated\"` and\n`\"read only\"`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "cloudflare:index/getZonesZone:getZonesZone": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The zone ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A string value to search for.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the cloudflare package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accountId": {
                "type": "string",
                "description": "Configure API client to always use that account\n"
            },
            "apiBasePath": {
                "type": "string",
                "description": "Configure the base path used by the API client\n"
            },
            "apiClientLogging": {
                "type": "boolean",
                "description": "Whether to print logs from the API client (using the default log library logger)\n"
            },
            "apiHostname": {
                "type": "string",
                "description": "Configure the hostname used by the API client\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key for operations.\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The API Token for operations.\n"
            },
            "apiUserServiceKey": {
                "type": "string",
                "description": "A special Cloudflare API key good for a restricted set of endpoints\n"
            },
            "email": {
                "type": "string",
                "description": "A registered Cloudflare email address\n"
            },
            "maxBackoff": {
                "type": "integer",
                "description": "Maximum backoff period in seconds after failed API calls\n"
            },
            "minBackoff": {
                "type": "integer",
                "description": "Minimum backoff period in seconds after failed API calls\n"
            },
            "retries": {
                "type": "integer",
                "description": "Maximum number of retries to perform when an API request fails\n"
            },
            "rps": {
                "type": "integer",
                "description": "RPS limit to apply when making calls to the API\n"
            }
        },
        "inputProperties": {
            "accountId": {
                "type": "string",
                "description": "Configure API client to always use that account\n"
            },
            "apiBasePath": {
                "type": "string",
                "description": "Configure the base path used by the API client\n"
            },
            "apiClientLogging": {
                "type": "boolean",
                "description": "Whether to print logs from the API client (using the default log library logger)\n",
                "default": false,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_API_CLIENT_LOGGING"
                    ]
                }
            },
            "apiHostname": {
                "type": "string",
                "description": "Configure the hostname used by the API client\n"
            },
            "apiKey": {
                "type": "string",
                "description": "The API key for operations.\n"
            },
            "apiToken": {
                "type": "string",
                "description": "The API Token for operations.\n"
            },
            "apiUserServiceKey": {
                "type": "string",
                "description": "A special Cloudflare API key good for a restricted set of endpoints\n"
            },
            "email": {
                "type": "string",
                "description": "A registered Cloudflare email address\n"
            },
            "maxBackoff": {
                "type": "integer",
                "description": "Maximum backoff period in seconds after failed API calls\n",
                "default": 30,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_MAX_BACKOFF"
                    ]
                }
            },
            "minBackoff": {
                "type": "integer",
                "description": "Minimum backoff period in seconds after failed API calls\n",
                "default": 1,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_MIN_BACKOFF"
                    ]
                }
            },
            "retries": {
                "type": "integer",
                "description": "Maximum number of retries to perform when an API request fails\n",
                "default": 3,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_RETRIES"
                    ]
                }
            },
            "rps": {
                "type": "integer",
                "description": "RPS limit to apply when making calls to the API\n",
                "default": 4,
                "defaultInfo": {
                    "environment": [
                        "CLOUDFLARE_RPS"
                    ]
                }
            }
        }
    },
    "resources": {
        "cloudflare:index/accessApplication:AccessApplication": {
            "description": "Provides a Cloudflare Access Application resource. Access Applications\nare used to restrict access to a whole application using an\nauthorisation gateway managed by Cloudflare.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// With CORS configuration\nconst stagingApp = new cloudflare.AccessApplication(\"staging_app\", {\n    corsHeaders: [{\n        allowCredentials: true,\n        allowedMethods: [\n            \"GET\",\n            \"POST\",\n            \"OPTIONS\",\n        ],\n        allowedOrigins: [\"https://example.com\"],\n        maxAge: 10,\n    }],\n    domain: \"staging.example.com\",\n    name: \"staging application\",\n    sessionDuration: \"24h\",\n    type: \"self_hosted\",\n    zoneId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAccess Applications can be imported using a composite ID formed of account ID and application ID.\n\n```sh\n $ pulumi import cloudflare:index/accessApplication:AccessApplication staging cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the access application should be added. Conflicts with `zone_id`.\n"
                },
                "allowedIdps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The identity providers selected for the application.\n"
                },
                "appLauncherVisible": {
                    "type": "boolean",
                    "description": "Option to show/hide applications in App Launcher. Defaults to `true`.\n"
                },
                "aud": {
                    "type": "string",
                    "description": "Application Audience (AUD) Tag of the application\n"
                },
                "autoRedirectToIdentity": {
                    "type": "boolean",
                    "description": "Option to skip identity provider\nselection if only one is configured in allowed_idps. Defaults to `false`\n(disabled).\n"
                },
                "corsHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessApplicationCorsHeader:AccessApplicationCorsHeader"
                    },
                    "description": "CORS configuration for the Access Application. See\nbelow for reference structure.\n"
                },
                "customDenyMessage": {
                    "type": "string",
                    "description": "Option that returns a custom error message when a user is denied access to the application.\n"
                },
                "customDenyUrl": {
                    "type": "string",
                    "description": "Option that redirects to a custom URL when a user is denied access to the application.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The complete URL of the asset you wish to put\nCloudflare Access in front of. Can include subdomains or paths. Or both.\n"
                },
                "enableBindingCookie": {
                    "type": "boolean",
                    "description": "Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional \"binding\" cookie on requests. Defaults to `false`.\n"
                },
                "httpOnlyCookieAttribute": {
                    "type": "boolean",
                    "description": "Option to add the `HttpOnly` cookie flag to access tokens.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Image URL for the logo shown in the app launcher\ndashboard.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Application.\n"
                },
                "sameSiteCookieAttribute": {
                    "type": "string",
                    "description": "Defines the same-site cookie setting\nfor access tokens. Valid values are `none`, `lax`, and `strict`.\n"
                },
                "serviceAuth401Redirect": {
                    "type": "boolean",
                    "description": "Option to return a 401 status code in\nservice authentication rules on failed requests.\n"
                },
                "sessionDuration": {
                    "type": "string",
                    "description": "How often a user will be forced to\nre-authorise. Must be in the format `\"48h\"` or `\"2h45m\"`.\nValid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. Defaults to `24h`.\n"
                },
                "skipInterstitial": {
                    "type": "boolean",
                    "description": "Option to skip the authorization interstitial\nwhen using the CLI.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The application type. Defaults to `self_hosted`. Valid\nvalues are `self_hosted`, `ssh`, `vnc`, `file` or `bookmark`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the access application should be added. Conflicts with `account_id`.\n"
                }
            },
            "required": [
                "accountId",
                "aud",
                "domain",
                "httpOnlyCookieAttribute",
                "name",
                "zoneId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the access application should be added. Conflicts with `zone_id`.\n"
                },
                "allowedIdps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The identity providers selected for the application.\n"
                },
                "appLauncherVisible": {
                    "type": "boolean",
                    "description": "Option to show/hide applications in App Launcher. Defaults to `true`.\n"
                },
                "autoRedirectToIdentity": {
                    "type": "boolean",
                    "description": "Option to skip identity provider\nselection if only one is configured in allowed_idps. Defaults to `false`\n(disabled).\n"
                },
                "corsHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessApplicationCorsHeader:AccessApplicationCorsHeader"
                    },
                    "description": "CORS configuration for the Access Application. See\nbelow for reference structure.\n"
                },
                "customDenyMessage": {
                    "type": "string",
                    "description": "Option that returns a custom error message when a user is denied access to the application.\n"
                },
                "customDenyUrl": {
                    "type": "string",
                    "description": "Option that redirects to a custom URL when a user is denied access to the application.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The complete URL of the asset you wish to put\nCloudflare Access in front of. Can include subdomains or paths. Or both.\n"
                },
                "enableBindingCookie": {
                    "type": "boolean",
                    "description": "Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional \"binding\" cookie on requests. Defaults to `false`.\n"
                },
                "httpOnlyCookieAttribute": {
                    "type": "boolean",
                    "description": "Option to add the `HttpOnly` cookie flag to access tokens.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Image URL for the logo shown in the app launcher\ndashboard.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Application.\n"
                },
                "sameSiteCookieAttribute": {
                    "type": "string",
                    "description": "Defines the same-site cookie setting\nfor access tokens. Valid values are `none`, `lax`, and `strict`.\n"
                },
                "serviceAuth401Redirect": {
                    "type": "boolean",
                    "description": "Option to return a 401 status code in\nservice authentication rules on failed requests.\n"
                },
                "sessionDuration": {
                    "type": "string",
                    "description": "How often a user will be forced to\nre-authorise. Must be in the format `\"48h\"` or `\"2h45m\"`.\nValid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. Defaults to `24h`.\n"
                },
                "skipInterstitial": {
                    "type": "boolean",
                    "description": "Option to skip the authorization interstitial\nwhen using the CLI.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The application type. Defaults to `self_hosted`. Valid\nvalues are `self_hosted`, `ssh`, `vnc`, `file` or `bookmark`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the access application should be added. Conflicts with `account_id`.\n"
                }
            },
            "requiredInputs": [
                "domain",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessApplication resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the access application should be added. Conflicts with `zone_id`.\n"
                    },
                    "allowedIdps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The identity providers selected for the application.\n"
                    },
                    "appLauncherVisible": {
                        "type": "boolean",
                        "description": "Option to show/hide applications in App Launcher. Defaults to `true`.\n"
                    },
                    "aud": {
                        "type": "string",
                        "description": "Application Audience (AUD) Tag of the application\n"
                    },
                    "autoRedirectToIdentity": {
                        "type": "boolean",
                        "description": "Option to skip identity provider\nselection if only one is configured in allowed_idps. Defaults to `false`\n(disabled).\n"
                    },
                    "corsHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessApplicationCorsHeader:AccessApplicationCorsHeader"
                        },
                        "description": "CORS configuration for the Access Application. See\nbelow for reference structure.\n"
                    },
                    "customDenyMessage": {
                        "type": "string",
                        "description": "Option that returns a custom error message when a user is denied access to the application.\n"
                    },
                    "customDenyUrl": {
                        "type": "string",
                        "description": "Option that redirects to a custom URL when a user is denied access to the application.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The complete URL of the asset you wish to put\nCloudflare Access in front of. Can include subdomains or paths. Or both.\n"
                    },
                    "enableBindingCookie": {
                        "type": "boolean",
                        "description": "Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional \"binding\" cookie on requests. Defaults to `false`.\n"
                    },
                    "httpOnlyCookieAttribute": {
                        "type": "boolean",
                        "description": "Option to add the `HttpOnly` cookie flag to access tokens.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "Image URL for the logo shown in the app launcher\ndashboard.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Friendly name of the Access Application.\n"
                    },
                    "sameSiteCookieAttribute": {
                        "type": "string",
                        "description": "Defines the same-site cookie setting\nfor access tokens. Valid values are `none`, `lax`, and `strict`.\n"
                    },
                    "serviceAuth401Redirect": {
                        "type": "boolean",
                        "description": "Option to return a 401 status code in\nservice authentication rules on failed requests.\n"
                    },
                    "sessionDuration": {
                        "type": "string",
                        "description": "How often a user will be forced to\nre-authorise. Must be in the format `\"48h\"` or `\"2h45m\"`.\nValid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. Defaults to `24h`.\n"
                    },
                    "skipInterstitial": {
                        "type": "boolean",
                        "description": "Option to skip the authorization interstitial\nwhen using the CLI.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The application type. Defaults to `self_hosted`. Valid\nvalues are `self_hosted`, `ssh`, `vnc`, `file` or `bookmark`.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the access application should be added. Conflicts with `account_id`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessBookmark:AccessBookmark": {
            "description": "Provides a Cloudflare Access Bookmark resource. Access Bookmark\napplications are not protected behind Access but are displayed in the App\nLauncher.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst myBookmarkApp = new cloudflare.AccessBookmark(\"my_bookmark_app\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    appLauncherVisible: true,\n    domain: \"example.com\",\n    logoUrl: \"https://path-to-logo.com/example.png\",\n    name: \"My Bookmark App\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAccess Bookmarks can be imported using a composite ID formed of account ID and bookmark ID.\n\n```sh\n $ pulumi import cloudflare:index/accessBookmark:AccessBookmark my_bookmark cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the Access bookmark application should be added. Conflicts with `zone_id`.\n"
                },
                "appLauncherVisible": {
                    "type": "boolean",
                    "description": "Option to show/hide the bookmark in the app launcher. Defaults to `true`.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the bookmark application. Can include subdomains, paths, or both.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "The image URL for the logo shown in the app\nlauncher dashboard.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the bookmark application.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the Access bookmark application should be added. Conflicts with `account_id`.\n"
                }
            },
            "required": [
                "accountId",
                "domain",
                "name",
                "zoneId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the Access bookmark application should be added. Conflicts with `zone_id`.\n"
                },
                "appLauncherVisible": {
                    "type": "boolean",
                    "description": "Option to show/hide the bookmark in the app launcher. Defaults to `true`.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the bookmark application. Can include subdomains, paths, or both.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "The image URL for the logo shown in the app\nlauncher dashboard.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the bookmark application.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the Access bookmark application should be added. Conflicts with `account_id`.\n"
                }
            },
            "requiredInputs": [
                "domain",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessBookmark resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the Access bookmark application should be added. Conflicts with `zone_id`.\n"
                    },
                    "appLauncherVisible": {
                        "type": "boolean",
                        "description": "Option to show/hide the bookmark in the app launcher. Defaults to `true`.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain of the bookmark application. Can include subdomains, paths, or both.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "The image URL for the logo shown in the app\nlauncher dashboard.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the bookmark application.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the Access bookmark application should be added. Conflicts with `account_id`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessCaCertificate:AccessCaCertificate": {
            "description": "Cloudflare Access can replace traditional SSH key models with short-lived\ncertificates issued to your users based on the token generated by their Access\nlogin.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// account level\nconst example = new cloudflare.AccessCaCertificate(\"example\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    applicationId: \"6cd6cea3-3ef2-4542-9aea-85a0bbcd5414\",\n});\n// zone level\nconst anotherExample = new cloudflare.AccessCaCertificate(\"another_example\", {\n    applicationId: \"fe2be0ff-7f13-4350-8c8e-a9b9795fe3c2\",\n    zoneId: \"b6bc7eb6027c792a6bca3dc91fd2d7e0\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAccess CA certificates can be imported using a composite ID formed of identifer (\"account\" or \"zone\"), identifier ID and the CA certificate ID.\n\n```sh\n $ pulumi import cloudflare:index/accessCaCertificate:AccessCaCertificate example account/1d5fdc9e88c8a8c4518b068cd94331fe/edc1e4e24567217764b4322669c44df985dddffdf03ac781\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the Access CA certificate should be added. Conflicts with `zone_id`.\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The Access Application ID to associate with the CA certificate.\n"
                },
                "aud": {
                    "type": "string",
                    "description": "Application Audience (AUD) Tag of the CA certificate\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "Cryptographic public key of the generated CA certificate\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the Access CA certificate should be added. Conflicts with `account_id`.\n"
                }
            },
            "required": [
                "accountId",
                "applicationId",
                "aud",
                "publicKey",
                "zoneId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the Access CA certificate should be added. Conflicts with `zone_id`.\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The Access Application ID to associate with the CA certificate.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the Access CA certificate should be added. Conflicts with `account_id`.\n"
                }
            },
            "requiredInputs": [
                "applicationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessCaCertificate resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the Access CA certificate should be added. Conflicts with `zone_id`.\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The Access Application ID to associate with the CA certificate.\n"
                    },
                    "aud": {
                        "type": "string",
                        "description": "Application Audience (AUD) Tag of the CA certificate\n"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "Cryptographic public key of the generated CA certificate\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the Access CA certificate should be added. Conflicts with `account_id`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessGroup:AccessGroup": {
            "description": "Provides a Cloudflare Access Group resource. Access Groups are used\nin conjunction with Access Policies to restrict access to a\nparticular resource based on group membership.\n\n## Conditions\n\n`require`, `exclude` and `include` arguments share the available\nconditions which can be applied. The conditions are:\n\n* `ip` - (Optional) A list of IP addresses or ranges. Example:\n  `ip = [\"1.2.3.4\", \"10.0.0.0/2\"]`\n* `email` - (Optional) A list of email addresses. Example:\n  `email = [\"test@example.com\"]`\n* `email_domain` - (Optional) A list of email domains. Example:\n  `email_domain = [\"example.com\"]`\n* `service_token` - (Optional) A list of service token ids. Example:\n  `service_token = [cloudflare_access_service_token.demo.id]`\n* `any_valid_service_token` - (Optional) Boolean indicating if allow\n  all tokens to be granted. Example: `any_valid_service_token = true`\n* `group` - (Optional) A list of access group ids. Example:\n  `group = [cloudflare_access_group.demo.id]`\n* `everyone` - (Optional) Boolean indicating permitting access for all\n  requests. Example: `everyone = true`\n* `certificate` - (Optional) Whether to use mTLS certificate authentication.\n* `common_name` - (Optional) Use a certificate common name to authenticate with.\n* `auth_method` - (Optional) A string identifying the authentication\n  method code. The list of codes are listed here: https://tools.ietf.org/html/rfc8176#section-2.\n  Custom values are also supported. Example: `auth_method = [\"swk\"]`\n* `geo` - (Optional) A list of country codes. Example: `geo = [\"US\"]`\n* `login_method` - (Optional) A list of identity provider ids. Example: `login_method = [cloudflare_access_identity_provider.my_idp.id]`\n* `device_posture` - (Optional) A list of device_posture integration_uids. Example: `device_posture = [cloudflare_device_posture_rule.my_posture_rule.id]`\n* `gsuite` - (Optional) Use GSuite as the authentication mechanism. Example:\n\n  ```hcl\n  # ... other configuration\n  include {\n    gsuite {\n      email = [\"admins@example.com\"]\n      identity_provider_id = \"ca298b82-93b5-41bf-bc2d-10493f09b761\"\n    }\n  }\n  ```\n* `github` - (Optional) Use a GitHub organization as the `include` condition. Example:\n\n  ```hcl\n  # ... other configuration\n  include {\n    github {\n      name = \"my-github-org-name\" # (Required) GitHub organization name\n      teams = [\"my-github-team-name\"] # (Optional) GitHub teams\n      identity_provider_id = \"ca298b82-93b5-41bf-bc2d-10493f09b761\"\n    }\n  }\n  ```\n* `azure` - (Optional) Use Azure AD as the `include` condition. Example:\n\n  ```hcl\n  # ... other configuration\n  include {\n    azure {\n      id = [\"86773093-5feb-48dd-814b-7ccd3676ff50e\"]\n      identity_provider_id = \"ca298b82-93b5-41bf-bc2d-10493f09b761\"\n    }\n  }\n  ```\n* `okta` - (Optional) Use Okta as the `include` condition. Example:\n\n  ```hcl\n  # ... other configuration\n  include {\n    okta {\n      name = [\"admins\"]\n      identity_provider_id = \"ca298b82-93b5-41bf-bc2d-10493f09b761\"\n    }\n  }\n  ```\n* `saml` - (Optional) Use an external SAML setup as the `include` condition.\n  Example:\n\n  ```hcl\n  # ... other configuration\n  include {\n    saml {\n      attribute_name = \"group\"\n      attribute_value = \"admins\"\n      identity_provider_id = \"ca298b82-93b5-41bf-bc2d-10493f09b761\"\n    }\n  }\n  ```\n\n\n## Import\n\nAccess Groups can be imported using a composite ID formed of account ID and group ID.\n\n```sh\n $ pulumi import cloudflare:index/accessGroup:AccessGroup staging 975ecf5a45e3bcb680dba0722a420ad9/67ea780ce4982c1cfbe6b7293afc765d\n```\n\n where * `975ecf5a45e3bcb680dba0722a420ad9` - Account ID * `67ea780ce4982c1cfbe6b7293afc765d` - Access Group ID ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account the group is associated with. Conflicts with `zone_id`.\n"
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupExclude:AccessGroupExclude"
                    },
                    "description": "A series of access conditions, see below for\nfull list.\n"
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupInclude:AccessGroupInclude"
                    },
                    "description": "A series of access conditions, see below for\nfull list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Group.\n"
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupRequire:AccessGroupRequire"
                    },
                    "description": "A series of access conditions, see below for\nfull list.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the zone the group is associated with. Conflicts with `account_id`.\n"
                }
            },
            "required": [
                "includes",
                "name",
                "zoneId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account the group is associated with. Conflicts with `zone_id`.\n",
                    "willReplaceOnChanges": true
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupExclude:AccessGroupExclude"
                    },
                    "description": "A series of access conditions, see below for\nfull list.\n"
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupInclude:AccessGroupInclude"
                    },
                    "description": "A series of access conditions, see below for\nfull list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Group.\n"
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessGroupRequire:AccessGroupRequire"
                    },
                    "description": "A series of access conditions, see below for\nfull list.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the zone the group is associated with. Conflicts with `account_id`.\n"
                }
            },
            "requiredInputs": [
                "includes",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessGroup resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account the group is associated with. Conflicts with `zone_id`.\n",
                        "willReplaceOnChanges": true
                    },
                    "excludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessGroupExclude:AccessGroupExclude"
                        },
                        "description": "A series of access conditions, see below for\nfull list.\n"
                    },
                    "includes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessGroupInclude:AccessGroupInclude"
                        },
                        "description": "A series of access conditions, see below for\nfull list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Friendly name of the Access Group.\n"
                    },
                    "requires": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessGroupRequire:AccessGroupRequire"
                        },
                        "description": "A series of access conditions, see below for\nfull list.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The ID of the zone the group is associated with. Conflicts with `account_id`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessIdentityProvider:AccessIdentityProvider": {
            "description": "Provides a Cloudflare Access Identity Provider resource. Identity Providers are\nused as an authentication or authorisation source within Access.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// one time pin\nconst pinLogin = new cloudflare.AccessIdentityProvider(\"pin_login\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    name: \"PIN login\",\n    type: \"onetimepin\",\n});\n// oauth\nconst githubOauth = new cloudflare.AccessIdentityProvider(\"github_oauth\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    configs: [{\n        clientId: \"example\",\n        clientSecret: \"secret_key\",\n    }],\n    name: \"GitHub OAuth\",\n    type: \"github\",\n});\n// saml\nconst jumpcloudSaml = new cloudflare.AccessIdentityProvider(\"jumpcloud_saml\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    configs: [{\n        attributes: [\n            \"email\",\n            \"username\",\n        ],\n        idpPublicCert: `MIIDpDCCAoygAwIBAgIGAV2ka+55MA0GCSqGSIb3DQEBCwUAMIGSMQswCQ...GF/Q2/MHadws97cZg\nuTnQyuOqPuHbnN83d/2l1NSYKCbHt24o`,\n        issuerUrl: \"jumpcloud\",\n        signRequest: false,\n        ssoTargetUrl: \"https://sso.myexample.jumpcloud.com/saml2/cloudflareaccess\",\n    }],\n    name: \"JumpCloud SAML\",\n    type: \"saml\",\n});\n// okta\nconst okta = new cloudflare.AccessIdentityProvider(\"okta\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    configs: [{\n        apiToken: \"okta_api_token\",\n        clientId: \"example\",\n        clientSecret: \"secret_key\",\n    }],\n    name: \"Okta\",\n    type: \"okta\",\n});\n```\n\nPlease refer to the [developers.cloudflare.com Access documentation][access_identity_provider_guide]\nfor full reference on what is available and how to configure your provider.\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAccess Identity Providers can be imported using a composite ID formed of account ID and Access Identity Provider ID.\n\n```sh\n $ pulumi import cloudflare:index/accessIdentityProvider:AccessIdentityProvider my_idp cb029e245cfdd66dc8d2e570d5dd3322/e00e1c13-e350-44fe-96c5-fb75c954871c\n```\n\n [access_identity_provider_guide]https://developers.cloudflare.com/access/configuring-identity-providers/ ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID the provider should be associated with. Conflicts with `zone_id`.\n"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessIdentityProviderConfig:AccessIdentityProviderConfig"
                    },
                    "description": "Provider configuration from the [developer documentation][access_identity_provider_guide].\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Identity Provider configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The provider type to use. Must be one of: `\"centrify\"`,\n`\"facebook\"`, `\"google-apps\"`, `\"oidc\"`, `\"github\"`, `\"google\"`, `\"saml\"`,\n`\"linkedin\"`, `\"azureAD\"`, `\"okta\"`, `\"onetimepin\"`, `\"onelogin\"`, `\"yandex\"`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID the provider should be associated with. Conflicts with `account_id`.\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID the provider should be associated with. Conflicts with `zone_id`.\n",
                    "willReplaceOnChanges": true
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessIdentityProviderConfig:AccessIdentityProviderConfig"
                    },
                    "description": "Provider configuration from the [developer documentation][access_identity_provider_guide].\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Identity Provider configuration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The provider type to use. Must be one of: `\"centrify\"`,\n`\"facebook\"`, `\"google-apps\"`, `\"oidc\"`, `\"github\"`, `\"google\"`, `\"saml\"`,\n`\"linkedin\"`, `\"azureAD\"`, `\"okta\"`, `\"onetimepin\"`, `\"onelogin\"`, `\"yandex\"`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID the provider should be associated with. Conflicts with `account_id`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "name",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessIdentityProvider resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account ID the provider should be associated with. Conflicts with `zone_id`.\n",
                        "willReplaceOnChanges": true
                    },
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessIdentityProviderConfig:AccessIdentityProviderConfig"
                        },
                        "description": "Provider configuration from the [developer documentation][access_identity_provider_guide].\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Friendly name of the Access Identity Provider configuration.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The provider type to use. Must be one of: `\"centrify\"`,\n`\"facebook\"`, `\"google-apps\"`, `\"oidc\"`, `\"github\"`, `\"google\"`, `\"saml\"`,\n`\"linkedin\"`, `\"azureAD\"`, `\"okta\"`, `\"onetimepin\"`, `\"onelogin\"`, `\"yandex\"`.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID the provider should be associated with. Conflicts with `account_id`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessKeysConfiguration:AccessKeysConfiguration": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "keyRotationIntervalDays": {
                    "type": "integer"
                }
            },
            "required": [
                "accountId",
                "keyRotationIntervalDays"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "keyRotationIntervalDays": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "accountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessKeysConfiguration resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "keyRotationIntervalDays": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessMutualTlsCertificate:AccessMutualTlsCertificate": {
            "description": "Provides a Cloudflare Access Mutual TLS Certificate resource. Mutual TLS authentication ensures that the traffic is secure and trusted in both directions between a client and server and can be used with Access to only allows requests from devices with a corresponding client certificate.\n\n\n## Import\n\nAccess Mutual TLS Certificate can be imported using a composite ID composed of the account or zone and the mutual TLS certificate ID in the form of`account/ACCOUNT_ID/MUTUAL_TLS_CERTIFICATE_ID` or `zone/ZONE_ID/MUTUAL_TLS_CERTIFICATE_ID`.\n\n```sh\n $ pulumi import cloudflare:index/accessMutualTlsCertificate:AccessMutualTlsCertificate staging account/cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the certificate should be added. Conflicts with `zone_id`.\n"
                },
                "associatedHostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The hostnames that will be prompted for this certificate.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "The Root CA for your certificates.\n"
                },
                "fingerprint": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the certificate.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the certificate should be added. Conflicts with `account_id`.\n"
                }
            },
            "required": [
                "accountId",
                "fingerprint",
                "name",
                "zoneId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the certificate should be added. Conflicts with `zone_id`.\n"
                },
                "associatedHostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The hostnames that will be prompted for this certificate.\n"
                },
                "certificate": {
                    "type": "string",
                    "description": "The Root CA for your certificates.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the certificate.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the certificate should be added. Conflicts with `account_id`.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessMutualTlsCertificate resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the certificate should be added. Conflicts with `zone_id`.\n"
                    },
                    "associatedHostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The hostnames that will be prompted for this certificate.\n"
                    },
                    "certificate": {
                        "type": "string",
                        "description": "The Root CA for your certificates.\n"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the certificate.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the certificate should be added. Conflicts with `account_id`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessPolicy:AccessPolicy": {
            "description": "Provides a Cloudflare Access Policy resource. Access Policies are used\nin conjunction with Access Applications to restrict access to a\nparticular resource.\n\n\n## Import\n\nAccess Policies can be imported using a composite ID formed of identifier type (`zone` or `account`), identifier ID (`zone_id` or `account_id`), application ID and policy ID. # import a zone level Access policy\n\n```sh\n $ pulumi import cloudflare:index/accessPolicy:AccessPolicy staging zone/cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e/67ea780ce4982c1cfbe6b7293afc765d\n```\n\n # import an account level Access policy\n\n```sh\n $ pulumi import cloudflare:index/accessPolicy:AccessPolicy production account/0d599f0ec05c3bda8c3b8a68c32a1b47/d41d8cd98f00b204e9800998ecf8427e/67ea780ce4982c1cfbe6b7293afc765d\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the access rule should be added. Conflicts with `zone_id`.\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application the policy is associated with.\n"
                },
                "approvalGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyApprovalGroup:AccessPolicyApprovalGroup"
                    },
                    "description": "List of approval group blocks for configuring additional approvals (refer to the nested schema).\n"
                },
                "approvalRequired": {
                    "type": "boolean"
                },
                "decision": {
                    "type": "string",
                    "description": "Defines the action Access will take if the policy matches the user.\nAllowed values: `allow`, `deny`, `non_identity`, `bypass`\n"
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyExclude:AccessPolicyExclude"
                    },
                    "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyInclude:AccessPolicyInclude"
                    },
                    "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Application.\n"
                },
                "precedence": {
                    "type": "integer",
                    "description": "The unique precedence for policies on a single application. Integer.\n"
                },
                "purposeJustificationPrompt": {
                    "type": "string",
                    "description": "String to present to the user when purpose justification is enabled.\n"
                },
                "purposeJustificationRequired": {
                    "type": "boolean",
                    "description": "Boolean of whether to prompt the user for a justification for accessing the resource.\n"
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyRequire:AccessPolicyRequire"
                    },
                    "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the access rule should be added. Conflicts with `account_id`.\n"
                }
            },
            "required": [
                "accountId",
                "applicationId",
                "decision",
                "includes",
                "name",
                "precedence",
                "zoneId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the access rule should be added. Conflicts with `zone_id`.\n"
                },
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the application the policy is associated with.\n"
                },
                "approvalGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyApprovalGroup:AccessPolicyApprovalGroup"
                    },
                    "description": "List of approval group blocks for configuring additional approvals (refer to the nested schema).\n"
                },
                "approvalRequired": {
                    "type": "boolean"
                },
                "decision": {
                    "type": "string",
                    "description": "Defines the action Access will take if the policy matches the user.\nAllowed values: `allow`, `deny`, `non_identity`, `bypass`\n"
                },
                "excludes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyExclude:AccessPolicyExclude"
                    },
                    "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                },
                "includes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyInclude:AccessPolicyInclude"
                    },
                    "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the Access Application.\n"
                },
                "precedence": {
                    "type": "integer",
                    "description": "The unique precedence for policies on a single application. Integer.\n"
                },
                "purposeJustificationPrompt": {
                    "type": "string",
                    "description": "String to present to the user when purpose justification is enabled.\n"
                },
                "purposeJustificationRequired": {
                    "type": "boolean",
                    "description": "Boolean of whether to prompt the user for a justification for accessing the resource.\n"
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/AccessPolicyRequire:AccessPolicyRequire"
                    },
                    "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the access rule should be added. Conflicts with `account_id`.\n"
                }
            },
            "requiredInputs": [
                "applicationId",
                "decision",
                "includes",
                "name",
                "precedence"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessPolicy resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the access rule should be added. Conflicts with `zone_id`.\n"
                    },
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the application the policy is associated with.\n"
                    },
                    "approvalGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessPolicyApprovalGroup:AccessPolicyApprovalGroup"
                        },
                        "description": "List of approval group blocks for configuring additional approvals (refer to the nested schema).\n"
                    },
                    "approvalRequired": {
                        "type": "boolean"
                    },
                    "decision": {
                        "type": "string",
                        "description": "Defines the action Access will take if the policy matches the user.\nAllowed values: `allow`, `deny`, `non_identity`, `bypass`\n"
                    },
                    "excludes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessPolicyExclude:AccessPolicyExclude"
                        },
                        "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                    },
                    "includes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessPolicyInclude:AccessPolicyInclude"
                        },
                        "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Friendly name of the Access Application.\n"
                    },
                    "precedence": {
                        "type": "integer",
                        "description": "The unique precedence for policies on a single application. Integer.\n"
                    },
                    "purposeJustificationPrompt": {
                        "type": "string",
                        "description": "String to present to the user when purpose justification is enabled.\n"
                    },
                    "purposeJustificationRequired": {
                        "type": "boolean",
                        "description": "Boolean of whether to prompt the user for a justification for accessing the resource.\n"
                    },
                    "requires": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/AccessPolicyRequire:AccessPolicyRequire"
                        },
                        "description": "A series of access conditions, see [Access Groups](https://www.terraform.io/providers/cloudflare/cloudflare/latest/docs/resources/access_group#conditions).\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the access rule should be added. Conflicts with `account_id`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessRule:AccessRule": {
            "description": "Provides a Cloudflare IP Firewall Access Rule resource. Access control can be applied on basis of IP addresses, IP ranges, AS numbers or countries.\n\n\n## Import\n\nRecords can be imported using a composite ID formed of access rule type, access rule type identifier and identifer value, e.g.\n\n```sh\n $ pulumi import cloudflare:index/accessRule:AccessRule default zone/cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n where* `zone` - access rule type (`account`, `zone` or `user`) * `cb029e245cfdd66dc8d2e570d5dd3322` - access rule type ID (i.e the zone ID\n\n or account ID you wish to target) * `d41d8cd98f00b204e9800998ecf8427e` - access rule ID as returned by\n\n respective API endpoint for the type you are attempting to import. ",
            "properties": {
                "configuration": {
                    "$ref": "#/types/cloudflare:index/AccessRuleConfiguration:AccessRuleConfiguration",
                    "description": "Rule configuration to apply to a matched request. It's a complex value. See description below.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The action to apply to a matched request. Allowed values: \"block\", \"challenge\", \"whitelist\", \"js_challenge\", \"managed_challenge\"\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A personal note about the rule. Typically used as a reminder or explanation for the rule.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the access rule should be added.\n"
                }
            },
            "required": [
                "configuration",
                "mode",
                "zoneId"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/cloudflare:index/AccessRuleConfiguration:AccessRuleConfiguration",
                    "description": "Rule configuration to apply to a matched request. It's a complex value. See description below.\n",
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "string",
                    "description": "The action to apply to a matched request. Allowed values: \"block\", \"challenge\", \"whitelist\", \"js_challenge\", \"managed_challenge\"\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A personal note about the rule. Typically used as a reminder or explanation for the rule.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the access rule should be added.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "configuration",
                "mode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessRule resources.\n",
                "properties": {
                    "configuration": {
                        "$ref": "#/types/cloudflare:index/AccessRuleConfiguration:AccessRuleConfiguration",
                        "description": "Rule configuration to apply to a matched request. It's a complex value. See description below.\n",
                        "willReplaceOnChanges": true
                    },
                    "mode": {
                        "type": "string",
                        "description": "The action to apply to a matched request. Allowed values: \"block\", \"challenge\", \"whitelist\", \"js_challenge\", \"managed_challenge\"\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A personal note about the rule. Typically used as a reminder or explanation for the rule.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the access rule should be added.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accessServiceToken:AccessServiceToken": {
            "description": "Access Service Tokens are used for service-to-service communication\nwhen an application is behind Cloudflare Access.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Generate a service token that will renew if terraform is ran within 30 days of expiration\nconst myApp = new cloudflare.AccessServiceToken(\"my_app\", {\n    accountId: \"d41d8cd98f00b204e9800998ecf8427e\",\n    minDaysForRenewal: 30,\n    name: \"CI/CD app renewed\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n~\u003e **Important:** If you are importing an Access Service Token you will not have the `client_secret` available in the state for use. The `client_secret` is only available once, at creation. In most cases, it is better to just create a new resource should you need to reference it in other resources. Access Service Tokens can be imported using a composite ID formed of account ID and Service Token ID.\n\n```sh\n $ pulumi import cloudflare:index/accessServiceToken:AccessServiceToken my_app cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n where * `cb029e245cfdd66dc8d2e570d5dd3322` - Account ID * `d41d8cd98f00b204e9800998ecf8427e` - Access Service Token ID ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the Access Service is being created. Conflicts with `zone_id`.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "UUID client ID associated with the Service Token.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "A secret for interacting with Access protocols.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "Date when the token expires\n"
                },
                "minDaysForRenewal": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the token's intent.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the zone where the Access Service is being created. Conflicts with `account_id`.\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "expiresAt",
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the Access Service is being created. Conflicts with `zone_id`.\n"
                },
                "minDaysForRenewal": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name of the token's intent.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the zone where the Access Service is being created. Conflicts with `account_id`.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessServiceToken resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account where the Access Service is being created. Conflicts with `zone_id`.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "UUID client ID associated with the Service Token.\n",
                        "willReplaceOnChanges": true
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "A secret for interacting with Access protocols.\n",
                        "willReplaceOnChanges": true
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "Date when the token expires\n",
                        "willReplaceOnChanges": true
                    },
                    "minDaysForRenewal": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "Friendly name of the token's intent.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The ID of the zone where the Access Service is being created. Conflicts with `account_id`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/accountMember:AccountMember": {
            "description": "Provides a resource which manages Cloudflare account members.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst exampleUser = new cloudflare.AccountMember(\"example_user\", {\n    emailAddress: \"user@example.com\",\n    roleIds: [\n        \"68b329da9893e34099c7d8ad5cb9c940\",\n        \"d784fa8b6d98d27699781bd9a7cf19f0\",\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAccount members can be imported using a composite ID formed of account ID and account member ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/accountMember:AccountMember example_user d41d8cd98f00b204e9800998ecf8427e/b58c6f14d292556214bd64909bcdb118\n```\n\n where* `d41d8cd98f00b204e9800998ecf8427e` - account ID as returned by the [API](https://api.cloudflare.com/#accounts-account-details) * `b58c6f14d292556214bd64909bcdb118` - account member ID as returned by the [API](https://api.cloudflare.com/#account-members-member-details) ",
            "properties": {
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user who you wish to manage. Note: Following creation, this field becomes read only via the API and cannot be updated.\n"
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of account role IDs that you want to assign to a member.\n"
                }
            },
            "required": [
                "emailAddress",
                "roleIds"
            ],
            "inputProperties": {
                "emailAddress": {
                    "type": "string",
                    "description": "The email address of the user who you wish to manage. Note: Following creation, this field becomes read only via the API and cannot be updated.\n"
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of account role IDs that you want to assign to a member.\n"
                }
            },
            "requiredInputs": [
                "emailAddress",
                "roleIds"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountMember resources.\n",
                "properties": {
                    "emailAddress": {
                        "type": "string",
                        "description": "The email address of the user who you wish to manage. Note: Following creation, this field becomes read only via the API and cannot be updated.\n"
                    },
                    "roleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of account role IDs that you want to assign to a member.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/apiToken:ApiToken": {
            "description": "Provides a resource which manages Cloudflare API tokens.\n\nRead more about permission groups and their applicable scopes in\n[the official documentation](https://developers.cloudflare.com/api/tokens/create/permissions).\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}",
            "properties": {
                "condition": {
                    "$ref": "#/types/cloudflare:index/ApiTokenCondition:ApiTokenCondition",
                    "description": "Condition block. See the definition below.\n"
                },
                "issuedOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the API Token was issued.\n"
                },
                "modifiedOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the API Token was last modified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the APIToken.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/ApiTokenPolicy:ApiTokenPolicy"
                    },
                    "description": "Permissions policy. Multiple policy blocks can be defined.\nSee the definition below.\n"
                },
                "status": {
                    "type": "string"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the API Token.\n"
                }
            },
            "required": [
                "issuedOn",
                "modifiedOn",
                "name",
                "policies",
                "status",
                "value"
            ],
            "inputProperties": {
                "condition": {
                    "$ref": "#/types/cloudflare:index/ApiTokenCondition:ApiTokenCondition",
                    "description": "Condition block. See the definition below.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the APIToken.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/ApiTokenPolicy:ApiTokenPolicy"
                    },
                    "description": "Permissions policy. Multiple policy blocks can be defined.\nSee the definition below.\n"
                }
            },
            "requiredInputs": [
                "name",
                "policies"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApiToken resources.\n",
                "properties": {
                    "condition": {
                        "$ref": "#/types/cloudflare:index/ApiTokenCondition:ApiTokenCondition",
                        "description": "Condition block. See the definition below.\n"
                    },
                    "issuedOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the API Token was issued.\n"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the API Token was last modified.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the APIToken.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/ApiTokenPolicy:ApiTokenPolicy"
                        },
                        "description": "Permissions policy. Multiple policy blocks can be defined.\nSee the definition below.\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the API Token.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/argo:Argo": {
            "description": "Cloudflare Argo controls the routing to your origin and tiered caching options to speed up your website browsing experience.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.Argo(\"example\", {\n    smartRouting: \"on\",\n    tieredCaching: \"on\",\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nArgo settings can be imported the zone ID.\n\n```sh\n $ pulumi import cloudflare:index/argo:Argo example d41d8cd98f00b204e9800998ecf8427e\n```\n\n where `d41d8cd98f00b204e9800998ecf8427e` is the zone ID. ",
            "properties": {
                "smartRouting": {
                    "type": "string",
                    "description": "Whether smart routing is enabled. Valid values: `on` or `off`.\n"
                },
                "tieredCaching": {
                    "type": "string",
                    "description": "Whether tiered caching is enabled. Valid values: `on` or `off`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID that you wish to manage Argo on.\n"
                }
            },
            "required": [
                "zoneId"
            ],
            "inputProperties": {
                "smartRouting": {
                    "type": "string",
                    "description": "Whether smart routing is enabled. Valid values: `on` or `off`.\n"
                },
                "tieredCaching": {
                    "type": "string",
                    "description": "Whether tiered caching is enabled. Valid values: `on` or `off`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID that you wish to manage Argo on.\n"
                }
            },
            "requiredInputs": [
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Argo resources.\n",
                "properties": {
                    "smartRouting": {
                        "type": "string",
                        "description": "Whether smart routing is enabled. Valid values: `on` or `off`.\n"
                    },
                    "tieredCaching": {
                        "type": "string",
                        "description": "Whether tiered caching is enabled. Valid values: `on` or `off`.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID that you wish to manage Argo on.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/argoTunnel:ArgoTunnel": {
            "description": "Argo Tunnel exposes applications running on your local web server on any network with an internet connection without manually adding DNS records or configuring a firewall or router.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.ArgoTunnel(\"example\", {\n    accountId: \"d41d8cd98f00b204e9800998ecf8427e\",\n    name: \"my-tunnel\",\n    secret: \"AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg=\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nArgo Tunnels can be imported a composite ID of the account ID and tunnel UUID.\n\n```sh\n $ pulumi import cloudflare:index/argoTunnel:ArgoTunnel example d41d8cd98f00b204e9800998ecf8427e/fd2455cb-5fcc-4c13-8738-8d8d2605237f\n```\n\n where - `d41d8cd98f00b204e9800998ecf8427e` is the account ID - `fd2455cb-5fcc-4c13-8738-8d8d2605237f` is the Argo Tunnel UUID ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The Cloudflare account ID that you wish to manage the Argo Tunnel on.\n"
                },
                "cname": {
                    "type": "string",
                    "description": "Usable CNAME for accessing the Argo Tunnel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name chosen when the tunnel is created. Cannot be empty.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "32 or more bytes, encoded as a base64 string. The Create Argo Tunnel endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password.\n"
                }
            },
            "required": [
                "accountId",
                "cname",
                "name",
                "secret"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The Cloudflare account ID that you wish to manage the Argo Tunnel on.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name chosen when the tunnel is created. Cannot be empty.\n",
                    "willReplaceOnChanges": true
                },
                "secret": {
                    "type": "string",
                    "description": "32 or more bytes, encoded as a base64 string. The Create Argo Tunnel endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "name",
                "secret"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ArgoTunnel resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The Cloudflare account ID that you wish to manage the Argo Tunnel on.\n",
                        "willReplaceOnChanges": true
                    },
                    "cname": {
                        "type": "string",
                        "description": "Usable CNAME for accessing the Argo Tunnel.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A user-friendly name chosen when the tunnel is created. Cannot be empty.\n",
                        "willReplaceOnChanges": true
                    },
                    "secret": {
                        "type": "string",
                        "description": "32 or more bytes, encoded as a base64 string. The Create Argo Tunnel endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/authenticatedOriginPulls:AuthenticatedOriginPulls": {
            "description": "Provides a Cloudflare Authenticated Origin Pulls resource. An `cloudflare.AuthenticatedOriginPulls` resource is required to use Per-Zone or Per-Hostname Authenticated Origin Pulls.\n\n\n## Import\n\nAuthenticated Origin Pull configuration can be imported using a composite ID formed of the zone ID, the form of Authenticated Origin Pulls, and the certificate ID, with each section filled or left blank e.g. # Import Authenticated Origin Pull configuration\n\n```sh\n $ pulumi import cloudflare:index/authenticatedOriginPulls:AuthenticatedOriginPulls my_aop 023e105f4ecef8ad9ca31a8372d0c353//\n```\n\n # Import Per-Zone Authenticated Origin Pull configuration\n\n```sh\n $ pulumi import cloudflare:index/authenticatedOriginPulls:AuthenticatedOriginPulls my_per_zone_aop 023e105f4ecef8ad9ca31a8372d0c353/2458ce5a-0c35-4c7f-82c7-8e9487d3ff60/\n```\n\n # Import Per-Hostname Authenticated Origin Pull configuration\n\n```sh\n $ pulumi import cloudflare:index/authenticatedOriginPulls:AuthenticatedOriginPulls my_per_hostname_aop 023e105f4ecef8ad9ca31a8372d0c353/2458ce5a-0c35-4c7f-82c7-8e9487d3ff60/aop.example.com\n```\n\n ",
            "properties": {
                "authenticatedOriginPullsCertificate": {
                    "type": "string",
                    "description": "The id of an uploaded Authenticated Origin Pulls certificate. If no hostname is provided, this certificate will be used zone wide as Per-Zone Authenticated Origin Pulls.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not to enable Authenticated Origin Pulls on the given zone or hostname.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Specify a hostname to enable Per-Hostname Authenticated Origin Pulls on, using the provided certificate.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to upload the certificate to.\n"
                }
            },
            "required": [
                "enabled",
                "zoneId"
            ],
            "inputProperties": {
                "authenticatedOriginPullsCertificate": {
                    "type": "string",
                    "description": "The id of an uploaded Authenticated Origin Pulls certificate. If no hostname is provided, this certificate will be used zone wide as Per-Zone Authenticated Origin Pulls.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether or not to enable Authenticated Origin Pulls on the given zone or hostname.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Specify a hostname to enable Per-Hostname Authenticated Origin Pulls on, using the provided certificate.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to upload the certificate to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthenticatedOriginPulls resources.\n",
                "properties": {
                    "authenticatedOriginPullsCertificate": {
                        "type": "string",
                        "description": "The id of an uploaded Authenticated Origin Pulls certificate. If no hostname is provided, this certificate will be used zone wide as Per-Zone Authenticated Origin Pulls.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether or not to enable Authenticated Origin Pulls on the given zone or hostname.\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Specify a hostname to enable Per-Hostname Authenticated Origin Pulls on, using the provided certificate.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID to upload the certificate to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/authenticatedOriginPullsCertificate:AuthenticatedOriginPullsCertificate": {
            "description": "Provides a Cloudflare Authenticated Origin Pulls certificate resource. An uploaded client certificate is required to use Per-Zone or Per-Hostname Authenticated Origin Pulls.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Per-Zone Authenticated Origin Pulls certificate\nconst myPerZoneAopCert = new cloudflare.AuthenticatedOriginPullsCertificate(\"my_per_zone_aop_cert\", {\n    certificate: \"-----INSERT CERTIFICATE-----\",\n    privateKey: \"-----INSERT PRIVATE KEY-----\",\n    type: \"per-zone\",\n    zoneId: var_cloudflare_zone_id,\n});\n// Per-Hostname Authenticated Origin Pulls certificate\nconst myPerHostnameAopCert = new cloudflare.AuthenticatedOriginPullsCertificate(\"my_per_hostname_aop_cert\", {\n    certificate: \"-----INSERT CERTIFICATE-----\",\n    privateKey: \"-----INSERT PRIVATE KEY-----\",\n    type: \"per-hostname\",\n    zoneId: var_cloudflare_zone_id,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAuthenticated Origin Pull certificates can be imported using a composite ID formed of the zone ID, the form of Authenticated Origin Pulls, and the certificate ID, e.g. # Import Per-Zone Authenticated Origin Pull certificate\n\n```sh\n $ pulumi import cloudflare:index/authenticatedOriginPullsCertificate:AuthenticatedOriginPullsCertificate 2458ce5a-0c35-4c7f-82c7-8e9487d3ff60 023e105f4ecef8ad9ca31a8372d0c353/per-zone/2458ce5a-0c35-4c7f-82c7-8e9487d3ff60\n```\n\n # Import Per-Hostname Authenticated Origin Pull certificate\n\n```sh\n $ pulumi import cloudflare:index/authenticatedOriginPullsCertificate:AuthenticatedOriginPullsCertificate 2458ce5a-0c35-4c7f-82c7-8e9487d3ff60 023e105f4ecef8ad9ca31a8372d0c353/per-hostname/2458ce5a-0c35-4c7f-82c7-8e9487d3ff60\n```\n\n ",
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "The public client certificate.\n"
                },
                "expiresOn": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key of the client certificate.\n"
                },
                "serialNumber": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The form of Authenticated Origin Pulls to upload the certificate to.\n"
                },
                "uploadedOn": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to upload the certificate to.\n"
                }
            },
            "required": [
                "certificate",
                "expiresOn",
                "issuer",
                "privateKey",
                "serialNumber",
                "signature",
                "status",
                "type",
                "uploadedOn",
                "zoneId"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "description": "The public client certificate.\n",
                    "willReplaceOnChanges": true
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key of the client certificate.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The form of Authenticated Origin Pulls to upload the certificate to.\n",
                    "willReplaceOnChanges": true
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to upload the certificate to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "certificate",
                "privateKey",
                "type",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthenticatedOriginPullsCertificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "The public client certificate.\n",
                        "willReplaceOnChanges": true
                    },
                    "expiresOn": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "issuer": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private key of the client certificate.\n",
                        "willReplaceOnChanges": true
                    },
                    "serialNumber": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "signature": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The form of Authenticated Origin Pulls to upload the certificate to.\n",
                        "willReplaceOnChanges": true
                    },
                    "uploadedOn": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID to upload the certificate to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/byoIpPrefix:ByoIpPrefix": {
            "description": "Provides the ability to manage Bring-Your-Own-IP prefixes (BYOIP) which are used with or without Magic Transit.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.ByoIpPrefix(\"example\", {\n    advertisement: \"on\",\n    description: \"Example IP Prefix\",\n    prefixId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nThe current settings for Bring-Your-Own-IP prefixes can be imported using the prefix ID.\n\n```sh\n $ pulumi import cloudflare:index/byoIpPrefix:ByoIpPrefix example d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "advertisement": {
                    "type": "string",
                    "description": "Whether or not the prefix shall be announced. A prefix can be activated or deactivated once every 15 minutes (attempting more regular updates will trigger rate limiting). Valid values: `on` or `off`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the prefix.\n"
                },
                "prefixId": {
                    "type": "string",
                    "description": "The assigned Bring-Your-Own-IP prefix ID.\n"
                }
            },
            "required": [
                "accountId",
                "advertisement",
                "description",
                "prefixId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "advertisement": {
                    "type": "string",
                    "description": "Whether or not the prefix shall be announced. A prefix can be activated or deactivated once every 15 minutes (attempting more regular updates will trigger rate limiting). Valid values: `on` or `off`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the prefix.\n"
                },
                "prefixId": {
                    "type": "string",
                    "description": "The assigned Bring-Your-Own-IP prefix ID.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "prefixId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ByoIpPrefix resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "advertisement": {
                        "type": "string",
                        "description": "Whether or not the prefix shall be announced. A prefix can be activated or deactivated once every 15 minutes (attempting more regular updates will trigger rate limiting). Valid values: `on` or `off`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the prefix.\n"
                    },
                    "prefixId": {
                        "type": "string",
                        "description": "The assigned Bring-Your-Own-IP prefix ID.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/certificatePack:CertificatePack": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst dedicatedCustomExample = new cloudflare.CertificatePack(\"dedicated_custom_example\", {\n    hosts: [\n        \"example.com\",\n        \"sub.example.com\",\n    ],\n    type: \"dedicated_custom\",\n    zoneId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n});\n// Advanced certificate manager for DigiCert\nconst advancedExampleForDigicert = new cloudflare.CertificatePack(\"advanced_example_for_digicert\", {\n    certificateAuthority: \"digicert\",\n    cloudflareBranding: false,\n    hosts: [\n        \"example.com\",\n        \"sub.example.com\",\n    ],\n    type: \"advanced\",\n    validationMethod: \"txt\",\n    validityDays: 30,\n    zoneId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n});\n// Advanced certificate manager for Let's Encrypt\nconst advancedExampleForLetsEncrypt = new cloudflare.CertificatePack(\"advanced_example_for_lets_encrypt\", {\n    certificateAuthority: \"lets_encrypt\",\n    cloudflareBranding: false,\n    hosts: [\n        \"example.com\",\n        \"*.example.com\",\n    ],\n    type: \"advanced\",\n    validationMethod: \"http\",\n    validityDays: 90,\n    waitForActiveStatus: true,\n    zoneId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCertificate packs can be imported using a composite ID of the zone ID and certificate pack ID. This isn't recommended and it is advised to replace the certificate entirely instead.\n\n```sh\n $ pulumi import cloudflare:index/certificatePack:CertificatePack example cb029e245cfdd66dc8d2e570d5dd3322/8fda82e2-6af9-4eb2-992a-5ab65b792ef1\n```\n\n ",
            "properties": {
                "certificateAuthority": {
                    "type": "string",
                    "description": "Which certificate\nauthority to issue the certificate pack. Allowed values: `\"digicert\"`,\n`\"lets_encrypt\"`.\n"
                },
                "cloudflareBranding": {
                    "type": "boolean",
                    "description": "Whether or not to include\nCloudflare branding. This will add `sni.cloudflaressl.com` as the Common Name\nif set to `true`.\n"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hostnames to provision the certificate pack for.\nThe zone name must be included as a host. Note: If using Let's Encrypt, you\ncannot use individual subdomains and only a wildcard for subdomain is available.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Certificate pack configuration type.\nAllowed values: `\"custom\"`, `\"dedicated_custom\"`, `\"advanced\"`.\n"
                },
                "validationErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CertificatePackValidationError:CertificatePackValidationError"
                    }
                },
                "validationMethod": {
                    "type": "string",
                    "description": "Which validation method to\nuse in order to prove domain ownership. Allowed values: `\"txt\"`, `\"http\"`, `\"email\"`.\n"
                },
                "validationRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CertificatePackValidationRecord:CertificatePackValidationRecord"
                    }
                },
                "validityDays": {
                    "type": "integer",
                    "description": "How long the certificate is valid\nfor. Note: If using Let's Encrypt, this value can only be 90 days.\nAllowed values: 14, 30, 90, 365.\n"
                },
                "waitForActiveStatus": {
                    "type": "boolean",
                    "description": "Whether or not to wait for a certificate\npack to reach status `active` during creation. Defaults to `false`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the certificate pack should be added.\n"
                }
            },
            "required": [
                "certificateAuthority",
                "hosts",
                "type",
                "validationErrors",
                "validationRecords",
                "zoneId"
            ],
            "inputProperties": {
                "certificateAuthority": {
                    "type": "string",
                    "description": "Which certificate\nauthority to issue the certificate pack. Allowed values: `\"digicert\"`,\n`\"lets_encrypt\"`.\n",
                    "willReplaceOnChanges": true
                },
                "cloudflareBranding": {
                    "type": "boolean",
                    "description": "Whether or not to include\nCloudflare branding. This will add `sni.cloudflaressl.com` as the Common Name\nif set to `true`.\n",
                    "willReplaceOnChanges": true
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of hostnames to provision the certificate pack for.\nThe zone name must be included as a host. Note: If using Let's Encrypt, you\ncannot use individual subdomains and only a wildcard for subdomain is available.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Certificate pack configuration type.\nAllowed values: `\"custom\"`, `\"dedicated_custom\"`, `\"advanced\"`.\n",
                    "willReplaceOnChanges": true
                },
                "validationErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CertificatePackValidationError:CertificatePackValidationError"
                    }
                },
                "validationMethod": {
                    "type": "string",
                    "description": "Which validation method to\nuse in order to prove domain ownership. Allowed values: `\"txt\"`, `\"http\"`, `\"email\"`.\n",
                    "willReplaceOnChanges": true
                },
                "validationRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CertificatePackValidationRecord:CertificatePackValidationRecord"
                    }
                },
                "validityDays": {
                    "type": "integer",
                    "description": "How long the certificate is valid\nfor. Note: If using Let's Encrypt, this value can only be 90 days.\nAllowed values: 14, 30, 90, 365.\n",
                    "willReplaceOnChanges": true
                },
                "waitForActiveStatus": {
                    "type": "boolean",
                    "description": "Whether or not to wait for a certificate\npack to reach status `active` during creation. Defaults to `false`.\n",
                    "willReplaceOnChanges": true
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the certificate pack should be added.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hosts",
                "type",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CertificatePack resources.\n",
                "properties": {
                    "certificateAuthority": {
                        "type": "string",
                        "description": "Which certificate\nauthority to issue the certificate pack. Allowed values: `\"digicert\"`,\n`\"lets_encrypt\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "cloudflareBranding": {
                        "type": "boolean",
                        "description": "Whether or not to include\nCloudflare branding. This will add `sni.cloudflaressl.com` as the Common Name\nif set to `true`.\n",
                        "willReplaceOnChanges": true
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of hostnames to provision the certificate pack for.\nThe zone name must be included as a host. Note: If using Let's Encrypt, you\ncannot use individual subdomains and only a wildcard for subdomain is available.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Certificate pack configuration type.\nAllowed values: `\"custom\"`, `\"dedicated_custom\"`, `\"advanced\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "validationErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/CertificatePackValidationError:CertificatePackValidationError"
                        }
                    },
                    "validationMethod": {
                        "type": "string",
                        "description": "Which validation method to\nuse in order to prove domain ownership. Allowed values: `\"txt\"`, `\"http\"`, `\"email\"`.\n",
                        "willReplaceOnChanges": true
                    },
                    "validationRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/CertificatePackValidationRecord:CertificatePackValidationRecord"
                        }
                    },
                    "validityDays": {
                        "type": "integer",
                        "description": "How long the certificate is valid\nfor. Note: If using Let's Encrypt, this value can only be 90 days.\nAllowed values: 14, 30, 90, 365.\n",
                        "willReplaceOnChanges": true
                    },
                    "waitForActiveStatus": {
                        "type": "boolean",
                        "description": "Whether or not to wait for a certificate\npack to reach status `active` during creation. Defaults to `false`.\n",
                        "willReplaceOnChanges": true
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the certificate pack should be added.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/customHostname:CustomHostname": {
            "description": "Provides a Cloudflare custom hostname (also known as SSL for SaaS) resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst exampleHostname = new cloudflare.CustomHostname(\"example_hostname\", {\n    hostname: \"hostname.example.com\",\n    ssls: [{\n        method: \"txt\",\n    }],\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCustom hostname certificates can be imported using a composite ID formed of the zone ID and [hostname ID](https://api.cloudflare.com/#custom-hostname-for-a-zone-properties), separated by a \"/\" e.g.\n\n```sh\n $ pulumi import cloudflare:index/customHostname:CustomHostname example d41d8cd98f00b204e9800998ecf8427e/0d89c70d-ad9f-4843-b99f-6cc0252067e9\n```\n\n ",
            "properties": {
                "customOriginServer": {
                    "type": "string",
                    "description": "The custom origin server used for certificates.\n"
                },
                "customOriginSni": {
                    "type": "string",
                    "description": "The [custom origin SNI](https://developers.cloudflare.com/ssl/ssl-for-saas/hostname-specific-behavior/custom-origin) used for certificates.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname you intend to request a certificate for.\n"
                },
                "ownershipVerification": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ownershipVerificationHttp": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "ssls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CustomHostnameSsl:CustomHostnameSsl"
                    },
                    "description": "SSL configuration of the certificate. See further notes below.\n"
                },
                "status": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID where the custom hostname should be assigned.\n"
                }
            },
            "required": [
                "hostname",
                "ownershipVerification",
                "ownershipVerificationHttp",
                "status",
                "zoneId"
            ],
            "inputProperties": {
                "customOriginServer": {
                    "type": "string",
                    "description": "The custom origin server used for certificates.\n"
                },
                "customOriginSni": {
                    "type": "string",
                    "description": "The [custom origin SNI](https://developers.cloudflare.com/ssl/ssl-for-saas/hostname-specific-behavior/custom-origin) used for certificates.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname you intend to request a certificate for.\n",
                    "willReplaceOnChanges": true
                },
                "ssls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CustomHostnameSsl:CustomHostnameSsl"
                    },
                    "description": "SSL configuration of the certificate. See further notes below.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID where the custom hostname should be assigned.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostname",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomHostname resources.\n",
                "properties": {
                    "customOriginServer": {
                        "type": "string",
                        "description": "The custom origin server used for certificates.\n"
                    },
                    "customOriginSni": {
                        "type": "string",
                        "description": "The [custom origin SNI](https://developers.cloudflare.com/ssl/ssl-for-saas/hostname-specific-behavior/custom-origin) used for certificates.\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Hostname you intend to request a certificate for.\n",
                        "willReplaceOnChanges": true
                    },
                    "ownershipVerification": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ownershipVerificationHttp": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ssls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/CustomHostnameSsl:CustomHostnameSsl"
                        },
                        "description": "SSL configuration of the certificate. See further notes below.\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID where the custom hostname should be assigned.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/customHostnameFallbackOrigin:CustomHostnameFallbackOrigin": {
            "description": "Provides a Cloudflare custom hostname fallback origin resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst fallbackOrigin = new cloudflare.CustomHostnameFallbackOrigin(\"fallback_origin\", {\n    origin: \"fallback.example.com\",\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCustom hostname fallback origins can be imported using a composite ID formed of the zone ID and [fallback origin](https://api.cloudflare.com/#custom-hostname-fallback-origin-for-a-zone-properties), separated by a \"/\" e.g.\n\n```sh\n $ pulumi import cloudflare:index/customHostnameFallbackOrigin:CustomHostnameFallbackOrigin example d41d8cd98f00b204e9800998ecf8427e/fallback.example.com\n```\n\n ",
            "properties": {
                "origin": {
                    "type": "string",
                    "description": "Hostname you intend to fallback requests to. Origin must be a proxied A/AAAA/CNAME DNS record within Clouldflare.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the fallback origin's activation.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID where the custom hostname should be assigned.\n"
                }
            },
            "required": [
                "origin",
                "status",
                "zoneId"
            ],
            "inputProperties": {
                "origin": {
                    "type": "string",
                    "description": "Hostname you intend to fallback requests to. Origin must be a proxied A/AAAA/CNAME DNS record within Clouldflare.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID where the custom hostname should be assigned.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "origin",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomHostnameFallbackOrigin resources.\n",
                "properties": {
                    "origin": {
                        "type": "string",
                        "description": "Hostname you intend to fallback requests to. Origin must be a proxied A/AAAA/CNAME DNS record within Clouldflare.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the fallback origin's activation.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID where the custom hostname should be assigned.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/customPages:CustomPages": {
            "description": "Provides a resource which manages Cloudflare custom error pages.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst basicChallenge = new cloudflare.CustomPages(\"basic_challenge\", {\n    state: \"customized\",\n    type: \"basic_challenge\",\n    url: \"https://example.com/challenge.html\",\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCustom pages can be imported using a composite ID formed of* `customPageLevel` - Either `account` or `zone`. * `identifier` - The ID of the account or zone you intend to manage. * `pageType` - The value from the `type` argument. Example for a zone\n\n```sh\n $ pulumi import cloudflare:index/customPages:CustomPages basic_challenge zone/d41d8cd98f00b204e9800998ecf8427e/basic_challenge\n```\n\n Example for an account\n\n```sh\n $ pulumi import cloudflare:index/customPages:CustomPages basic_challenge account/e268443e43d93dab7ebef303bbe9642f/basic_challenge\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID where the custom pages should be\nupdated. Either `account_id` or `zone_id` must be provided. If\n`account_id` is present, it will override the zone setting.\n"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The type of custom page you wish to update. Must\nbe one of `basic_challenge`, `waf_challenge`, `waf_block`,\n`ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`,\n`500_errors`, `1000_errors`, `always_online`, `managed_challenge`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of where the custom page source is located.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID where the custom pages should be\nupdated. Either `zone_id` or `account_id` must be provided.\n"
                }
            },
            "required": [
                "type",
                "url"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID where the custom pages should be\nupdated. Either `account_id` or `zone_id` must be provided. If\n`account_id` is present, it will override the zone setting.\n"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "The type of custom page you wish to update. Must\nbe one of `basic_challenge`, `waf_challenge`, `waf_block`,\n`ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`,\n`500_errors`, `1000_errors`, `always_online`, `managed_challenge`.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of where the custom page source is located.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID where the custom pages should be\nupdated. Either `zone_id` or `account_id` must be provided.\n"
                }
            },
            "requiredInputs": [
                "type",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomPages resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account ID where the custom pages should be\nupdated. Either `account_id` or `zone_id` must be provided. If\n`account_id` is present, it will override the zone setting.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of custom page you wish to update. Must\nbe one of `basic_challenge`, `waf_challenge`, `waf_block`,\n`ratelimit_block`, `country_challenge`, `ip_block`, `under_attack`,\n`500_errors`, `1000_errors`, `always_online`, `managed_challenge`.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of where the custom page source is located.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID where the custom pages should be\nupdated. Either `zone_id` or `account_id` must be provided.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/customSsl:CustomSsl": {
            "description": "Provides a Cloudflare custom ssl resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst config = new pulumi.Config();\nconst cloudflareZoneId = config.get(\"cloudflareZoneId\") || \"1d5fdc9e88c8a8c4518b068cd94331fe\";\n\n// Add a custom ssl certificate to the domain\nconst foossl = new cloudflare.CustomSsl(\"foossl\", {\n    customSslOptions: {\n        bundleMethod: \"ubiquitous\",\n        certificate: \"-----INSERT CERTIFICATE-----\",\n        geoRestrictions: \"us\",\n        privateKey: \"-----INSERT PRIVATE KEY-----\",\n        type: \"legacy_custom\",\n    },\n    zoneId: cloudflareZoneId,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCustom SSL Certs can be imported using a composite ID formed of the zone ID and [certificate ID](https://api.cloudflare.com/#custom-ssl-for-a-zone-properties), separated by a \"/\" e.g.\n\n```sh\n $ pulumi import cloudflare:index/customSsl:CustomSsl default 1d5fdc9e88c8a8c4518b068cd94331fe/0123f0ab-9cde-45b2-80bd-4da3010f1337\n```\n\n ",
            "properties": {
                "customSslOptions": {
                    "$ref": "#/types/cloudflare:index/CustomSslCustomSslOptions:CustomSslCustomSslOptions",
                    "description": "The certificate, private key and associated optional parameters, such as bundle_method, geo_restrictions, and type.\n"
                },
                "customSslPriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CustomSslCustomSslPriority:CustomSslCustomSslPriority"
                    }
                },
                "expiresOn": {
                    "type": "string"
                },
                "hosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "issuer": {
                    "type": "string"
                },
                "modifiedOn": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "signature": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "uploadedOn": {
                    "type": "string"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone id to the custom ssl cert should be added.\n"
                }
            },
            "required": [
                "expiresOn",
                "hosts",
                "issuer",
                "modifiedOn",
                "priority",
                "signature",
                "status",
                "uploadedOn",
                "zoneId"
            ],
            "inputProperties": {
                "customSslOptions": {
                    "$ref": "#/types/cloudflare:index/CustomSslCustomSslOptions:CustomSslCustomSslOptions",
                    "description": "The certificate, private key and associated optional parameters, such as bundle_method, geo_restrictions, and type.\n",
                    "willReplaceOnChanges": true
                },
                "customSslPriorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/CustomSslCustomSslPriority:CustomSslCustomSslPriority"
                    }
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone id to the custom ssl cert should be added.\n"
                }
            },
            "requiredInputs": [
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomSsl resources.\n",
                "properties": {
                    "customSslOptions": {
                        "$ref": "#/types/cloudflare:index/CustomSslCustomSslOptions:CustomSslCustomSslOptions",
                        "description": "The certificate, private key and associated optional parameters, such as bundle_method, geo_restrictions, and type.\n",
                        "willReplaceOnChanges": true
                    },
                    "customSslPriorities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/CustomSslCustomSslPriority:CustomSslCustomSslPriority"
                        }
                    },
                    "expiresOn": {
                        "type": "string"
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "issuer": {
                        "type": "string"
                    },
                    "modifiedOn": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "uploadedOn": {
                        "type": "string"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone id to the custom ssl cert should be added.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/devicePolicyCertificates:DevicePolicyCertificates": {
            "description": "Provides a Cloudflare device policy certificates resource. Device policy certificate resources enable client device certificate generation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.DevicePolicyCertificates(\"example\", {\n    enabled: true,\n    zoneId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDevice policy certificate settings can be imported using the zone ID.\n\n```sh\n $ pulumi import cloudflare:index/devicePolicyCertificates:DevicePolicyCertificates example cb029e245cfdd66dc8d2e570d5dd3322\n```\n\n ",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "True if certificate generation is enabled.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID where certificate generation is allowed.\n"
                }
            },
            "required": [
                "enabled",
                "zoneId"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "True if certificate generation is enabled.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID where certificate generation is allowed.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DevicePolicyCertificates resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "True if certificate generation is enabled.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID where certificate generation is allowed.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/devicePostureIntegration:DevicePostureIntegration": {
            "description": "Provides a Cloudflare Device Posture Integration resource. Device posture integrations configure third-party data providers for device posture rules.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst thirdPartyDevicesPostureIntegration = new cloudflare.DevicePostureIntegration(\"third_party_devices_posture_integration\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    configs: [{\n        apiUrl: \"https://example.com/api\",\n        authUrl: \"https://example.com/connect/token\",\n        clientId: \"client-id\",\n        clientSecret: \"client-secret\",\n    }],\n    interval: \"24h\",\n    name: \"Device posture integration\",\n    type: \"workspace_one\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nDevice posture integrations can be imported using a composite ID formed of account ID and device posture integration ID.\n\n```sh\n $ pulumi import cloudflare:index/devicePostureIntegration:DevicePostureIntegration corporate_devices cb029e245cfdd66dc8d2e570d5dd3322/0ade592a-62d6-46ab-bac8-01f47c7fa792\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the device posture integration should be added.\n"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/DevicePostureIntegrationConfig:DevicePostureIntegrationConfig"
                    },
                    "description": "The device posture integration's connection authorization parameters.\n"
                },
                "identifier": {
                    "type": "string"
                },
                "interval": {
                    "type": "string",
                    "description": "Indicates the frequency with which to poll the third-party API.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device posture integration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The device posture integration type. Valid values are `workspace_one`.\n"
                }
            },
            "required": [
                "accountId",
                "name",
                "type"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the device posture integration should be added.\n"
                },
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/DevicePostureIntegrationConfig:DevicePostureIntegrationConfig"
                    },
                    "description": "The device posture integration's connection authorization parameters.\n"
                },
                "identifier": {
                    "type": "string"
                },
                "interval": {
                    "type": "string",
                    "description": "Indicates the frequency with which to poll the third-party API.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device posture integration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The device posture integration type. Valid values are `workspace_one`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "name",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DevicePostureIntegration resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the device posture integration should be added.\n"
                    },
                    "configs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/DevicePostureIntegrationConfig:DevicePostureIntegrationConfig"
                        },
                        "description": "The device posture integration's connection authorization parameters.\n"
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "string",
                        "description": "Indicates the frequency with which to poll the third-party API.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the device posture integration.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The device posture integration type. Valid values are `workspace_one`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/devicePostureRule:DevicePostureRule": {
            "description": "Provides a Cloudflare Device Posture Rule resource. Device posture rules configure security policies for device posture checks.\n\n\n## Import\n\nDevice posture rules can be imported using a composite ID formed of account ID and device posture rule ID.\n\n```sh\n $ pulumi import cloudflare:index/devicePostureRule:DevicePostureRule corporate_devices cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the device posture rule should be added.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the device posture rule.\n"
                },
                "expiration": {
                    "type": "string",
                    "description": "Expire posture results after the specified amount of time.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/DevicePostureRuleInput:DevicePostureRuleInput"
                    },
                    "description": "The value to be checked against. See below for reference\nstructure.\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/DevicePostureRuleMatch:DevicePostureRuleMatch"
                    },
                    "description": "The conditions that the client must match to run the rule. See below for reference structure.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device posture rule.\n"
                },
                "schedule": {
                    "type": "string",
                    "description": "Tells the client when to run the device posture check.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The device posture rule type. Valid values are `file`, `application`, and `serial_number`.\n"
                }
            },
            "required": [
                "accountId",
                "inputs",
                "type"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the device posture rule should be added.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the device posture rule.\n"
                },
                "expiration": {
                    "type": "string",
                    "description": "Expire posture results after the specified amount of time.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/DevicePostureRuleInput:DevicePostureRuleInput"
                    },
                    "description": "The value to be checked against. See below for reference\nstructure.\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/DevicePostureRuleMatch:DevicePostureRuleMatch"
                    },
                    "description": "The conditions that the client must match to run the rule. See below for reference structure.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the device posture rule.\n"
                },
                "schedule": {
                    "type": "string",
                    "description": "Tells the client when to run the device posture check.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The device posture rule type. Valid values are `file`, `application`, and `serial_number`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DevicePostureRule resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the device posture rule should be added.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the device posture rule.\n"
                    },
                    "expiration": {
                        "type": "string",
                        "description": "Expire posture results after the specified amount of time.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                    },
                    "inputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/DevicePostureRuleInput:DevicePostureRuleInput"
                        },
                        "description": "The value to be checked against. See below for reference\nstructure.\n"
                    },
                    "matches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/DevicePostureRuleMatch:DevicePostureRuleMatch"
                        },
                        "description": "The conditions that the client must match to run the rule. See below for reference structure.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the device posture rule.\n"
                    },
                    "schedule": {
                        "type": "string",
                        "description": "Tells the client when to run the device posture check.\nMust be in the format `\"1h\"` or `\"30m\"`. Valid units are `h` and `m`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The device posture rule type. Valid values are `file`, `application`, and `serial_number`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/fallbackDomain:FallbackDomain": {
            "description": "Provides a Cloudflare Fallback Domain resource. Fallback domains are used to ignore DNS requests to a given list of domains. These DNS requests will be passed back to other DNS servers configured on existing network interfaces on the device.\n\n\n## Import\n\nFallback Domains can be imported using the account identifer.\n\n```sh\n $ pulumi import cloudflare:index/fallbackDomain:FallbackDomain example 1d5fdc9e88c8a8c4518b068cd94331fe\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the device posture rule should be added.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/FallbackDomainDomain:FallbackDomainDomain"
                    },
                    "description": "The value of the domain attributes (refer to the nested schema).\n"
                }
            },
            "required": [
                "accountId",
                "domains"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the device posture rule should be added.\n"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/FallbackDomainDomain:FallbackDomainDomain"
                    },
                    "description": "The value of the domain attributes (refer to the nested schema).\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "domains"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FallbackDomain resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the device posture rule should be added.\n"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/FallbackDomainDomain:FallbackDomainDomain"
                        },
                        "description": "The value of the domain attributes (refer to the nested schema).\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/filter:Filter": {
            "description": "Filter expressions that can be referenced across multiple features, e.g. Firewall Rule. The expression format is similar to [Wireshark Display Filter](https://www.wireshark.org/docs/man-pages/wireshark-filter.html).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst wordpress = new cloudflare.Filter(\"wordpress\", {\n    description: \"Wordpress break-in attempts that are outside of the office\",\n    expression: \"(http.request.uri.path ~ \\\".*wp-login.php\\\" or http.request.uri.path ~ \\\".*xmlrpc.php\\\") and ip.src ne 192.0.2.1\",\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nFilter can be imported using a composite ID formed of zone ID and filter ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/filter:Filter default d41d8cd98f00b204e9800998ecf8427e/9e107d9d372bb6826bd81d3542a419d6\n```\n\n where* `d41d8cd98f00b204e9800998ecf8427e` - zone ID * `9e107d9d372bb6826bd81d3542a419d6` - filter ID as returned by [API](https://api.cloudflare.com/#zone-firewall-filters) ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A note that you can use to describe the purpose of the filter.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The filter expression to be used.\n"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Whether this filter is currently paused. Boolean value.\n"
                },
                "ref": {
                    "type": "string",
                    "description": "Short reference tag to quickly select related rules.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the Filter should be added.\n"
                }
            },
            "required": [
                "expression",
                "zoneId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A note that you can use to describe the purpose of the filter.\n"
                },
                "expression": {
                    "type": "string",
                    "description": "The filter expression to be used.\n"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Whether this filter is currently paused. Boolean value.\n"
                },
                "ref": {
                    "type": "string",
                    "description": "Short reference tag to quickly select related rules.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the Filter should be added.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "expression",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Filter resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A note that you can use to describe the purpose of the filter.\n"
                    },
                    "expression": {
                        "type": "string",
                        "description": "The filter expression to be used.\n"
                    },
                    "paused": {
                        "type": "boolean",
                        "description": "Whether this filter is currently paused. Boolean value.\n"
                    },
                    "ref": {
                        "type": "string",
                        "description": "Short reference tag to quickly select related rules.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the Filter should be added.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/firewallRule:FirewallRule": {
            "description": "Define Firewall rules using filter expressions for more control over how traffic is matched to the rule.\nA filter expression permits selecting traffic by multiple criteria allowing greater freedom in rule creation.\n\nFilter expressions needs to be created first before using Firewall Rule. See Filter.\n\nIf you want to configure Custom Firewall rules, you need to use cloudflare_ruleset, because Custom Rules are built upon the\n[Cloudflare Ruleset Engine](https://developers.cloudflare.com/ruleset-engine/).\n\n\n## Import\n\nFirewall Rule can be imported using a composite ID formed of zone ID and rule ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/firewallRule:FirewallRule default d41d8cd98f00b204e9800998ecf8427e/9e107d9d372bb6826bd81d3542a419d6\n```\n\n where* `d41d8cd98f00b204e9800998ecf8427e` - zone ID * `9e107d9d372bb6826bd81d3542a419d6` - rule ID as returned by [API](https://api.cloudflare.com/#zone-firewall-filter-rules) ",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to apply to a matched request. Allowed values: \"block\", \"challenge\", \"allow\", \"js_challenge\", \"managed_challenge\", \"bypass\". Enterprise plan also allows \"log\".\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the rule to help identify it.\n"
                },
                "filterId": {
                    "type": "string"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Whether this filter based firewall rule is currently paused. Boolean value.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the rule to allow control of processing order. A lower number indicates high priority. If not provided, any rules with a priority will be sequenced before those without.\n"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of products to bypass for a request when the bypass action is used. Allowed values: \"zoneLockdown\", \"uaBlock\", \"bic\", \"hot\", \"securityLevel\", \"rateLimit\", \"waf\".\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the Filter should be added.\n"
                }
            },
            "required": [
                "action",
                "filterId",
                "zoneId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action to apply to a matched request. Allowed values: \"block\", \"challenge\", \"allow\", \"js_challenge\", \"managed_challenge\", \"bypass\". Enterprise plan also allows \"log\".\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the rule to help identify it.\n"
                },
                "filterId": {
                    "type": "string"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Whether this filter based firewall rule is currently paused. Boolean value.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the rule to allow control of processing order. A lower number indicates high priority. If not provided, any rules with a priority will be sequenced before those without.\n"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of products to bypass for a request when the bypass action is used. Allowed values: \"zoneLockdown\", \"uaBlock\", \"bic\", \"hot\", \"securityLevel\", \"rateLimit\", \"waf\".\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the Filter should be added.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "action",
                "filterId",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to apply to a matched request. Allowed values: \"block\", \"challenge\", \"allow\", \"js_challenge\", \"managed_challenge\", \"bypass\". Enterprise plan also allows \"log\".\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the rule to help identify it.\n"
                    },
                    "filterId": {
                        "type": "string"
                    },
                    "paused": {
                        "type": "boolean",
                        "description": "Whether this filter based firewall rule is currently paused. Boolean value.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the rule to allow control of processing order. A lower number indicates high priority. If not provided, any rules with a priority will be sequenced before those without.\n"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of products to bypass for a request when the bypass action is used. Allowed values: \"zoneLockdown\", \"uaBlock\", \"bic\", \"hot\", \"securityLevel\", \"rateLimit\", \"waf\".\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the Filter should be added.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/greTunnel:GreTunnel": {
            "description": "Provides a resource, that manages GRE tunnels for Magic Transit.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.GreTunnel(\"example\", {\n    accountId: \"c4a7362d577a6c3019a474fd6f485821\",\n    cloudflareGreEndpoint: \"203.0.113.1\",\n    customerGreEndpoint: \"203.0.113.1\",\n    description: \"Tunnel for ISP X\",\n    healthCheckEnabled: true,\n    healthCheckTarget: \"203.0.113.1\",\n    healthCheckType: \"reply\",\n    interfaceAddress: \"192.0.2.0/31\",\n    mtu: 1476,\n    name: \"GRE_1\",\n    ttl: 64,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn existing GRE tunnel can be imported using the account ID and tunnel ID\n\n```sh\n $ pulumi import cloudflare:index/greTunnel:GreTunnel example d41d8cd98f00b204e9800998ecf8427e/cb029e245cfdd66dc8d2e570d5dd3322\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the tunnel is being created.\n"
                },
                "cloudflareGreEndpoint": {
                    "type": "string",
                    "description": "The IP address assigned to the Cloudflare side of the GRE tunnel.\n"
                },
                "customerGreEndpoint": {
                    "type": "string",
                    "description": "The IP address assigned to the customer side of the GRE tunnel.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the GRE tunnel.\n"
                },
                "healthCheckEnabled": {
                    "type": "boolean",
                    "description": "Specifies if ICMP tunnel health checks are enabled Default: `true`.\n"
                },
                "healthCheckTarget": {
                    "type": "string",
                    "description": "The IP address of the customer endpoint that will receive tunnel health checks. Default: `\u003ccustomer_gre_endpoint\u003e`.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "Specifies the ICMP echo type for the health check (`request` or `reply`) Default: `reply`.\n"
                },
                "interfaceAddress": {
                    "type": "string",
                    "description": "31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel.\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. Maximum value 1476 and minimum value 576. Default: `1476`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the GRE tunnel.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "Time To Live (TTL) in number of hops of the GRE tunnel. Minimum value 64. Default: `64`.\n"
                }
            },
            "required": [
                "cloudflareGreEndpoint",
                "customerGreEndpoint",
                "healthCheckEnabled",
                "healthCheckTarget",
                "healthCheckType",
                "interfaceAddress",
                "mtu",
                "name",
                "ttl"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the tunnel is being created.\n",
                    "willReplaceOnChanges": true
                },
                "cloudflareGreEndpoint": {
                    "type": "string",
                    "description": "The IP address assigned to the Cloudflare side of the GRE tunnel.\n"
                },
                "customerGreEndpoint": {
                    "type": "string",
                    "description": "The IP address assigned to the customer side of the GRE tunnel.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the GRE tunnel.\n"
                },
                "healthCheckEnabled": {
                    "type": "boolean",
                    "description": "Specifies if ICMP tunnel health checks are enabled Default: `true`.\n"
                },
                "healthCheckTarget": {
                    "type": "string",
                    "description": "The IP address of the customer endpoint that will receive tunnel health checks. Default: `\u003ccustomer_gre_endpoint\u003e`.\n"
                },
                "healthCheckType": {
                    "type": "string",
                    "description": "Specifies the ICMP echo type for the health check (`request` or `reply`) Default: `reply`.\n"
                },
                "interfaceAddress": {
                    "type": "string",
                    "description": "31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel.\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. Maximum value 1476 and minimum value 576. Default: `1476`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the GRE tunnel.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "Time To Live (TTL) in number of hops of the GRE tunnel. Minimum value 64. Default: `64`.\n"
                }
            },
            "requiredInputs": [
                "cloudflareGreEndpoint",
                "customerGreEndpoint",
                "interfaceAddress",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GreTunnel resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account where the tunnel is being created.\n",
                        "willReplaceOnChanges": true
                    },
                    "cloudflareGreEndpoint": {
                        "type": "string",
                        "description": "The IP address assigned to the Cloudflare side of the GRE tunnel.\n"
                    },
                    "customerGreEndpoint": {
                        "type": "string",
                        "description": "The IP address assigned to the customer side of the GRE tunnel.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the GRE tunnel.\n"
                    },
                    "healthCheckEnabled": {
                        "type": "boolean",
                        "description": "Specifies if ICMP tunnel health checks are enabled Default: `true`.\n"
                    },
                    "healthCheckTarget": {
                        "type": "string",
                        "description": "The IP address of the customer endpoint that will receive tunnel health checks. Default: `\u003ccustomer_gre_endpoint\u003e`.\n"
                    },
                    "healthCheckType": {
                        "type": "string",
                        "description": "Specifies the ICMP echo type for the health check (`request` or `reply`) Default: `reply`.\n"
                    },
                    "interfaceAddress": {
                        "type": "string",
                        "description": "31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel.\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. Maximum value 1476 and minimum value 576. Default: `1476`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the GRE tunnel.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "Time To Live (TTL) in number of hops of the GRE tunnel. Minimum value 64. Default: `64`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/healthcheck:Healthcheck": {
            "description": "Standalone Health Checks provide a way to monitor origin servers without needing a Cloudflare Load Balancer. \n\n{{% examples %}}\n## Example Usage\n\nThe resource supports HTTP, HTTPS and TCP type health checks.\n{{% /examples %}}",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The hostname or IP address of the origin server to run health checks on.\n"
                },
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Do not validate the certificate when the health check uses HTTPS. Valid values: `true` or `false` (Default: `false`).\n"
                },
                "checkRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regions from which to run health checks. If not set Cloudflare will pick a default region. Valid values: `WNAM`, `ENAM`, `WEU`, `EEU`, `NSAM`, `SSAM`, `OC`, `ME`, `NAF`, `SAF`, `IN`, `SEAS`, `NEAS`, `ALL_REGIONS`.\n"
                },
                "consecutiveFails": {
                    "type": "integer",
                    "description": "The number of consecutive fails required from a health check before changing the health to unhealthy. (Default: `1`)\n"
                },
                "consecutiveSuccesses": {
                    "type": "integer",
                    "description": "The number of consecutive successes required from a health check before changing the health to healthy. (Default: `1`)\n"
                },
                "createdOn": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the health check.\n"
                },
                "expectedBody": {
                    "type": "string",
                    "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.\n"
                },
                "expectedCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The expected HTTP response codes (e.g. \"200\") or code ranges (e.g. \"2xx\" for all codes starting with 2) of the health check. (Default: `[\"200\"]`)\n"
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Follow redirects if the origin returns a 3xx status code. Valid values: `true` or `false` (Default: `false`).\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/HealthcheckHeader:HealthcheckHeader"
                    },
                    "description": "The header name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations. (Default: `60`)\n"
                },
                "method": {
                    "type": "string",
                    "description": "The TCP connection method to use for the health check. Valid values: `connection_established` (Default: `connection_established`).\n"
                },
                "modifiedOn": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.\n"
                },
                "notificationEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses we want to send the notifications to. *Deprecated, use `cloudflare.NotificationPolicy` instead.*\n",
                    "deprecationMessage": "Use `cloudflare_notification_policy` instead."
                },
                "notificationSuspended": {
                    "type": "boolean",
                    "description": "Whether the notifications are suspended or not. Useful for maintenance periods. Valid values: `true` or `false` (Default: `false`). *Deprecated, use `cloudflare.NotificationPolicy` instead.*\n",
                    "deprecationMessage": "Use `cloudflare_notification_policy` instead."
                },
                "path": {
                    "type": "string",
                    "description": "The endpoint path to health check against. (Default: `/`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number to connect to for the health check.  Valid values are in the range `0-65535` (Default: `80`).\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. (Default: `2`)\n"
                },
                "suspended": {
                    "type": "boolean",
                    "description": "If suspended, no health checks are sent to the origin. Valid values: `true` or `false` (Default: `false`).\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout (in seconds) before marking the health check as failed. (Default: `5`)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The protocol to use for the health check. Valid values: `HTTP`, `HTTPS`, `TCP`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to which apply settings.\n"
                }
            },
            "required": [
                "address",
                "checkRegions",
                "createdOn",
                "method",
                "modifiedOn",
                "name",
                "type",
                "zoneId"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The hostname or IP address of the origin server to run health checks on.\n"
                },
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Do not validate the certificate when the health check uses HTTPS. Valid values: `true` or `false` (Default: `false`).\n"
                },
                "checkRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regions from which to run health checks. If not set Cloudflare will pick a default region. Valid values: `WNAM`, `ENAM`, `WEU`, `EEU`, `NSAM`, `SSAM`, `OC`, `ME`, `NAF`, `SAF`, `IN`, `SEAS`, `NEAS`, `ALL_REGIONS`.\n"
                },
                "consecutiveFails": {
                    "type": "integer",
                    "description": "The number of consecutive fails required from a health check before changing the health to unhealthy. (Default: `1`)\n"
                },
                "consecutiveSuccesses": {
                    "type": "integer",
                    "description": "The number of consecutive successes required from a health check before changing the health to healthy. (Default: `1`)\n"
                },
                "description": {
                    "type": "string",
                    "description": "A human-readable description of the health check.\n"
                },
                "expectedBody": {
                    "type": "string",
                    "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.\n"
                },
                "expectedCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The expected HTTP response codes (e.g. \"200\") or code ranges (e.g. \"2xx\" for all codes starting with 2) of the health check. (Default: `[\"200\"]`)\n"
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Follow redirects if the origin returns a 3xx status code. Valid values: `true` or `false` (Default: `false`).\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/HealthcheckHeader:HealthcheckHeader"
                    },
                    "description": "The header name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations. (Default: `60`)\n"
                },
                "method": {
                    "type": "string",
                    "description": "The TCP connection method to use for the health check. Valid values: `connection_established` (Default: `connection_established`).\n"
                },
                "name": {
                    "type": "string",
                    "description": "A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.\n"
                },
                "notificationEmailAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of email addresses we want to send the notifications to. *Deprecated, use `cloudflare.NotificationPolicy` instead.*\n",
                    "deprecationMessage": "Use `cloudflare_notification_policy` instead."
                },
                "notificationSuspended": {
                    "type": "boolean",
                    "description": "Whether the notifications are suspended or not. Useful for maintenance periods. Valid values: `true` or `false` (Default: `false`). *Deprecated, use `cloudflare.NotificationPolicy` instead.*\n",
                    "deprecationMessage": "Use `cloudflare_notification_policy` instead."
                },
                "path": {
                    "type": "string",
                    "description": "The endpoint path to health check against. (Default: `/`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port number to connect to for the health check.  Valid values are in the range `0-65535` (Default: `80`).\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. (Default: `2`)\n"
                },
                "suspended": {
                    "type": "boolean",
                    "description": "If suspended, no health checks are sent to the origin. Valid values: `true` or `false` (Default: `false`).\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout (in seconds) before marking the health check as failed. (Default: `5`)\n"
                },
                "type": {
                    "type": "string",
                    "description": "The protocol to use for the health check. Valid values: `HTTP`, `HTTPS`, `TCP`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to which apply settings.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "address",
                "name",
                "type",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Healthcheck resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The hostname or IP address of the origin server to run health checks on.\n"
                    },
                    "allowInsecure": {
                        "type": "boolean",
                        "description": "Do not validate the certificate when the health check uses HTTPS. Valid values: `true` or `false` (Default: `false`).\n"
                    },
                    "checkRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of regions from which to run health checks. If not set Cloudflare will pick a default region. Valid values: `WNAM`, `ENAM`, `WEU`, `EEU`, `NSAM`, `SSAM`, `OC`, `ME`, `NAF`, `SAF`, `IN`, `SEAS`, `NEAS`, `ALL_REGIONS`.\n"
                    },
                    "consecutiveFails": {
                        "type": "integer",
                        "description": "The number of consecutive fails required from a health check before changing the health to unhealthy. (Default: `1`)\n"
                    },
                    "consecutiveSuccesses": {
                        "type": "integer",
                        "description": "The number of consecutive successes required from a health check before changing the health to healthy. (Default: `1`)\n"
                    },
                    "createdOn": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "A human-readable description of the health check.\n"
                    },
                    "expectedBody": {
                        "type": "string",
                        "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.\n"
                    },
                    "expectedCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The expected HTTP response codes (e.g. \"200\") or code ranges (e.g. \"2xx\" for all codes starting with 2) of the health check. (Default: `[\"200\"]`)\n"
                    },
                    "followRedirects": {
                        "type": "boolean",
                        "description": "Follow redirects if the origin returns a 3xx status code. Valid values: `true` or `false` (Default: `false`).\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/HealthcheckHeader:HealthcheckHeader"
                        },
                        "description": "The header name.\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations. (Default: `60`)\n"
                    },
                    "method": {
                        "type": "string",
                        "description": "The TCP connection method to use for the health check. Valid values: `connection_established` (Default: `connection_established`).\n"
                    },
                    "modifiedOn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.\n"
                    },
                    "notificationEmailAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of email addresses we want to send the notifications to. *Deprecated, use `cloudflare.NotificationPolicy` instead.*\n",
                        "deprecationMessage": "Use `cloudflare_notification_policy` instead."
                    },
                    "notificationSuspended": {
                        "type": "boolean",
                        "description": "Whether the notifications are suspended or not. Useful for maintenance periods. Valid values: `true` or `false` (Default: `false`). *Deprecated, use `cloudflare.NotificationPolicy` instead.*\n",
                        "deprecationMessage": "Use `cloudflare_notification_policy` instead."
                    },
                    "path": {
                        "type": "string",
                        "description": "The endpoint path to health check against. (Default: `/`)\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port number to connect to for the health check.  Valid values are in the range `0-65535` (Default: `80`).\n"
                    },
                    "retries": {
                        "type": "integer",
                        "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. (Default: `2`)\n"
                    },
                    "suspended": {
                        "type": "boolean",
                        "description": "If suspended, no health checks are sent to the origin. Valid values: `true` or `false` (Default: `false`).\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout (in seconds) before marking the health check as failed. (Default: `5`)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The protocol to use for the health check. Valid values: `HTTP`, `HTTPS`, `TCP`.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to which apply settings.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/ipList:IpList": {
            "description": "IP Lists are a set of IP addresses or CIDR ranges that are configured on the account level. Once created, IP Lists can be \nused in Firewall Rules across all zones within the same account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.IpList(\"example\", {\n    accountId: \"d41d8cd98f00b204e9800998ecf8427e\",\n    description: \"list description\",\n    items: [\n        {\n            comment: \"Office IP\",\n            value: \"192.0.2.1\",\n        },\n        {\n            comment: \"Datacenter range\",\n            value: \"203.0.113.0/24\",\n        },\n    ],\n    kind: \"ip\",\n    name: \"example_list\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn existing IP List can be imported using the account ID and list ID\n\n```sh\n $ pulumi import cloudflare:index/ipList:IpList example d41d8cd98f00b204e9800998ecf8427e/cb029e245cfdd66dc8d2e570d5dd3322\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the IP List is being created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A note that can be used to annotate the List. Maximum Length: 500\n"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/IpListItem:IpListItem"
                    }
                },
                "kind": {
                    "type": "string",
                    "description": "The kind of values in the List. Valid values: `ip`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the list (used in filter expressions). Valid pattern: `^[a-zA-Z0-9_]+$`. Maximum Length: 50\n"
                }
            },
            "required": [
                "accountId",
                "kind",
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the IP List is being created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A note that can be used to annotate the List. Maximum Length: 500\n"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/IpListItem:IpListItem"
                    }
                },
                "kind": {
                    "type": "string",
                    "description": "The kind of values in the List. Valid values: `ip`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the list (used in filter expressions). Valid pattern: `^[a-zA-Z0-9_]+$`. Maximum Length: 50\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "kind",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpList resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account where the IP List is being created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A note that can be used to annotate the List. Maximum Length: 500\n"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/IpListItem:IpListItem"
                        }
                    },
                    "kind": {
                        "type": "string",
                        "description": "The kind of values in the List. Valid values: `ip`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the list (used in filter expressions). Valid pattern: `^[a-zA-Z0-9_]+$`. Maximum Length: 50\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/ipsecTunnel:IpsecTunnel": {
            "description": "Provides a resource, that manages IPsec tunnels for Magic Transit.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.IpsecTunnel(\"example\", {\n    accountId: \"c4a7362d577a6c3019a474fd6f485821\",\n    cloudflareEndpoint: \"203.0.113.1\",\n    customerEndpoint: \"203.0.113.1\",\n    description: \"Tunnel for ISP X\",\n    interfaceAddress: \"192.0.2.0/31\",\n    name: \"IPsec_1\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn existing IPsec tunnel can be imported using the account ID and tunnel ID\n\n```sh\n $ pulumi import cloudflare:index/ipsecTunnel:IpsecTunnel example d41d8cd98f00b204e9800998ecf8427e/cb029e245cfdd66dc8d2e570d5dd3322\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the tunnel is being created.\n"
                },
                "cloudflareEndpoint": {
                    "type": "string",
                    "description": "IP address assigned to the Cloudflare side of the IPsec tunnel.\n"
                },
                "customerEndpoint": {
                    "type": "string",
                    "description": "IP address assigned to the customer side of the IPsec tunnel.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the IPsec tunnel.\n"
                },
                "interfaceAddress": {
                    "type": "string",
                    "description": "31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IPsec tunnel.\n"
                }
            },
            "required": [
                "cloudflareEndpoint",
                "customerEndpoint",
                "interfaceAddress",
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the tunnel is being created.\n",
                    "willReplaceOnChanges": true
                },
                "cloudflareEndpoint": {
                    "type": "string",
                    "description": "IP address assigned to the Cloudflare side of the IPsec tunnel.\n"
                },
                "customerEndpoint": {
                    "type": "string",
                    "description": "IP address assigned to the customer side of the IPsec tunnel.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of the IPsec tunnel.\n"
                },
                "interfaceAddress": {
                    "type": "string",
                    "description": "31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IPsec tunnel.\n"
                }
            },
            "requiredInputs": [
                "cloudflareEndpoint",
                "customerEndpoint",
                "interfaceAddress",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpsecTunnel resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account where the tunnel is being created.\n",
                        "willReplaceOnChanges": true
                    },
                    "cloudflareEndpoint": {
                        "type": "string",
                        "description": "IP address assigned to the Cloudflare side of the IPsec tunnel.\n"
                    },
                    "customerEndpoint": {
                        "type": "string",
                        "description": "IP address assigned to the customer side of the IPsec tunnel.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of the IPsec tunnel.\n"
                    },
                    "interfaceAddress": {
                        "type": "string",
                        "description": "31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the IPsec tunnel.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/loadBalancer:LoadBalancer": {
            "description": "Provides a Cloudflare Load Balancer resource. This sits in front of a number of defined pools of origins and provides various options for geographically-aware load balancing. Note that the load balancing feature must be enabled in your Cloudflare account before you can use this resource.\n",
            "properties": {
                "createdOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the load balancer was created.\n"
                },
                "defaultPoolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of pool IDs ordered by their failover priority. Used whenever region/pop pools are not defined.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free text description.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the load balancer. Defaults to `true` (enabled).\n"
                },
                "fallbackPoolId": {
                    "type": "string",
                    "description": "The pool ID to use when all other pools are detected as unhealthy.\n"
                },
                "modifiedOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the load balancer was last modified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Human readable name for this rule.\n"
                },
                "popPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPopPool:LoadBalancerPopPool"
                    },
                    "description": "See pop_pools above.\n"
                },
                "proxied": {
                    "type": "boolean",
                    "description": "Whether the hostname gets Cloudflare's origin protection. Defaults to `false`.\n"
                },
                "regionPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerRegionPool:LoadBalancerRegionPool"
                    },
                    "description": "See region_pools above.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerRule:LoadBalancerRule"
                    },
                    "description": "A list of conditions and overrides for each load balancer operation. See the field documentation below.\n"
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "See field above.\n"
                },
                "sessionAffinityAttributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "See field above.\n"
                },
                "sessionAffinityTtl": {
                    "type": "integer",
                    "description": "See field above.\n"
                },
                "steeringPolicy": {
                    "type": "string",
                    "description": "See field above.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "See field above.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to add the load balancer to.\n"
                }
            },
            "required": [
                "createdOn",
                "defaultPoolIds",
                "fallbackPoolId",
                "modifiedOn",
                "name",
                "popPools",
                "regionPools",
                "steeringPolicy",
                "ttl",
                "zoneId"
            ],
            "inputProperties": {
                "defaultPoolIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of pool IDs ordered by their failover priority. Used whenever region/pop pools are not defined.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free text description.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the load balancer. Defaults to `true` (enabled).\n"
                },
                "fallbackPoolId": {
                    "type": "string",
                    "description": "The pool ID to use when all other pools are detected as unhealthy.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Human readable name for this rule.\n"
                },
                "popPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPopPool:LoadBalancerPopPool"
                    },
                    "description": "See pop_pools above.\n"
                },
                "proxied": {
                    "type": "boolean",
                    "description": "Whether the hostname gets Cloudflare's origin protection. Defaults to `false`.\n"
                },
                "regionPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerRegionPool:LoadBalancerRegionPool"
                    },
                    "description": "See region_pools above.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerRule:LoadBalancerRule"
                    },
                    "description": "A list of conditions and overrides for each load balancer operation. See the field documentation below.\n"
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "See field above.\n"
                },
                "sessionAffinityAttributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "See field above.\n"
                },
                "sessionAffinityTtl": {
                    "type": "integer",
                    "description": "See field above.\n"
                },
                "steeringPolicy": {
                    "type": "string",
                    "description": "See field above.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "See field above.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to add the load balancer to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "defaultPoolIds",
                "fallbackPoolId",
                "name",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadBalancer resources.\n",
                "properties": {
                    "createdOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the load balancer was created.\n"
                    },
                    "defaultPoolIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of pool IDs ordered by their failover priority. Used whenever region/pop pools are not defined.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text description.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable or disable the load balancer. Defaults to `true` (enabled).\n"
                    },
                    "fallbackPoolId": {
                        "type": "string",
                        "description": "The pool ID to use when all other pools are detected as unhealthy.\n"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the load balancer was last modified.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Human readable name for this rule.\n"
                    },
                    "popPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/LoadBalancerPopPool:LoadBalancerPopPool"
                        },
                        "description": "See pop_pools above.\n"
                    },
                    "proxied": {
                        "type": "boolean",
                        "description": "Whether the hostname gets Cloudflare's origin protection. Defaults to `false`.\n"
                    },
                    "regionPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/LoadBalancerRegionPool:LoadBalancerRegionPool"
                        },
                        "description": "See region_pools above.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/LoadBalancerRule:LoadBalancerRule"
                        },
                        "description": "A list of conditions and overrides for each load balancer operation. See the field documentation below.\n"
                    },
                    "sessionAffinity": {
                        "type": "string",
                        "description": "See field above.\n"
                    },
                    "sessionAffinityAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "See field above.\n"
                    },
                    "sessionAffinityTtl": {
                        "type": "integer",
                        "description": "See field above.\n"
                    },
                    "steeringPolicy": {
                        "type": "string",
                        "description": "See field above.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "See field above.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID to add the load balancer to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/loadBalancerMonitor:LoadBalancerMonitor": {
            "description": "If you're using Cloudflare's Load Balancing to load-balance across multiple origin servers or data centers, you configure one of these Monitors to actively check the availability of those servers over HTTP(S) or TCP.\n\n\u003e **Note:** When creating a monitor, you have to pass `account_id` to the provider configuration in order to create account level resources. Otherwise, by default, it will be a user level resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### HTTP Monitor\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst httpMonitor = new cloudflare.LoadBalancerMonitor(\"http_monitor\", {\n    allowInsecure: false,\n    description: \"example http load balancer\",\n    expectedBody: \"alive\",\n    expectedCodes: \"2xx\",\n    followRedirects: true,\n    headers: [{\n        header: \"Host\",\n        values: [\"example.com\"],\n    }],\n    interval: 60,\n    method: \"GET\",\n    path: \"/health\",\n    probeZone: \"example.com\",\n    retries: 5,\n    timeout: 7,\n    type: \"http\",\n});\n```\n{{% /example %}}\n{{% example %}}\n### TCP Monitor\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst tcpMonitor = new cloudflare.LoadBalancerMonitor(\"tcp_monitor\", {\n    description: \"example tcp load balancer\",\n    interval: 60,\n    method: \"connection_established\",\n    port: 8080,\n    retries: 5,\n    timeout: 7,\n    type: \"tcp\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Do not validate the certificate when monitor use HTTPS. Only valid if `type` is \"http\" or \"https\".\n"
                },
                "createdOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the load balancer monitor was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free text description.\n"
                },
                "expectedBody": {
                    "type": "string",
                    "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. Only valid if `type` is \"http\" or \"https\". Default: \"\".\n"
                },
                "expectedCodes": {
                    "type": "string",
                    "description": "The expected HTTP response code or code range of the health check. Eg `2xx`. Only valid and required if `type` is \"http\" or \"https\".\n"
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Follow redirects if returned by the origin. Only valid if `type` is \"http\" or \"https\".\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerMonitorHeader:LoadBalancerMonitorHeader"
                    },
                    "description": "The header name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations. Default: 60.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The method to use for the health check. Valid values are any valid HTTP verb if `type` is \"http\" or \"https\", or `connection_established` if `type` is \"tcp\". Default: \"GET\" if `type` is \"http\" or \"https\", \"connection_established\" if `type` is \"tcp\", and empty otherwise.\n"
                },
                "modifiedOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the load balancer monitor was last modified.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The endpoint path to health check against. Default: \"/\". Only valid if `type` is \"http\" or \"https\".\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port number to use for the healthcheck, required when creating a TCP monitor. Valid values are in the range `0-65535`.\n"
                },
                "probeZone": {
                    "type": "string",
                    "description": "Assign this monitor to emulate the specified zone while probing. Only valid if `type` is \"http\" or \"https\".\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. Default: 2.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout (in seconds) before marking the health check as failed. Default: 5.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The protocol to use for the healthcheck. Currently supported protocols are 'HTTP', 'HTTPS', 'TCP', 'UDP-ICMP', 'ICMP-PING', and 'SMTP'. Default: \"http\".\n"
                }
            },
            "required": [
                "createdOn",
                "method",
                "modifiedOn",
                "path"
            ],
            "inputProperties": {
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Do not validate the certificate when monitor use HTTPS. Only valid if `type` is \"http\" or \"https\".\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free text description.\n"
                },
                "expectedBody": {
                    "type": "string",
                    "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. Only valid if `type` is \"http\" or \"https\". Default: \"\".\n"
                },
                "expectedCodes": {
                    "type": "string",
                    "description": "The expected HTTP response code or code range of the health check. Eg `2xx`. Only valid and required if `type` is \"http\" or \"https\".\n"
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "Follow redirects if returned by the origin. Only valid if `type` is \"http\" or \"https\".\n"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerMonitorHeader:LoadBalancerMonitorHeader"
                    },
                    "description": "The header name.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations. Default: 60.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The method to use for the health check. Valid values are any valid HTTP verb if `type` is \"http\" or \"https\", or `connection_established` if `type` is \"tcp\". Default: \"GET\" if `type` is \"http\" or \"https\", \"connection_established\" if `type` is \"tcp\", and empty otherwise.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The endpoint path to health check against. Default: \"/\". Only valid if `type` is \"http\" or \"https\".\n"
                },
                "port": {
                    "type": "integer",
                    "description": "The port number to use for the healthcheck, required when creating a TCP monitor. Valid values are in the range `0-65535`.\n"
                },
                "probeZone": {
                    "type": "string",
                    "description": "Assign this monitor to emulate the specified zone while probing. Only valid if `type` is \"http\" or \"https\".\n"
                },
                "retries": {
                    "type": "integer",
                    "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. Default: 2.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "The timeout (in seconds) before marking the health check as failed. Default: 5.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The protocol to use for the healthcheck. Currently supported protocols are 'HTTP', 'HTTPS', 'TCP', 'UDP-ICMP', 'ICMP-PING', and 'SMTP'. Default: \"http\".\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadBalancerMonitor resources.\n",
                "properties": {
                    "allowInsecure": {
                        "type": "boolean",
                        "description": "Do not validate the certificate when monitor use HTTPS. Only valid if `type` is \"http\" or \"https\".\n"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the load balancer monitor was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text description.\n"
                    },
                    "expectedBody": {
                        "type": "string",
                        "description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. Only valid if `type` is \"http\" or \"https\". Default: \"\".\n"
                    },
                    "expectedCodes": {
                        "type": "string",
                        "description": "The expected HTTP response code or code range of the health check. Eg `2xx`. Only valid and required if `type` is \"http\" or \"https\".\n"
                    },
                    "followRedirects": {
                        "type": "boolean",
                        "description": "Follow redirects if returned by the origin. Only valid if `type` is \"http\" or \"https\".\n"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/LoadBalancerMonitorHeader:LoadBalancerMonitorHeader"
                        },
                        "description": "The header name.\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations. Default: 60.\n"
                    },
                    "method": {
                        "type": "string",
                        "description": "The method to use for the health check. Valid values are any valid HTTP verb if `type` is \"http\" or \"https\", or `connection_established` if `type` is \"tcp\". Default: \"GET\" if `type` is \"http\" or \"https\", \"connection_established\" if `type` is \"tcp\", and empty otherwise.\n"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the load balancer monitor was last modified.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The endpoint path to health check against. Default: \"/\". Only valid if `type` is \"http\" or \"https\".\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "The port number to use for the healthcheck, required when creating a TCP monitor. Valid values are in the range `0-65535`.\n"
                    },
                    "probeZone": {
                        "type": "string",
                        "description": "Assign this monitor to emulate the specified zone while probing. Only valid if `type` is \"http\" or \"https\".\n"
                    },
                    "retries": {
                        "type": "integer",
                        "description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately. Default: 2.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "The timeout (in seconds) before marking the health check as failed. Default: 5.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The protocol to use for the healthcheck. Currently supported protocols are 'HTTP', 'HTTPS', 'TCP', 'UDP-ICMP', 'ICMP-PING', and 'SMTP'. Default: \"http\".\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/loadBalancerPool:LoadBalancerPool": {
            "description": "Provides a Cloudflare Load Balancer pool resource. This provides a pool of origins that can be used by a Cloudflare Load Balancer. Note that the load balancing feature must be enabled in your Cloudflare account before you can use this resource.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst foo = new cloudflare.LoadBalancerPool(\"foo\", {\n    description: \"example load balancer pool\",\n    enabled: false,\n    latitude: 55,\n    loadSheddings: [{\n        defaultPercent: 55,\n        defaultPolicy: \"random\",\n        sessionPercent: 12,\n        sessionPolicy: \"hash\",\n    }],\n    longitude: -12,\n    minimumOrigins: 1,\n    name: \"example-pool\",\n    notificationEmail: \"someone@example.com\",\n    originSteerings: [{\n        policy: \"random\",\n    }],\n    origins: [\n        {\n            address: \"192.0.2.1\",\n            enabled: false,\n            headers: [{\n                header: \"Host\",\n                values: [\"example-1\"],\n            }],\n            name: \"example-1\",\n        },\n        {\n            address: \"192.0.2.2\",\n            headers: [{\n                header: \"Host\",\n                values: [\"example-2\"],\n            }],\n            name: \"example-2\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "checkRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions).\n"
                },
                "createdOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the load balancer was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free text description.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude this pool is physically located at; used for proximity steering. Values should be between -90 and 90.\n"
                },
                "loadSheddings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPoolLoadShedding:LoadBalancerPoolLoadShedding"
                    },
                    "description": "Setting for controlling load shedding for this pool.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude this pool is physically located at; used for proximity steering. Values should be between -180 and 180.\n"
                },
                "minimumOrigins": {
                    "type": "integer",
                    "description": "The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Default: 1.\n"
                },
                "modifiedOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the load balancer was last modified.\n"
                },
                "monitor": {
                    "type": "string",
                    "description": "The ID of the Monitor to use for health checking origins within this pool.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-identifiable name for the origin.\n"
                },
                "notificationEmail": {
                    "type": "string",
                    "description": "The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.\n"
                },
                "originSteerings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPoolOriginSteering:LoadBalancerPoolOriginSteering"
                    },
                    "description": "Set an origin steering policy to control origin selection within a pool.\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPoolOrigin:LoadBalancerPoolOrigin"
                    },
                    "description": "The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. It's a complex value. See description below.\n"
                }
            },
            "required": [
                "checkRegions",
                "createdOn",
                "modifiedOn",
                "name",
                "origins"
            ],
            "inputProperties": {
                "checkRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions).\n"
                },
                "description": {
                    "type": "string",
                    "description": "Free text description.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.\n"
                },
                "latitude": {
                    "type": "number",
                    "description": "The latitude this pool is physically located at; used for proximity steering. Values should be between -90 and 90.\n"
                },
                "loadSheddings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPoolLoadShedding:LoadBalancerPoolLoadShedding"
                    },
                    "description": "Setting for controlling load shedding for this pool.\n"
                },
                "longitude": {
                    "type": "number",
                    "description": "The longitude this pool is physically located at; used for proximity steering. Values should be between -180 and 180.\n"
                },
                "minimumOrigins": {
                    "type": "integer",
                    "description": "The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Default: 1.\n"
                },
                "monitor": {
                    "type": "string",
                    "description": "The ID of the Monitor to use for health checking origins within this pool.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A human-identifiable name for the origin.\n"
                },
                "notificationEmail": {
                    "type": "string",
                    "description": "The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.\n"
                },
                "originSteerings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPoolOriginSteering:LoadBalancerPoolOriginSteering"
                    },
                    "description": "Set an origin steering policy to control origin selection within a pool.\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/LoadBalancerPoolOrigin:LoadBalancerPoolOrigin"
                    },
                    "description": "The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. It's a complex value. See description below.\n"
                }
            },
            "requiredInputs": [
                "name",
                "origins"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadBalancerPool resources.\n",
                "properties": {
                    "checkRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of regions (specified by region code) from which to run health checks. Empty means every Cloudflare data center (the default), but requires an Enterprise plan. Region codes can be found [here](https://support.cloudflare.com/hc/en-us/articles/115000540888-Load-Balancing-Geographic-Regions).\n"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the load balancer was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text description.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.\n"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "The latitude this pool is physically located at; used for proximity steering. Values should be between -90 and 90.\n"
                    },
                    "loadSheddings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/LoadBalancerPoolLoadShedding:LoadBalancerPoolLoadShedding"
                        },
                        "description": "Setting for controlling load shedding for this pool.\n"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "The longitude this pool is physically located at; used for proximity steering. Values should be between -180 and 180.\n"
                    },
                    "minimumOrigins": {
                        "type": "integer",
                        "description": "The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we will failover to the next available pool. Default: 1.\n"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the load balancer was last modified.\n"
                    },
                    "monitor": {
                        "type": "string",
                        "description": "The ID of the Monitor to use for health checking origins within this pool.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A human-identifiable name for the origin.\n"
                    },
                    "notificationEmail": {
                        "type": "string",
                        "description": "The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.\n"
                    },
                    "originSteerings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/LoadBalancerPoolOriginSteering:LoadBalancerPoolOriginSteering"
                        },
                        "description": "Set an origin steering policy to control origin selection within a pool.\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/LoadBalancerPoolOrigin:LoadBalancerPoolOrigin"
                        },
                        "description": "The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy. It's a complex value. See description below.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/logPushOwnershipChallenge:LogPushOwnershipChallenge": {
            "description": "Provides a resource which manages Cloudflare Logpush ownership challenges to use\nin a Logpush Job. On it's own, doesn't do much however this resource should\nbe used in conjunction to create Logpush jobs.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.LogPushOwnershipChallenge(\"example\", {\n    destinationConf: \"s3://my-bucket-path?region=us-west-2\",\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.LogPushOwnershipChallenge(\"example\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    destinationConf: \"s3://my-bucket-path?region=us-west-2\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID where the logpush ownership challenge should be created. Either `account_id` or `zone_id` are required.\n"
                },
                "destinationConf": {
                    "type": "string",
                    "description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included. See [Logpush destination documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#destination).\n"
                },
                "ownershipChallengeFilename": {
                    "type": "string",
                    "description": "The filename of the ownership challenge which\ncontains the contents required for Logpush Job creation.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID where the logpush ownership challenge should be created. Either `account_id` or `zone_id` are required.\n"
                }
            },
            "required": [
                "destinationConf",
                "ownershipChallengeFilename"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID where the logpush ownership challenge should be created. Either `account_id` or `zone_id` are required.\n"
                },
                "destinationConf": {
                    "type": "string",
                    "description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included. See [Logpush destination documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#destination).\n",
                    "willReplaceOnChanges": true
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID where the logpush ownership challenge should be created. Either `account_id` or `zone_id` are required.\n"
                }
            },
            "requiredInputs": [
                "destinationConf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogPushOwnershipChallenge resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account ID where the logpush ownership challenge should be created. Either `account_id` or `zone_id` are required.\n"
                    },
                    "destinationConf": {
                        "type": "string",
                        "description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included. See [Logpush destination documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#destination).\n",
                        "willReplaceOnChanges": true
                    },
                    "ownershipChallengeFilename": {
                        "type": "string",
                        "description": "The filename of the ownership challenge which\ncontains the contents required for Logpush Job creation.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID where the logpush ownership challenge should be created. Either `account_id` or `zone_id` are required.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/logpullRetention:LogpullRetention": {
            "description": "Allows management of the Logpull Retention settings used to control whether or not to retain HTTP request logs.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.LogpullRetention(\"example\", {\n    enabled: true,\n    zoneId: \"fb54f084ca7f7b732d3d3ecbd8ef7bf2\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nYou can import existing Logpull Retention using the zone ID as the identifier.\n\n```sh\n $ pulumi import cloudflare:index/logpullRetention:LogpullRetention example fb54f084ca7f7b732d3d3ecbd8ef7bf2\n```\n\n ",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether you wish to retain logs or not.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to apply the log retention to.\n"
                }
            },
            "required": [
                "enabled",
                "zoneId"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether you wish to retain logs or not.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to apply the log retention to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabled",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogpullRetention resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether you wish to retain logs or not.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID to apply the log retention to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/logpushJob:LogpushJob": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n### Manual Inspection Of S3 Bucket)\n\n- Create `cloudflare.LogPushOwnershipChallenge` resource\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst ownershipChallenge = new cloudflare.LogPushOwnershipChallenge(\"ownership_challenge\", {\n    destinationConf: \"s3://my-bucket-path?region=us-west-2\",\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n\n- Check S3 bucket for your ownership challenge filename and grab the contents.\n- Create the `cloudflare.LogpushJob` substituting in your manual `ownership_challenge`.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst exampleJob = new cloudflare.LogpushJob(\"example_job\", {\n    dataset: \"http_requests\",\n    destinationConf: \"s3://my-bucket-path?region=us-west-2\",\n    enabled: true,\n    logpullOptions: \"fields=RayID,ClientIP,EdgeStartTimestamp\u0026timestamps=rfc3339\",\n    name: \"My-logpush-job\",\n    ownershipChallenge: \"0000000000000\",\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nLogpush jobs can be imported using a composite ID formed of* `identifierType` - Either `account` or `zone`. * `identifierID` - The ID of the account or zone. * `jobID` - The Logpush Job ID to import. Import an account-scoped job using `account/:accountID/:jobID`\n\n```sh\n $ pulumi import cloudflare:index/logpushJob:LogpushJob example account/1d5fdc9e88c8a8c4518b068cd94331fe/54321\n```\n\n Import a zone-scoped job using `zone/:zoneID/:jobID`\n\n```sh\n $ pulumi import cloudflare:index/logpushJob:LogpushJob example zone/d41d8cd98f00b204e9800998ecf8427e/54321\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID where the logpush job should be created. Either `account_id` or `zone_id` are required.\n"
                },
                "dataset": {
                    "type": "string",
                    "description": "Which type of dataset resource to use. Available values are\n- [account-scoped](https://developers.cloudflare.com/logs/reference/log-fields/account): `\"audit_logs\"`, `\"gateway_dns\"`, `\"gateway_http\"`, `\"gateway_network\"`, `\"network_analytics_logs\"`\n- [zone-scoped](https://developers.cloudflare.com/logs/reference/log-fields/zone): `\"firewall_events\"`, `\"http_requests\"`, `\"spectrum_events\"`, `\"nel_reports\", \"dns_logs\"`\n"
                },
                "destinationConf": {
                    "type": "string",
                    "description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included. See [Logpush destination documentation](https://developers.cloudflare.com/logs/reference/logpush-api-configuration#destination).\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the job.\n"
                },
                "logpullOptions": {
                    "type": "string",
                    "description": "Configuration string for the Logshare API. It specifies things like requested fields and timestamp formats. See [Logpull options documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#options).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the logpush job to create. Must match the regular expression `^[a-zA-Z0-9\\-\\.]*$`.\n"
                },
                "ownershipChallenge": {
                    "type": "string",
                    "description": "Ownership challenge token to prove destination ownership, required when destination is Amazon S3, Google Cloud Storage,\nMicrosoft Azure or Sumo Logic. See [Developer documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#usage).\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID where the logpush job should be created. Either `account_id` or `zone_id` are required.\n"
                }
            },
            "required": [
                "dataset",
                "destinationConf"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account ID where the logpush job should be created. Either `account_id` or `zone_id` are required.\n"
                },
                "dataset": {
                    "type": "string",
                    "description": "Which type of dataset resource to use. Available values are\n- [account-scoped](https://developers.cloudflare.com/logs/reference/log-fields/account): `\"audit_logs\"`, `\"gateway_dns\"`, `\"gateway_http\"`, `\"gateway_network\"`, `\"network_analytics_logs\"`\n- [zone-scoped](https://developers.cloudflare.com/logs/reference/log-fields/zone): `\"firewall_events\"`, `\"http_requests\"`, `\"spectrum_events\"`, `\"nel_reports\", \"dns_logs\"`\n"
                },
                "destinationConf": {
                    "type": "string",
                    "description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included. See [Logpush destination documentation](https://developers.cloudflare.com/logs/reference/logpush-api-configuration#destination).\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable the job.\n"
                },
                "logpullOptions": {
                    "type": "string",
                    "description": "Configuration string for the Logshare API. It specifies things like requested fields and timestamp formats. See [Logpull options documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#options).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the logpush job to create. Must match the regular expression `^[a-zA-Z0-9\\-\\.]*$`.\n"
                },
                "ownershipChallenge": {
                    "type": "string",
                    "description": "Ownership challenge token to prove destination ownership, required when destination is Amazon S3, Google Cloud Storage,\nMicrosoft Azure or Sumo Logic. See [Developer documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#usage).\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID where the logpush job should be created. Either `account_id` or `zone_id` are required.\n"
                }
            },
            "requiredInputs": [
                "dataset",
                "destinationConf"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogpushJob resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account ID where the logpush job should be created. Either `account_id` or `zone_id` are required.\n"
                    },
                    "dataset": {
                        "type": "string",
                        "description": "Which type of dataset resource to use. Available values are\n- [account-scoped](https://developers.cloudflare.com/logs/reference/log-fields/account): `\"audit_logs\"`, `\"gateway_dns\"`, `\"gateway_http\"`, `\"gateway_network\"`, `\"network_analytics_logs\"`\n- [zone-scoped](https://developers.cloudflare.com/logs/reference/log-fields/zone): `\"firewall_events\"`, `\"http_requests\"`, `\"spectrum_events\"`, `\"nel_reports\", \"dns_logs\"`\n"
                    },
                    "destinationConf": {
                        "type": "string",
                        "description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included. See [Logpush destination documentation](https://developers.cloudflare.com/logs/reference/logpush-api-configuration#destination).\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable the job.\n"
                    },
                    "logpullOptions": {
                        "type": "string",
                        "description": "Configuration string for the Logshare API. It specifies things like requested fields and timestamp formats. See [Logpull options documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#options).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the logpush job to create. Must match the regular expression `^[a-zA-Z0-9\\-\\.]*$`.\n"
                    },
                    "ownershipChallenge": {
                        "type": "string",
                        "description": "Ownership challenge token to prove destination ownership, required when destination is Amazon S3, Google Cloud Storage,\nMicrosoft Azure or Sumo Logic. See [Developer documentation](https://developers.cloudflare.com/logs/logpush/logpush-configuration-api/understanding-logpush-api/#usage).\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID where the logpush job should be created. Either `account_id` or `zone_id` are required.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/magicFirewallRuleset:MagicFirewallRuleset": {
            "description": "Magic Firewall is a network-level firewall to protect networks that are onboarded to Cloudflare's Magic Transit. This resource\ncreates a root ruleset on the account level and contains one or more rules. Rules can be crafted in Wireshark syntax and\nare evaluated in order, with the first rule having the highest priority. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.MagicFirewallRuleset(\"example\", {\n    accountId: \"d41d8cd98f00b204e9800998ecf8427e\",\n    description: \"Global mitigations\",\n    name: \"Magic Transit Ruleset\",\n    rules: [\n        {\n            action: \"allow\",\n            description: \"Allow TCP Ephemeral Ports\",\n            enabled: \"true\",\n            expression: \"tcp.dstport in { 32768..65535 }\",\n        },\n        {\n            action: \"block\",\n            description: \"Block all\",\n            enabled: \"true\",\n            expression: \"ip.len \u003e= 0\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn existing Magic Firewall Ruleset can be imported using the account ID and ruleset ID\n\n```sh\n $ pulumi import cloudflare:index/magicFirewallRuleset:MagicFirewallRuleset example d41d8cd98f00b204e9800998ecf8427e/cb029e245cfdd66dc8d2e570d5dd3322\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the ruleset is being created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A note that can be used to annotate the rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ruleset.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "required": [
                "accountId",
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the ruleset is being created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A note that can be used to annotate the rule.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ruleset.\n",
                    "willReplaceOnChanges": true
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "requiredInputs": [
                "accountId",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MagicFirewallRuleset resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account where the ruleset is being created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A note that can be used to annotate the rule.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the ruleset.\n",
                        "willReplaceOnChanges": true
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/notificationPolicy:NotificationPolicy": {
            "description": "Provides a resource, that manages a notification policy for Cloudflare's products. The delivery\nmechanisms supported are email, webhooks, and PagerDuty.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### Basic Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.NotificationPolicy(\"example\", {\n    accountId: \"c4a7362d577a6c3019a474fd6f485821\",\n    alertType: \"universal_ssl_event_type\",\n    description: \"Notification policy to alert when my SSL certificates are modified\",\n    emailIntegrations: [{\n        id: \"myemail@example.com\",\n    }],\n    enabled: true,\n    name: \"Policy for SSL notification events\",\n    pagerdutyIntegrations: [{\n        id: \"850129d136459401860572c5d964d27k\",\n    }],\n    webhooksIntegrations: [{\n        id: \"1860572c5d964d27aa0f379d13645940\",\n    }],\n});\n```\n{{% /example %}}\n{{% example %}}\n### With Filters\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.NotificationPolicy(\"example\", {\n    accountId: \"c4a7362d577a6c3019a474fd6f485821\",\n    alertType: \"health_check_status_notification\",\n    description: \"Notification policy to alert on unhealthy Healthcheck status\",\n    emailIntegrations: [{\n        id: \"myemail@example.com\",\n    }],\n    enabled: true,\n    filters: {\n        healthCheckIds: [\"699d98642c564d2e855e9661899b7252\"],\n        statuses: [\"Unhealthy\"],\n    },\n    name: \"Policy for Healthcheck notification\",\n    pagerdutyIntegrations: [{\n        id: \"850129d136459401860572c5d964d27k\",\n    }],\n    webhooksIntegrations: [{\n        id: \"1860572c5d964d27aa0f379d13645940\",\n    }],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn existing notification policy can be imported using the account ID and the policy ID\n\n```sh\n $ pulumi import cloudflare:index/notificationPolicy:NotificationPolicy example 72c379d136459405d964d27aa0f18605/c4a7362d577a6c3019a474fd6f485821\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account for which the notification policy has to be created.\n"
                },
                "alertType": {
                    "type": "string",
                    "description": "The event type that will trigger the dispatch of a notification (refer to the nested schema).\n"
                },
                "created": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the notification policy.\n"
                },
                "emailIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/NotificationPolicyEmailIntegration:NotificationPolicyEmailIntegration"
                    },
                    "description": "The email id to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "State of the pool to alert on. Example: `\"true\"`, `\"false\"`.\n"
                },
                "filters": {
                    "$ref": "#/types/cloudflare:index/NotificationPolicyFilters:NotificationPolicyFilters",
                    "description": "An optional nested block of filters that applies to the selected `alert_type`. A key-value map that specifies the type of filter and the values to match against (refer to the alert type block for available fields).\n"
                },
                "modified": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification policy.\n"
                },
                "pagerdutyIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/NotificationPolicyPagerdutyIntegration:NotificationPolicyPagerdutyIntegration"
                    },
                    "description": "The unique id of a configured pagerduty endpoint to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                },
                "webhooksIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/NotificationPolicyWebhooksIntegration:NotificationPolicyWebhooksIntegration"
                    },
                    "description": "The unique id of a configured webhooks endpoint to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                }
            },
            "required": [
                "accountId",
                "alertType",
                "created",
                "enabled",
                "modified",
                "name"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account for which the notification policy has to be created.\n"
                },
                "alertType": {
                    "type": "string",
                    "description": "The event type that will trigger the dispatch of a notification (refer to the nested schema).\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the notification policy.\n"
                },
                "emailIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/NotificationPolicyEmailIntegration:NotificationPolicyEmailIntegration"
                    },
                    "description": "The email id to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "State of the pool to alert on. Example: `\"true\"`, `\"false\"`.\n"
                },
                "filters": {
                    "$ref": "#/types/cloudflare:index/NotificationPolicyFilters:NotificationPolicyFilters",
                    "description": "An optional nested block of filters that applies to the selected `alert_type`. A key-value map that specifies the type of filter and the values to match against (refer to the alert type block for available fields).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the notification policy.\n"
                },
                "pagerdutyIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/NotificationPolicyPagerdutyIntegration:NotificationPolicyPagerdutyIntegration"
                    },
                    "description": "The unique id of a configured pagerduty endpoint to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                },
                "webhooksIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/NotificationPolicyWebhooksIntegration:NotificationPolicyWebhooksIntegration"
                    },
                    "description": "The unique id of a configured webhooks endpoint to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "alertType",
                "enabled",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationPolicy resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account for which the notification policy has to be created.\n"
                    },
                    "alertType": {
                        "type": "string",
                        "description": "The event type that will trigger the dispatch of a notification (refer to the nested schema).\n"
                    },
                    "created": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the notification policy.\n"
                    },
                    "emailIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/NotificationPolicyEmailIntegration:NotificationPolicyEmailIntegration"
                        },
                        "description": "The email id to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "State of the pool to alert on. Example: `\"true\"`, `\"false\"`.\n"
                    },
                    "filters": {
                        "$ref": "#/types/cloudflare:index/NotificationPolicyFilters:NotificationPolicyFilters",
                        "description": "An optional nested block of filters that applies to the selected `alert_type`. A key-value map that specifies the type of filter and the values to match against (refer to the alert type block for available fields).\n"
                    },
                    "modified": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the notification policy.\n"
                    },
                    "pagerdutyIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/NotificationPolicyPagerdutyIntegration:NotificationPolicyPagerdutyIntegration"
                        },
                        "description": "The unique id of a configured pagerduty endpoint to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                    },
                    "webhooksIntegrations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/NotificationPolicyWebhooksIntegration:NotificationPolicyWebhooksIntegration"
                        },
                        "description": "The unique id of a configured webhooks endpoint to which the notification should be dispatched. One of email, webhooks, or PagerDuty mechanisms is required.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/notificationPolicyWebhooks:NotificationPolicyWebhooks": {
            "description": "Provides a resource, that manages a webhook destination. These destinations can be tied to the notification policies created for Cloudflare's products.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.NotificationPolicyWebhooks(\"example\", {\n    accountId: \"c4a7362d577a6c3019a474fd6f485821\",\n    name: \"Webhooks destination\",\n    secret: \"my-secret\",\n    url: \"https://example.com\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn existing notification policy can be imported using the account ID and the webhook ID\n\n```sh\n $ pulumi import cloudflare:index/notificationPolicyWebhooks:NotificationPolicyWebhooks example 72c379d136459405d964d27aa0f18605/c4a7362d577a6c3019a474fd6f485821\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account for which the webhook destination has to be connected.\n"
                },
                "createdAt": {
                    "type": "string"
                },
                "lastFailure": {
                    "type": "string"
                },
                "lastSuccess": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the webhook destination.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. \nSecrets are not returned in any API response body.\nRefer to the documentation for more details - https://api.cloudflare.com/#notification-webhooks-create-webhook.\n"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the webhook destinations.\n"
                }
            },
            "required": [
                "accountId",
                "createdAt",
                "lastFailure",
                "lastSuccess",
                "name",
                "type"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account for which the webhook destination has to be connected.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the webhook destination.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. \nSecrets are not returned in any API response body.\nRefer to the documentation for more details - https://api.cloudflare.com/#notification-webhooks-create-webhook.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the webhook destinations.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationPolicyWebhooks resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account for which the webhook destination has to be connected.\n"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "lastFailure": {
                        "type": "string"
                    },
                    "lastSuccess": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the webhook destination.\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. \nSecrets are not returned in any API response body.\nRefer to the documentation for more details - https://api.cloudflare.com/#notification-webhooks-create-webhook.\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the webhook destinations.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/originCaCertificate:OriginCaCertificate": {
            "description": "Provides a Cloudflare Origin CA certificate used to protect traffic to your origin without involving a third party Certificate Authority.\n\n**This resource requires you use your Origin CA Key as the `api_user_service_key`, in conjunction with an `api_token` or `email` and `api_key`.**\n\n\n## Import\n\nOrigin CA certificate resource can be imported using an ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/originCaCertificate:OriginCaCertificate example 276266538771611802607153687288146423901027769273\n```\n\n ",
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "The Origin CA certificate\n"
                },
                "csr": {
                    "type": "string",
                    "description": "The Certificate Signing Request. Must be newline-encoded.\n"
                },
                "expiresOn": {
                    "type": "string",
                    "description": "The datetime when the certificate will expire.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of hostnames or wildcard names bound to the certificate.\n"
                },
                "requestType": {
                    "type": "string",
                    "description": "The signature type desired on the certificate.\n"
                },
                "requestedValidity": {
                    "type": "integer",
                    "description": "The number of days for which the certificate should be valid.\n"
                }
            },
            "required": [
                "certificate",
                "expiresOn",
                "hostnames",
                "requestType",
                "requestedValidity"
            ],
            "inputProperties": {
                "csr": {
                    "type": "string",
                    "description": "The Certificate Signing Request. Must be newline-encoded.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of hostnames or wildcard names bound to the certificate.\n",
                    "willReplaceOnChanges": true
                },
                "requestType": {
                    "type": "string",
                    "description": "The signature type desired on the certificate.\n",
                    "willReplaceOnChanges": true
                },
                "requestedValidity": {
                    "type": "integer",
                    "description": "The number of days for which the certificate should be valid.\n"
                }
            },
            "requiredInputs": [
                "hostnames",
                "requestType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OriginCaCertificate resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "The Origin CA certificate\n"
                    },
                    "csr": {
                        "type": "string",
                        "description": "The Certificate Signing Request. Must be newline-encoded.\n"
                    },
                    "expiresOn": {
                        "type": "string",
                        "description": "The datetime when the certificate will expire.\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of hostnames or wildcard names bound to the certificate.\n",
                        "willReplaceOnChanges": true
                    },
                    "requestType": {
                        "type": "string",
                        "description": "The signature type desired on the certificate.\n",
                        "willReplaceOnChanges": true
                    },
                    "requestedValidity": {
                        "type": "integer",
                        "description": "The number of days for which the certificate should be valid.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/pageRule:PageRule": {
            "description": "Provides a Cloudflare page rule resource.\n\n\n## Import\n\nPage rules can be imported using a composite ID formed of zone ID and page rule ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/pageRule:PageRule default d41d8cd98f00b204e9800998ecf8427e/ch8374ftwdghsif43\n```\n\n ",
            "properties": {
                "actions": {
                    "$ref": "#/types/cloudflare:index/PageRuleActions:PageRuleActions",
                    "description": "The actions taken by the page rule, options given below.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Whether the page rule is active or disabled.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The URL pattern to target with the page rule.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to which the page rule should be added.\n"
                }
            },
            "required": [
                "actions",
                "target",
                "zoneId"
            ],
            "inputProperties": {
                "actions": {
                    "$ref": "#/types/cloudflare:index/PageRuleActions:PageRuleActions",
                    "description": "The actions taken by the page rule, options given below.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).\n"
                },
                "status": {
                    "type": "string",
                    "description": "Whether the page rule is active or disabled.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The URL pattern to target with the page rule.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to which the page rule should be added.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "actions",
                "target",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PageRule resources.\n",
                "properties": {
                    "actions": {
                        "$ref": "#/types/cloudflare:index/PageRuleActions:PageRuleActions",
                        "description": "The actions taken by the page rule, options given below.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the page rule among others for this target, the higher the number the higher the priority as per [API documentation](https://api.cloudflare.com/#page-rules-for-a-zone-create-page-rule).\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Whether the page rule is active or disabled.\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "The URL pattern to target with the page rule.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to which the page rule should be added.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/rateLimit:RateLimit": {
            "description": "Provides a Cloudflare rate limit resource for a given zone. This can be used to limit the traffic you receive zone-wide, or matching more specific types of requests/responses.\n\n\n## Import\n\nRate limits can be imported using a composite ID formed of zone name and rate limit ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/rateLimit:RateLimit default d41d8cd98f00b204e9800998ecf8427e/ch8374ftwdghsif43\n```\n\n ",
            "properties": {
                "action": {
                    "$ref": "#/types/cloudflare:index/RateLimitAction:RateLimitAction",
                    "description": "The action to be performed when the threshold of matched traffic within the period defined is exceeded.\n"
                },
                "bypassUrlPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs matching the patterns specified here will be excluded from rate limiting.\n"
                },
                "correlate": {
                    "$ref": "#/types/cloudflare:index/RateLimitCorrelate:RateLimitCorrelate",
                    "description": "Determines how rate limiting is applied. By default if not specified, rate limiting applies to the clients IP address.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A note that you can use to describe the reason for a rate limit. This value is sanitized and all tags are removed.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether this ratelimit is currently disabled. Default: `false`.\n"
                },
                "match": {
                    "$ref": "#/types/cloudflare:index/RateLimitMatch:RateLimitMatch",
                    "description": "Determines which traffic the rate limit counts towards the threshold. By default matches all traffic in the zone. See definition below.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The time in seconds to count matching traffic. If the count exceeds threshold within this period the action will be performed (min: 1, max: 86,400).\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The threshold that triggers the rate limit mitigations, combine with period. i.e. threshold per period (min: 2, max: 1,000,000).\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply rate limiting to.\n"
                }
            },
            "required": [
                "action",
                "match",
                "period",
                "threshold",
                "zoneId"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/cloudflare:index/RateLimitAction:RateLimitAction",
                    "description": "The action to be performed when the threshold of matched traffic within the period defined is exceeded.\n"
                },
                "bypassUrlPatterns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs matching the patterns specified here will be excluded from rate limiting.\n"
                },
                "correlate": {
                    "$ref": "#/types/cloudflare:index/RateLimitCorrelate:RateLimitCorrelate",
                    "description": "Determines how rate limiting is applied. By default if not specified, rate limiting applies to the clients IP address.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A note that you can use to describe the reason for a rate limit. This value is sanitized and all tags are removed.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether this ratelimit is currently disabled. Default: `false`.\n"
                },
                "match": {
                    "$ref": "#/types/cloudflare:index/RateLimitMatch:RateLimitMatch",
                    "description": "Determines which traffic the rate limit counts towards the threshold. By default matches all traffic in the zone. See definition below.\n"
                },
                "period": {
                    "type": "integer",
                    "description": "The time in seconds to count matching traffic. If the count exceeds threshold within this period the action will be performed (min: 1, max: 86,400).\n"
                },
                "threshold": {
                    "type": "integer",
                    "description": "The threshold that triggers the rate limit mitigations, combine with period. i.e. threshold per period (min: 2, max: 1,000,000).\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply rate limiting to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "action",
                "period",
                "threshold",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RateLimit resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/cloudflare:index/RateLimitAction:RateLimitAction",
                        "description": "The action to be performed when the threshold of matched traffic within the period defined is exceeded.\n"
                    },
                    "bypassUrlPatterns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs matching the patterns specified here will be excluded from rate limiting.\n"
                    },
                    "correlate": {
                        "$ref": "#/types/cloudflare:index/RateLimitCorrelate:RateLimitCorrelate",
                        "description": "Determines how rate limiting is applied. By default if not specified, rate limiting applies to the clients IP address.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A note that you can use to describe the reason for a rate limit. This value is sanitized and all tags are removed.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Whether this ratelimit is currently disabled. Default: `false`.\n"
                    },
                    "match": {
                        "$ref": "#/types/cloudflare:index/RateLimitMatch:RateLimitMatch",
                        "description": "Determines which traffic the rate limit counts towards the threshold. By default matches all traffic in the zone. See definition below.\n"
                    },
                    "period": {
                        "type": "integer",
                        "description": "The time in seconds to count matching traffic. If the count exceeds threshold within this period the action will be performed (min: 1, max: 86,400).\n"
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "The threshold that triggers the rate limit mitigations, combine with period. i.e. threshold per period (min: 2, max: 1,000,000).\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to apply rate limiting to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/record:Record": {
            "description": "Provides a Cloudflare record resource.\n\n\n## Import\n\nRecords can be imported using a composite ID formed of zone ID and record ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/record:Record default ae36f999674d196762efcc5abb06b345/d41d8cd98f00b204e9800998ecf8427e\n```\n\n where* `ae36f999674d196762efcc5abb06b345` - the zone ID * `d41d8cd98f00b204e9800998ecf8427e` - record ID as returned by [API](https://api.cloudflare.com/#dns-records-for-a-zone-list-dns-records) ",
            "properties": {
                "allowOverwrite": {
                    "type": "boolean"
                },
                "createdOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the record was created\n"
                },
                "data": {
                    "$ref": "#/types/cloudflare:index/RecordData:RecordData",
                    "description": "Map of attributes that constitute the record value. Primarily used for LOC and SRV record types. Either this or `value` must be specified\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "The FQDN of the record\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "A key-value map of string metadata Cloudflare associates with the record\n"
                },
                "modifiedOn": {
                    "type": "string",
                    "description": "The RFC3339 timestamp of when the record was last modified\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the record\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the record\n"
                },
                "proxiable": {
                    "type": "boolean",
                    "description": "Shows whether this record can be proxied, must be true if setting `proxied=true`\n"
                },
                "proxied": {
                    "type": "boolean",
                    "description": "Whether the record gets Cloudflare's origin protection; defaults to `false`.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record ([automatic: '1'](https://api.cloudflare.com/#dns-records-for-a-zone-create-dns-record))\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the record\n"
                },
                "value": {
                    "type": "string",
                    "description": "The (string) value of the record. Either this or `data` must be specified\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to add the record to\n"
                }
            },
            "required": [
                "createdOn",
                "hostname",
                "metadata",
                "modifiedOn",
                "name",
                "proxiable",
                "ttl",
                "type",
                "value",
                "zoneId"
            ],
            "inputProperties": {
                "allowOverwrite": {
                    "type": "boolean"
                },
                "data": {
                    "$ref": "#/types/cloudflare:index/RecordData:RecordData",
                    "description": "Map of attributes that constitute the record value. Primarily used for LOC and SRV record types. Either this or `value` must be specified\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the record\n",
                    "willReplaceOnChanges": true
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the record\n"
                },
                "proxied": {
                    "type": "boolean",
                    "description": "Whether the record gets Cloudflare's origin protection; defaults to `false`.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record ([automatic: '1'](https://api.cloudflare.com/#dns-records-for-a-zone-create-dns-record))\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the record\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The (string) value of the record. Either this or `data` must be specified\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to add the record to\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "name",
                "type",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Record resources.\n",
                "properties": {
                    "allowOverwrite": {
                        "type": "boolean"
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the record was created\n"
                    },
                    "data": {
                        "$ref": "#/types/cloudflare:index/RecordData:RecordData",
                        "description": "Map of attributes that constitute the record value. Primarily used for LOC and SRV record types. Either this or `value` must be specified\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The FQDN of the record\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A key-value map of string metadata Cloudflare associates with the record\n"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "The RFC3339 timestamp of when the record was last modified\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the record\n",
                        "willReplaceOnChanges": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the record\n"
                    },
                    "proxiable": {
                        "type": "boolean",
                        "description": "Shows whether this record can be proxied, must be true if setting `proxied=true`\n"
                    },
                    "proxied": {
                        "type": "boolean",
                        "description": "Whether the record gets Cloudflare's origin protection; defaults to `false`.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL of the record ([automatic: '1'](https://api.cloudflare.com/#dns-records-for-a-zone-create-dns-record))\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the record\n",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The (string) value of the record. Either this or `data` must be specified\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to add the record to\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/ruleset:Ruleset": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Magic Transit\nconst magicTransitExample = new cloudflare.Ruleset(\"magic_transit_example\", {\n    accountId: \"d41d8cd98f00b204e9800998ecf8427e\",\n    description: \"example magic transit ruleset description\",\n    kind: \"root\",\n    name: \"account magic transit\",\n    phase: \"magic_transit\",\n    rules: [{\n        action: \"allow\",\n        description: \"Allow TCP Ephemeral Ports\",\n        expression: \"tcp.dstport in { 32768..65535 }\",\n    }],\n});\n// Zone-level WAF Managed Ruleset\nconst zoneLevelManagedWaf = new cloudflare.Ruleset(\"zone_level_managed_waf\", {\n    description: \"managed WAF ruleset description\",\n    kind: \"zone\",\n    name: \"managed WAF\",\n    phase: \"http_request_firewall_managed\",\n    rules: [{\n        action: \"execute\",\n        actionParameters: {\n            id: \"efb7b8c949ac4650a09736fc376e9aee\",\n        },\n        description: \"Execute Cloudflare Managed Ruleset on my zone-level phase entry point ruleset\",\n        enabled: true,\n        expression: \"true\",\n    }],\n    zoneId: \"cb029e245cfdd66dc8d2e570d5dd3322\",\n});\n// Zone-level WAF with tag-based overrides\nconst zoneLevelManagedWafWithCategoryBasedOverrides = new cloudflare.Ruleset(\"zone_level_managed_waf_with_category_based_overrides\", {\n    description: \"managed WAF with tag-based overrides ruleset description\",\n    kind: \"zone\",\n    name: \"managed WAF with tag-based overrides\",\n    phase: \"http_request_firewall_managed\",\n    rules: [{\n        action: \"execute\",\n        actionParameters: {\n            id: \"efb7b8c949ac4650a09736fc376e9aee\",\n            overrides: {\n                categories: [\n                    {\n                        action: \"block\",\n                        category: \"wordpress\",\n                        enabled: true,\n                    },\n                    {\n                        action: \"block\",\n                        category: \"joomla\",\n                        enabled: true,\n                    },\n                ],\n            },\n        },\n        description: \"overrides to only enable wordpress rules to block\",\n        enabled: false,\n        expression: \"true\",\n    }],\n    zoneId: \"cb029e245cfdd66dc8d2e570d5dd3322\",\n});\n// Rewrite the URI path component to a static path\nconst transformUriRulePath = new cloudflare.Ruleset(\"transform_uri_rule_path\", {\n    description: \"change the URI path to a new static path\",\n    kind: \"zone\",\n    name: \"transform rule for URI path\",\n    phase: \"http_request_transform\",\n    rules: [{\n        action: \"rewrite\",\n        actionParameters: {\n            uri: {\n                path: {\n                    value: \"/my-new-route\",\n                },\n            },\n        },\n        description: \"example URI path transform rule\",\n        enabled: true,\n        expression: \"(http.host eq \\\"example.com\\\" and http.request.uri.path eq \\\"/old-path\\\")\",\n    }],\n    zoneId: \"cb029e245cfdd66dc8d2e570d5dd3322\",\n});\n// Rewrite the URI query component to a static query\nconst transformUriRuleQuery = new cloudflare.Ruleset(\"transform_uri_rule_query\", {\n    description: \"change the URI query to a new static query\",\n    kind: \"zone\",\n    name: \"transform rule for URI query parameter\",\n    phase: \"http_request_transform\",\n    rules: [{\n        action: \"rewrite\",\n        actionParameters: {\n            uri: {\n                query: {\n                    value: \"old=new_again\",\n                },\n            },\n        },\n        description: \"URI transformation query example\",\n        enabled: true,\n        expression: \"true\",\n    }],\n    zoneId: \"cb029e245cfdd66dc8d2e570d5dd3322\",\n});\n// Rewrite HTTP headers to a modified values\nconst transformUriHttpHeaders = new cloudflare.Ruleset(\"transform_uri_http_headers\", {\n    description: \"modify HTTP headers before reaching origin\",\n    kind: \"zone\",\n    name: \"transform rule for HTTP headers\",\n    phase: \"http_request_late_transform\",\n    rules: [{\n        action: \"rewrite\",\n        actionParameters: {\n            headers: [\n                {\n                    name: \"example-http-header-1\",\n                    operation: \"set\",\n                    value: \"my-http-header-value-1\",\n                },\n                {\n                    expression: \"cf.zone.name\",\n                    name: \"example-http-header-2\",\n                    operation: \"set\",\n                },\n                {\n                    name: \"example-http-header-3-to-remove\",\n                    operation: \"remove\",\n                },\n            ],\n        },\n        description: \"example request header transform rule\",\n        enabled: false,\n        expression: \"true\",\n    }],\n    zoneId: \"cb029e245cfdd66dc8d2e570d5dd3322\",\n});\n// HTTP rate limit for an API route\nconst rateLimitingExample = new cloudflare.Ruleset(\"rate_limiting_example\", {\n    description: \"apply HTTP rate limiting for a route\",\n    kind: \"zone\",\n    name: \"restrict API requests count\",\n    phase: \"http_ratelimit\",\n    rules: [{\n        action: \"block\",\n        description: \"rate limit for API\",\n        enabled: true,\n        expression: \"(http.request.uri.path matches \\\"^/api/\\\")\",\n        ratelimit: {\n            characteristics: [\n                \"cf.colo.id\",\n                \"ip.src\",\n            ],\n            mitigationTimeout: 600,\n            period: 60,\n            requestsPerPeriod: 100,\n        },\n    }],\n    zoneId: \"cb029e245cfdd66dc8d2e570d5dd3322\",\n});\n// Change origin for an API route\nconst httpOriginExample = new cloudflare.Ruleset(\"http_origin_example\", {\n    description: \"Change origin for a route\",\n    kind: \"zone\",\n    name: \"Change to some origin\",\n    phase: \"http_request_origin\",\n    rules: [{\n        action: \"route\",\n        actionParameters: {\n            hostHeader: \"some.host\",\n            origin: {\n                host: \"some.host\",\n                port: 80,\n            },\n        },\n        description: \"change origin to some.host\",\n        enabled: true,\n        expression: \"(http.request.uri.path matches \\\"^/api/\\\")\",\n    }],\n    zoneId: \"cb029e245cfdd66dc8d2e570d5dd3322\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCurrently, you cannot import rulesets. ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the ruleset is being created. Conflicts with `\"zone_id\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Brief summary of the ruleset rule and its intended use.\n"
                },
                "kind": {
                    "type": "string",
                    "description": "Type of Ruleset to create. Valid values are `\"custom\"`, `\"managed\"`, `\"root\"`, `\"schema\"` or `\"zone\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the HTTP request header to target.\n"
                },
                "phase": {
                    "type": "string",
                    "description": "Point in the request/response lifecycle where the ruleset will be created. Valid values are `\"ddos_l4\"`, `\"ddos_l7\"`, `\"http_request_firewall_custom\"`, `\"http_request_firewall_managed\"`, `\"http_request_late_transform\"`, `\"http_response_headers_transform\"`, `\"http_request_origin\"`, `\"http_request_main\"`, `\"http_request_sanitize\"`, `\"http_request_transform\"`, `\"http_response_firewall_managed\"`, `\"magic_transit\"`, or `\"http_ratelimit\"`.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/RulesetRule:RulesetRule"
                    },
                    "description": "List of rule-based overrides (refer to the nested schema).\n"
                },
                "shareableEntitlementName": {
                    "type": "string",
                    "description": "Name of entitlement that is shareable between entities.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the zone where the ruleset is being created. Conflicts with `\"account_id\"`.\n"
                }
            },
            "required": [
                "kind",
                "name",
                "phase"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the ruleset is being created. Conflicts with `\"zone_id\"`.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Brief summary of the ruleset rule and its intended use.\n"
                },
                "kind": {
                    "type": "string",
                    "description": "Type of Ruleset to create. Valid values are `\"custom\"`, `\"managed\"`, `\"root\"`, `\"schema\"` or `\"zone\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the HTTP request header to target.\n",
                    "willReplaceOnChanges": true
                },
                "phase": {
                    "type": "string",
                    "description": "Point in the request/response lifecycle where the ruleset will be created. Valid values are `\"ddos_l4\"`, `\"ddos_l7\"`, `\"http_request_firewall_custom\"`, `\"http_request_firewall_managed\"`, `\"http_request_late_transform\"`, `\"http_response_headers_transform\"`, `\"http_request_origin\"`, `\"http_request_main\"`, `\"http_request_sanitize\"`, `\"http_request_transform\"`, `\"http_response_firewall_managed\"`, `\"magic_transit\"`, or `\"http_ratelimit\"`.\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/RulesetRule:RulesetRule"
                    },
                    "description": "List of rule-based overrides (refer to the nested schema).\n"
                },
                "shareableEntitlementName": {
                    "type": "string",
                    "description": "Name of entitlement that is shareable between entities.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the zone where the ruleset is being created. Conflicts with `\"account_id\"`.\n"
                }
            },
            "requiredInputs": [
                "kind",
                "name",
                "phase"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ruleset resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account where the ruleset is being created. Conflicts with `\"zone_id\"`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Brief summary of the ruleset rule and its intended use.\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "Type of Ruleset to create. Valid values are `\"custom\"`, `\"managed\"`, `\"root\"`, `\"schema\"` or `\"zone\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the HTTP request header to target.\n",
                        "willReplaceOnChanges": true
                    },
                    "phase": {
                        "type": "string",
                        "description": "Point in the request/response lifecycle where the ruleset will be created. Valid values are `\"ddos_l4\"`, `\"ddos_l7\"`, `\"http_request_firewall_custom\"`, `\"http_request_firewall_managed\"`, `\"http_request_late_transform\"`, `\"http_response_headers_transform\"`, `\"http_request_origin\"`, `\"http_request_main\"`, `\"http_request_sanitize\"`, `\"http_request_transform\"`, `\"http_response_firewall_managed\"`, `\"magic_transit\"`, or `\"http_ratelimit\"`.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/RulesetRule:RulesetRule"
                        },
                        "description": "List of rule-based overrides (refer to the nested schema).\n"
                    },
                    "shareableEntitlementName": {
                        "type": "string",
                        "description": "Name of entitlement that is shareable between entities.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The ID of the zone where the ruleset is being created. Conflicts with `\"account_id\"`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/spectrumApplication:SpectrumApplication": {
            "description": "Provides a Cloudflare Spectrum Application. You can extend the power of Cloudflare's DDoS, TLS, and IP Firewall to your other TCP-based services.\n\n\n## Import\n\nSpectrum resource can be imported using a zone ID and Application ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/spectrumApplication:SpectrumApplication example d41d8cd98f00b204e9800998ecf8427e/9a7806061c88ada191ed06f989cc3dac\n```\n\n where* `d41d8cd98f00b204e9800998ecf8427e` - zone ID, as returned from [API](https://api.cloudflare.com/#zone-list-zones) * `9a7806061c88ada191ed06f989cc3dac` - Application ID ",
            "properties": {
                "argoSmartRouting": {
                    "type": "boolean",
                    "description": ". Enables Argo Smart Routing. Defaults to `false`.\n"
                },
                "dns": {
                    "$ref": "#/types/cloudflare:index/SpectrumApplicationDns:SpectrumApplicationDns",
                    "description": "The name and type of DNS record for the Spectrum application. Fields documented below.\n"
                },
                "edgeIpConnectivity": {
                    "type": "string",
                    "description": ". Choose which types of IP addresses will be provisioned for this subdomain. Valid values are: `all`, `ipv4`, `ipv6`. Defaults to `all`.\n"
                },
                "edgeIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". A list of edge IPs (IPv4 and/or IPv6) to configure Spectrum application to. Requires [Bring Your Own IP](https://developers.cloudflare.com/spectrum/getting-started/byoip/) provisioned.\n"
                },
                "ipFirewall": {
                    "type": "boolean",
                    "description": "Enables the IP Firewall for this application. Defaults to `true`.\n"
                },
                "originDirects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.\n"
                },
                "originDns": {
                    "$ref": "#/types/cloudflare:index/SpectrumApplicationOriginDns:SpectrumApplicationOriginDns",
                    "description": "A destination DNS addresses to the origin. Fields documented below.\n"
                },
                "originPort": {
                    "type": "integer",
                    "description": "If using `origin_dns` and not `origin_port_range`, this is a required attribute. Origin port to proxy traffice to e.g. `22`.\n"
                },
                "originPortRange": {
                    "$ref": "#/types/cloudflare:index/SpectrumApplicationOriginPortRange:SpectrumApplicationOriginPortRange",
                    "description": "If using `origin_dns` and not `origin_port`, this is a required attribute. Origin port range to proxy traffice to.  When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Fields documented below.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The port configuration at Cloudflare’s edge. e.g. `tcp/22`.\n"
                },
                "proxyProtocol": {
                    "type": "string",
                    "description": "Enables a proxy protocol to the origin. Valid values are: `off`, `v1`, `v2`, and `simple`. Defaults to `off`.\n"
                },
                "tls": {
                    "type": "string",
                    "description": "TLS configuration option for Cloudflare to connect to your origin. Valid values are: `off`, `flexible`, `full` and `strict`. Defaults to `off`.\n"
                },
                "trafficType": {
                    "type": "string",
                    "description": "Sets application type. Valid values are: `direct`, `http`, `https`.  Defaults to `direct`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to add the application to\n"
                }
            },
            "required": [
                "dns",
                "edgeIpConnectivity",
                "protocol",
                "zoneId"
            ],
            "inputProperties": {
                "argoSmartRouting": {
                    "type": "boolean",
                    "description": ". Enables Argo Smart Routing. Defaults to `false`.\n"
                },
                "dns": {
                    "$ref": "#/types/cloudflare:index/SpectrumApplicationDns:SpectrumApplicationDns",
                    "description": "The name and type of DNS record for the Spectrum application. Fields documented below.\n"
                },
                "edgeIpConnectivity": {
                    "type": "string",
                    "description": ". Choose which types of IP addresses will be provisioned for this subdomain. Valid values are: `all`, `ipv4`, `ipv6`. Defaults to `all`.\n"
                },
                "edgeIps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ". A list of edge IPs (IPv4 and/or IPv6) to configure Spectrum application to. Requires [Bring Your Own IP](https://developers.cloudflare.com/spectrum/getting-started/byoip/) provisioned.\n"
                },
                "ipFirewall": {
                    "type": "boolean",
                    "description": "Enables the IP Firewall for this application. Defaults to `true`.\n"
                },
                "originDirects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.\n"
                },
                "originDns": {
                    "$ref": "#/types/cloudflare:index/SpectrumApplicationOriginDns:SpectrumApplicationOriginDns",
                    "description": "A destination DNS addresses to the origin. Fields documented below.\n"
                },
                "originPort": {
                    "type": "integer",
                    "description": "If using `origin_dns` and not `origin_port_range`, this is a required attribute. Origin port to proxy traffice to e.g. `22`.\n"
                },
                "originPortRange": {
                    "$ref": "#/types/cloudflare:index/SpectrumApplicationOriginPortRange:SpectrumApplicationOriginPortRange",
                    "description": "If using `origin_dns` and not `origin_port`, this is a required attribute. Origin port range to proxy traffice to.  When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Fields documented below.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The port configuration at Cloudflare’s edge. e.g. `tcp/22`.\n"
                },
                "proxyProtocol": {
                    "type": "string",
                    "description": "Enables a proxy protocol to the origin. Valid values are: `off`, `v1`, `v2`, and `simple`. Defaults to `off`.\n"
                },
                "tls": {
                    "type": "string",
                    "description": "TLS configuration option for Cloudflare to connect to your origin. Valid values are: `off`, `flexible`, `full` and `strict`. Defaults to `off`.\n"
                },
                "trafficType": {
                    "type": "string",
                    "description": "Sets application type. Valid values are: `direct`, `http`, `https`.  Defaults to `direct`.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to add the application to\n"
                }
            },
            "requiredInputs": [
                "dns",
                "protocol",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SpectrumApplication resources.\n",
                "properties": {
                    "argoSmartRouting": {
                        "type": "boolean",
                        "description": ". Enables Argo Smart Routing. Defaults to `false`.\n"
                    },
                    "dns": {
                        "$ref": "#/types/cloudflare:index/SpectrumApplicationDns:SpectrumApplicationDns",
                        "description": "The name and type of DNS record for the Spectrum application. Fields documented below.\n"
                    },
                    "edgeIpConnectivity": {
                        "type": "string",
                        "description": ". Choose which types of IP addresses will be provisioned for this subdomain. Valid values are: `all`, `ipv4`, `ipv6`. Defaults to `all`.\n"
                    },
                    "edgeIps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ". A list of edge IPs (IPv4 and/or IPv6) to configure Spectrum application to. Requires [Bring Your Own IP](https://developers.cloudflare.com/spectrum/getting-started/byoip/) provisioned.\n"
                    },
                    "ipFirewall": {
                        "type": "boolean",
                        "description": "Enables the IP Firewall for this application. Defaults to `true`.\n"
                    },
                    "originDirects": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of destination addresses to the origin. e.g. `tcp://192.0.2.1:22`.\n"
                    },
                    "originDns": {
                        "$ref": "#/types/cloudflare:index/SpectrumApplicationOriginDns:SpectrumApplicationOriginDns",
                        "description": "A destination DNS addresses to the origin. Fields documented below.\n"
                    },
                    "originPort": {
                        "type": "integer",
                        "description": "If using `origin_dns` and not `origin_port_range`, this is a required attribute. Origin port to proxy traffice to e.g. `22`.\n"
                    },
                    "originPortRange": {
                        "$ref": "#/types/cloudflare:index/SpectrumApplicationOriginPortRange:SpectrumApplicationOriginPortRange",
                        "description": "If using `origin_dns` and not `origin_port`, this is a required attribute. Origin port range to proxy traffice to.  When using a range, the protocol field must also specify a range, e.g. `tcp/22-23`. Fields documented below.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The port configuration at Cloudflare’s edge. e.g. `tcp/22`.\n"
                    },
                    "proxyProtocol": {
                        "type": "string",
                        "description": "Enables a proxy protocol to the origin. Valid values are: `off`, `v1`, `v2`, and `simple`. Defaults to `off`.\n"
                    },
                    "tls": {
                        "type": "string",
                        "description": "TLS configuration option for Cloudflare to connect to your origin. Valid values are: `off`, `flexible`, `full` and `strict`. Defaults to `off`.\n"
                    },
                    "trafficType": {
                        "type": "string",
                        "description": "Sets application type. Valid values are: `direct`, `http`, `https`.  Defaults to `direct`.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to add the application to\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/splitTunnel:SplitTunnel": {
            "description": "Provides a Cloudflare Split Tunnel resource. Split tunnels are used to either\ninclude or exclude lists of routes from the WARP client's tunnel.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Excluding *.example.com from WARP routes\nconst exampleSplitTunnelExclude = new cloudflare.SplitTunnel(\"example_split_tunnel_exclude\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    mode: \"exclude\",\n    tunnels: [{\n        description: \"example domain\",\n        host: \"*.example.com\",\n    }],\n});\n// Including *.example.com in WARP routes\nconst exampleSplitTunnelInclude = new cloudflare.SplitTunnel(\"example_split_tunnel_include\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    mode: \"include\",\n    tunnels: [{\n        description: \"example domain\",\n        host: \"*.example.com\",\n    }],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSplit Tunnels can be imported using the account identifer and mode.\n\n```sh\n $ pulumi import cloudflare:index/splitTunnel:SplitTunnel example 1d5fdc9e88c8a8c4518b068cd94331fe/exclude\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the device posture rule should be added.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The split tunnel mode. Valid values are `include` or `exclude`.\n"
                },
                "tunnels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/SplitTunnelTunnel:SplitTunnelTunnel"
                    },
                    "description": "The value of the tunnel attributes (refer to the nested schema).\n"
                }
            },
            "required": [
                "accountId",
                "mode",
                "tunnels"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the device posture rule should be added.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The split tunnel mode. Valid values are `include` or `exclude`.\n"
                },
                "tunnels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/SplitTunnelTunnel:SplitTunnelTunnel"
                    },
                    "description": "The value of the tunnel attributes (refer to the nested schema).\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "mode",
                "tunnels"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SplitTunnel resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the device posture rule should be added.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The split tunnel mode. Valid values are `include` or `exclude`.\n"
                    },
                    "tunnels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/SplitTunnelTunnel:SplitTunnelTunnel"
                        },
                        "description": "The value of the tunnel attributes (refer to the nested schema).\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/staticRoute:StaticRoute": {
            "description": "Provides a resource, that manages Cloudflare static routes for Magic Transit or Magic WAN. \nStatic routes are used to route traffic through GRE tunnels.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.StaticRoute(\"example\", {\n    accountId: \"c4a7362d577a6c3019a474fd6f485821\",\n    coloNames: [\"den01\"],\n    coloRegions: [\"APAC\"],\n    description: \"New route for new prefix 192.0.2.0/24\",\n    nexthop: \"10.0.0.0\",\n    prefix: \"192.0.2.0/24\",\n    priority: 100,\n    weight: 10,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn existing static route can be imported using the account ID and static route ID\n\n```sh\n $ pulumi import cloudflare:index/staticRoute:StaticRoute example d41d8cd98f00b204e9800998ecf8427e/cb029e245cfdd66dc8d2e570d5dd3322\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the static route is being created.\n"
                },
                "coloNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of Cloudflare colocation names for this static route.\n"
                },
                "coloRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of Cloudflare colocation regions for this static route.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the static route.\n"
                },
                "nexthop": {
                    "type": "string",
                    "description": "The nexthop IP address where traffic will be routed to.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Your network prefix using CIDR notation.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for the static route.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The optional weight for ECMP routes.\n"
                }
            },
            "required": [
                "nexthop",
                "prefix",
                "priority"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the static route is being created.\n",
                    "willReplaceOnChanges": true
                },
                "coloNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of Cloudflare colocation names for this static route.\n"
                },
                "coloRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of Cloudflare colocation regions for this static route.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the static route.\n"
                },
                "nexthop": {
                    "type": "string",
                    "description": "The nexthop IP address where traffic will be routed to.\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "Your network prefix using CIDR notation.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for the static route.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "The optional weight for ECMP routes.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "nexthop",
                "prefix",
                "priority"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StaticRoute resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account where the static route is being created.\n",
                        "willReplaceOnChanges": true
                    },
                    "coloNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optional list of Cloudflare colocation names for this static route.\n"
                    },
                    "coloRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Optional list of Cloudflare colocation regions for this static route.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the static route.\n"
                    },
                    "nexthop": {
                        "type": "string",
                        "description": "The nexthop IP address where traffic will be routed to.\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "Your network prefix using CIDR notation.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority for the static route.\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "The optional weight for ECMP routes.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/teamsAccount:TeamsAccount": {
            "description": "Provides a Cloudflare Teams Account resource. The Teams Account resource defines configuration for secure web gateway.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst main = new cloudflare.TeamsAccount(\"main\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    antivirus: {\n        enabledDownloadPhase: true,\n        enabledUploadPhase: false,\n        failClosed: true,\n    },\n    blockPage: {\n        backgroundColor: \"#000000\",\n        footerText: \"hello\",\n        headerText: \"hello\",\n        logoPath: \"https://google.com\",\n    },\n    fips: {\n        tls: true,\n    },\n    logging: {\n        redactPii: true,\n        settingsByRuleType: {\n            dns: {\n                logAll: false,\n                logBlocks: true,\n            },\n            http: {\n                logAll: true,\n                logBlocks: true,\n            },\n            l4: {\n                logAll: false,\n                logBlocks: true,\n            },\n        },\n    },\n    proxy: {\n        tcp: true,\n        udp: true,\n    },\n    tlsDecryptEnabled: true,\n    urlBrowserIsolationEnabled: true,\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nSince a Teams account does not have a unique resource ID, configuration can be imported using the account ID.\n\n```sh\n $ pulumi import cloudflare:index/teamsAccount:TeamsAccount example cb029e245cfdd66dc8d2e570d5dd3322\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams location should be added.\n"
                },
                "activityLogEnabled": {
                    "type": "boolean"
                },
                "antivirus": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountAntivirus:TeamsAccountAntivirus",
                    "description": "Configuration block for antivirus traffic scanning.\n"
                },
                "blockPage": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountBlockPage:TeamsAccountBlockPage",
                    "description": "Configuration for a custom block page.\n"
                },
                "fips": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountFips:TeamsAccountFips",
                    "description": "Configure compliance with Federal Information Processing Standards.\n"
                },
                "logging": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountLogging:TeamsAccountLogging"
                },
                "proxy": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountProxy:TeamsAccountProxy",
                    "description": "Configuration block for specifying which protocols are proxied.\n"
                },
                "tlsDecryptEnabled": {
                    "type": "boolean",
                    "description": "Indicator that decryption of TLS traffic is enabled.\n"
                },
                "urlBrowserIsolationEnabled": {
                    "type": "boolean",
                    "description": "Safely browse websites in Browser Isolation through a URL.\n"
                }
            },
            "required": [
                "accountId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams location should be added.\n"
                },
                "activityLogEnabled": {
                    "type": "boolean"
                },
                "antivirus": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountAntivirus:TeamsAccountAntivirus",
                    "description": "Configuration block for antivirus traffic scanning.\n"
                },
                "blockPage": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountBlockPage:TeamsAccountBlockPage",
                    "description": "Configuration for a custom block page.\n"
                },
                "fips": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountFips:TeamsAccountFips",
                    "description": "Configure compliance with Federal Information Processing Standards.\n"
                },
                "logging": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountLogging:TeamsAccountLogging"
                },
                "proxy": {
                    "$ref": "#/types/cloudflare:index/TeamsAccountProxy:TeamsAccountProxy",
                    "description": "Configuration block for specifying which protocols are proxied.\n"
                },
                "tlsDecryptEnabled": {
                    "type": "boolean",
                    "description": "Indicator that decryption of TLS traffic is enabled.\n"
                },
                "urlBrowserIsolationEnabled": {
                    "type": "boolean",
                    "description": "Safely browse websites in Browser Isolation through a URL.\n"
                }
            },
            "requiredInputs": [
                "accountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamsAccount resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the teams location should be added.\n"
                    },
                    "activityLogEnabled": {
                        "type": "boolean"
                    },
                    "antivirus": {
                        "$ref": "#/types/cloudflare:index/TeamsAccountAntivirus:TeamsAccountAntivirus",
                        "description": "Configuration block for antivirus traffic scanning.\n"
                    },
                    "blockPage": {
                        "$ref": "#/types/cloudflare:index/TeamsAccountBlockPage:TeamsAccountBlockPage",
                        "description": "Configuration for a custom block page.\n"
                    },
                    "fips": {
                        "$ref": "#/types/cloudflare:index/TeamsAccountFips:TeamsAccountFips",
                        "description": "Configure compliance with Federal Information Processing Standards.\n"
                    },
                    "logging": {
                        "$ref": "#/types/cloudflare:index/TeamsAccountLogging:TeamsAccountLogging"
                    },
                    "proxy": {
                        "$ref": "#/types/cloudflare:index/TeamsAccountProxy:TeamsAccountProxy",
                        "description": "Configuration block for specifying which protocols are proxied.\n"
                    },
                    "tlsDecryptEnabled": {
                        "type": "boolean",
                        "description": "Indicator that decryption of TLS traffic is enabled.\n"
                    },
                    "urlBrowserIsolationEnabled": {
                        "type": "boolean",
                        "description": "Safely browse websites in Browser Isolation through a URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/teamsList:TeamsList": {
            "description": "Provides a Cloudflare Teams List resource. Teams lists are referenced when creating secure web gateway policies or device posture rules.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst corporateDevices = new cloudflare.TeamsList(\"corporate_devices\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    description: \"Serial numbers for all corporate devices.\",\n    items: [\n        \"8GE8721REF\",\n        \"5RE8543EGG\",\n        \"1YE2880LNP\",\n    ],\n    name: \"Corporate devices\",\n    type: \"SERIAL\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTeams lists can be imported using a composite ID formed of account ID and teams list ID.\n\n```sh\n $ pulumi import cloudflare:index/teamsList:TeamsList corporate_devices cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams list should be added.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the teams list.\n"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The items of the teams list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the teams list.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The teams list type. Valid values are `IP`, `SERIAL`, `URL`, `DOMAIN`, and `EMAIL`.\n"
                }
            },
            "required": [
                "accountId",
                "name",
                "type"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams list should be added.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the teams list.\n"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The items of the teams list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the teams list.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The teams list type. Valid values are `IP`, `SERIAL`, `URL`, `DOMAIN`, and `EMAIL`.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "name",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamsList resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the teams list should be added.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the teams list.\n"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The items of the teams list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the teams list.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The teams list type. Valid values are `IP`, `SERIAL`, `URL`, `DOMAIN`, and `EMAIL`.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/teamsLocation:TeamsLocation": {
            "description": "Provides a Cloudflare Teams Location resource. Teams Locations are referenced\nwhen creating secure web gateway policies.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst corporateOffice = new cloudflare.TeamsLocation(\"corporate_office\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    clientDefault: true,\n    name: \"office\",\n    networks: [\n        {\n            network: \"203.0.113.1/32\",\n        },\n        {\n            network: \"203.0.113.2/32\",\n        },\n    ],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTeams locations can be imported using a composite ID formed of account ID and teams location ID.\n\n```sh\n $ pulumi import cloudflare:index/teamsLocation:TeamsLocation corporate_office cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams location should be added.\n"
                },
                "anonymizedLogsEnabled": {
                    "type": "boolean",
                    "description": "Indicator that anonymized logs are enabled.\n"
                },
                "clientDefault": {
                    "type": "boolean",
                    "description": "Indicator that this is the default location.\n"
                },
                "dohSubdomain": {
                    "type": "string",
                    "description": "The FQDN that DoH clients should be pointed at.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Client IP address\n"
                },
                "ipv4Destination": {
                    "type": "string",
                    "description": "IP to direct all IPv4 DNS queries too.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the teams location.\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/TeamsLocationNetwork:TeamsLocationNetwork"
                    },
                    "description": "The networks CIDRs that comprise the location.\n"
                },
                "policyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "accountId",
                "anonymizedLogsEnabled",
                "dohSubdomain",
                "ip",
                "ipv4Destination",
                "name",
                "policyIds"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams location should be added.\n"
                },
                "clientDefault": {
                    "type": "boolean",
                    "description": "Indicator that this is the default location.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the teams location.\n"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/TeamsLocationNetwork:TeamsLocationNetwork"
                    },
                    "description": "The networks CIDRs that comprise the location.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamsLocation resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the teams location should be added.\n"
                    },
                    "anonymizedLogsEnabled": {
                        "type": "boolean",
                        "description": "Indicator that anonymized logs are enabled.\n"
                    },
                    "clientDefault": {
                        "type": "boolean",
                        "description": "Indicator that this is the default location.\n"
                    },
                    "dohSubdomain": {
                        "type": "string",
                        "description": "The FQDN that DoH clients should be pointed at.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Client IP address\n"
                    },
                    "ipv4Destination": {
                        "type": "string",
                        "description": "IP to direct all IPv4 DNS queries too.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the teams location.\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/TeamsLocationNetwork:TeamsLocationNetwork"
                        },
                        "description": "The networks CIDRs that comprise the location.\n"
                    },
                    "policyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/teamsProxyEndpoint:TeamsProxyEndpoint": {
            "description": "Provides a Cloudflare Teams Proxy Endpoint resource. Teams Proxy Endpoints are used for pointing proxy clients at\nCloudflare Secure Gateway.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst corporateOffice = new cloudflare.TeamsProxyEndpoint(\"corporate_office\", {\n    accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n    ips: [\"192.0.2.0/24\"],\n    name: \"office\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTeams Proxy Endpoints can be imported using a composite ID formed of account ID and teams proxy_endpoint ID.\n\n```sh\n $ pulumi import cloudflare:index/teamsProxyEndpoint:TeamsProxyEndpoint corporate_office cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams proxy endpoint should be added.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The networks CIDRs that will be allowed to initiate proxy connections.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the teams proxy endpoint.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The FQDN that proxy clients should be pointed at.\n"
                }
            },
            "required": [
                "accountId",
                "ips",
                "name",
                "subdomain"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams proxy endpoint should be added.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The networks CIDRs that will be allowed to initiate proxy connections.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the teams proxy endpoint.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "ips",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamsProxyEndpoint resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the teams proxy endpoint should be added.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The networks CIDRs that will be allowed to initiate proxy connections.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the teams proxy endpoint.\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The FQDN that proxy clients should be pointed at.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/teamsRule:TeamsRule": {
            "description": "Provides a Cloudflare Teams rule resource. Teams rules comprise secure web gateway policies.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst rule1 = new cloudflare.TeamsRule(\"rule1\", {\n    accountId: \"d57c3de47a013c03ca7e237dd3e61d7d\",\n    action: \"block\",\n    description: \"desc\",\n    filters: [\"http\"],\n    name: \"office\",\n    precedence: 1,\n    ruleSettings: {\n        blockPageEnabled: true,\n        blockPageReason: \"access not permitted\",\n    },\n    traffic: \"http.request.uri == \\\"https://www.example.com/malicious\\\"\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTeams Rules can be imported using a composite ID formed of account ID and teams rule ID.\n\n```sh\n $ pulumi import cloudflare:index/teamsRule:TeamsRule rule1 cb029e245cfdd66dc8d2e570d5dd3322/d41d8cd98f00b204e9800998ecf8427e\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams rule should be added.\n"
                },
                "action": {
                    "type": "string",
                    "description": "The action executed by matched teams rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the teams rule.\n"
                },
                "devicePosture": {
                    "type": "string",
                    "description": "The wirefilter expression to be used for device_posture check matching.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicator of rule enablement.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The protocol or layer to evaluate the traffic and identity expressions.\n"
                },
                "identity": {
                    "type": "string",
                    "description": "The wirefilter expression to be used for identity matching.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the teams rule.\n"
                },
                "precedence": {
                    "type": "integer",
                    "description": "The evaluation precedence of the teams rule.\n"
                },
                "ruleSettings": {
                    "$ref": "#/types/cloudflare:index/TeamsRuleRuleSettings:TeamsRuleRuleSettings",
                    "description": "Additional rule settings (refer to the nested schema).\n"
                },
                "traffic": {
                    "type": "string",
                    "description": "The wirefilter expression to be used for traffic matching.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "accountId",
                "action",
                "description",
                "name",
                "precedence",
                "version"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The account to which the teams rule should be added.\n"
                },
                "action": {
                    "type": "string",
                    "description": "The action executed by matched teams rule.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the teams rule.\n"
                },
                "devicePosture": {
                    "type": "string",
                    "description": "The wirefilter expression to be used for device_posture check matching.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicator of rule enablement.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The protocol or layer to evaluate the traffic and identity expressions.\n"
                },
                "identity": {
                    "type": "string",
                    "description": "The wirefilter expression to be used for identity matching.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the teams rule.\n"
                },
                "precedence": {
                    "type": "integer",
                    "description": "The evaluation precedence of the teams rule.\n"
                },
                "ruleSettings": {
                    "$ref": "#/types/cloudflare:index/TeamsRuleRuleSettings:TeamsRuleRuleSettings",
                    "description": "Additional rule settings (refer to the nested schema).\n"
                },
                "traffic": {
                    "type": "string",
                    "description": "The wirefilter expression to be used for traffic matching.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "action",
                "description",
                "name",
                "precedence"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamsRule resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account to which the teams rule should be added.\n"
                    },
                    "action": {
                        "type": "string",
                        "description": "The action executed by matched teams rule.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the teams rule.\n"
                    },
                    "devicePosture": {
                        "type": "string",
                        "description": "The wirefilter expression to be used for device_posture check matching.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicator of rule enablement.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The protocol or layer to evaluate the traffic and identity expressions.\n"
                    },
                    "identity": {
                        "type": "string",
                        "description": "The wirefilter expression to be used for identity matching.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the teams rule.\n"
                    },
                    "precedence": {
                        "type": "integer",
                        "description": "The evaluation precedence of the teams rule.\n"
                    },
                    "ruleSettings": {
                        "$ref": "#/types/cloudflare:index/TeamsRuleRuleSettings:TeamsRuleRuleSettings",
                        "description": "Additional rule settings (refer to the nested schema).\n"
                    },
                    "traffic": {
                        "type": "string",
                        "description": "The wirefilter expression to be used for traffic matching.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/tunnelRoute:TunnelRoute": {
            "description": "Provides a resource, that manages Cloudflare tunnel routes for Zero Trust. Tunnel\nroutes are used to direct IP traffic through Cloudflare Tunnels.\n\n\n## Import\n\nAn existing tunnel route can be imported using the account ID and network CIDR.\n\n```sh\n $ pulumi import cloudflare:index/tunnelRoute:TunnelRoute cloudflare_tunnel_route c4a7362d577a6c3019a474fd6f485821/192.0.2.24/32\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the tunnel route is being created.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Description of the tunnel route.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.\n"
                },
                "tunnelId": {
                    "type": "string",
                    "description": "The ID of the tunnel that will service the tunnel route.\n"
                }
            },
            "required": [
                "accountId",
                "network",
                "tunnelId"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "The ID of the account where the tunnel route is being created.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Description of the tunnel route.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.\n"
                },
                "tunnelId": {
                    "type": "string",
                    "description": "The ID of the tunnel that will service the tunnel route.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "accountId",
                "network",
                "tunnelId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TunnelRoute resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The ID of the account where the tunnel route is being created.\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Description of the tunnel route.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "The IPv4 or IPv6 network that should use this tunnel route, in CIDR notation.\n"
                    },
                    "tunnelId": {
                        "type": "string",
                        "description": "The ID of the tunnel that will service the tunnel route.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/wafGroup:WafGroup": {
            "description": "Provides a Cloudflare WAF rule group resource for a particular zone. This can be used to configure firewall behaviour for pre-defined firewall groups.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst honeyPot = new cloudflare.WafGroup(\"honey_pot\", {\n    groupId: \"de677e5818985db1285d0e80225f06e5\",\n    mode: \"on\",\n    zoneId: \"ae36f999674d196762efcc5abb06b345\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nWAF Rule Groups can be imported using a composite ID formed of zone ID and the WAF Rule Group ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/wafGroup:WafGroup honey_pot ae36f999674d196762efcc5abb06b345/de677e5818985db1285d0e80225f06e5\n```\n\n ",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "The WAF Rule Group ID.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode of the group, can be one of [\"on\", \"off\"].\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Package that contains the group.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply to.\n"
                }
            },
            "required": [
                "groupId",
                "packageId",
                "zoneId"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "string",
                    "description": "The WAF Rule Group ID.\n",
                    "willReplaceOnChanges": true
                },
                "mode": {
                    "type": "string",
                    "description": "The mode of the group, can be one of [\"on\", \"off\"].\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Package that contains the group.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "groupId",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WafGroup resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The WAF Rule Group ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "mode": {
                        "type": "string",
                        "description": "The mode of the group, can be one of [\"on\", \"off\"].\n"
                    },
                    "packageId": {
                        "type": "string",
                        "description": "The ID of the WAF Rule Package that contains the group.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to apply to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/wafOverride:WafOverride": {
            "description": "Provides a Cloudflare WAF override resource. This enables the ability to toggle\nWAF rules and groups on or off based on URIs.\n\n\n## Import\n\nWAF Overrides can be imported using a composite ID formed of zone ID and override ID.\n\n```sh\n $ pulumi import cloudflare:index/wafOverride:WafOverride my_example_waf_override 3abe5b950053dbddf1516d89f9ef1e8a/9d4e66d7649c178663bf62e06dbacb23\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of what the WAF override does.\n"
                },
                "groups": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Similar to `rules`; which WAF groups you want to alter.\n"
                },
                "overrideId": {
                    "type": "string"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Whether this package is currently paused.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Relative priority of this configuration when multiple configurations match a single URL.\n"
                },
                "rewriteAction": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "When a WAF rule matches, substitute its configured action for a different action specified by this definition.\n"
                },
                "rules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of WAF rule ID to rule action you intend to apply.\n"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of URLs to apply the WAF override to.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the WAF override condition should be added.\n"
                }
            },
            "required": [
                "overrideId",
                "urls",
                "zoneId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of what the WAF override does.\n"
                },
                "groups": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Similar to `rules`; which WAF groups you want to alter.\n"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Whether this package is currently paused.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Relative priority of this configuration when multiple configurations match a single URL.\n"
                },
                "rewriteAction": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "When a WAF rule matches, substitute its configured action for a different action specified by this definition.\n"
                },
                "rules": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A list of WAF rule ID to rule action you intend to apply.\n"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of URLs to apply the WAF override to.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone to which the WAF override condition should be added.\n"
                }
            },
            "requiredInputs": [
                "urls",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WafOverride resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of what the WAF override does.\n"
                    },
                    "groups": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Similar to `rules`; which WAF groups you want to alter.\n"
                    },
                    "overrideId": {
                        "type": "string"
                    },
                    "paused": {
                        "type": "boolean",
                        "description": "Whether this package is currently paused.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Relative priority of this configuration when multiple configurations match a single URL.\n"
                    },
                    "rewriteAction": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "When a WAF rule matches, substitute its configured action for a different action specified by this definition.\n"
                    },
                    "rules": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A list of WAF rule ID to rule action you intend to apply.\n"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of URLs to apply the WAF override to.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone to which the WAF override condition should be added.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/wafPackage:WafPackage": {
            "description": "Provides a Cloudflare WAF rule package resource for a particular zone. This can be used to configure firewall behaviour for pre-defined firewall packages.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst owasp = new cloudflare.WafPackage(\"owasp\", {\n    actionMode: \"simulate\",\n    packageId: \"a25a9a7e9c00afc1fb2e0245519d725b\",\n    sensitivity: \"medium\",\n    zoneId: \"ae36f999674d196762efcc5abb06b345\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPackages can be imported using a composite ID formed of zone ID and the WAF Package ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/wafPackage:WafPackage owasp ae36f999674d196762efcc5abb06b345/a25a9a7e9c00afc1fb2e0245519d725b\n```\n\n ",
            "properties": {
                "actionMode": {
                    "type": "string",
                    "description": "The action mode of the package, can be one of [\"block\", \"challenge\", \"simulate\"].\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The WAF Package ID.\n"
                },
                "sensitivity": {
                    "type": "string",
                    "description": "The sensitivity of the package, can be one of [\"high\", \"medium\", \"low\", \"off\"].\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply to.\n"
                }
            },
            "required": [
                "packageId",
                "zoneId"
            ],
            "inputProperties": {
                "actionMode": {
                    "type": "string",
                    "description": "The action mode of the package, can be one of [\"block\", \"challenge\", \"simulate\"].\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The WAF Package ID.\n",
                    "willReplaceOnChanges": true
                },
                "sensitivity": {
                    "type": "string",
                    "description": "The sensitivity of the package, can be one of [\"high\", \"medium\", \"low\", \"off\"].\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "packageId",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WafPackage resources.\n",
                "properties": {
                    "actionMode": {
                        "type": "string",
                        "description": "The action mode of the package, can be one of [\"block\", \"challenge\", \"simulate\"].\n"
                    },
                    "packageId": {
                        "type": "string",
                        "description": "The WAF Package ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "sensitivity": {
                        "type": "string",
                        "description": "The sensitivity of the package, can be one of [\"high\", \"medium\", \"low\", \"off\"].\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to apply to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/wafRule:WafRule": {
            "description": "Provides a Cloudflare WAF rule resource for a particular zone. This can be used to configure firewall behaviour for pre-defined firewall rules.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst rule100000 = new cloudflare.WafRule(\"rule_100000\", {\n    mode: \"simulate\",\n    ruleId: \"100000\",\n    zoneId: \"ae36f999674d196762efcc5abb06b345\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRules can be imported using a composite ID formed of zone ID and the WAF Rule ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/wafRule:WafRule 100000 ae36f999674d196762efcc5abb06b345/100000\n```\n\n ",
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Group that contains the rule.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode of the rule, can be one of [\"block\", \"challenge\", \"default\", \"disable\", \"simulate\"] or [\"on\", \"off\"] depending on the WAF Rule type.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Package that contains the rule.\n"
                },
                "ruleId": {
                    "type": "string",
                    "description": "The WAF Rule ID.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply to.\n"
                }
            },
            "required": [
                "groupId",
                "mode",
                "packageId",
                "ruleId",
                "zoneId"
            ],
            "inputProperties": {
                "mode": {
                    "type": "string",
                    "description": "The mode of the rule, can be one of [\"block\", \"challenge\", \"default\", \"disable\", \"simulate\"] or [\"on\", \"off\"] depending on the WAF Rule type.\n"
                },
                "packageId": {
                    "type": "string",
                    "description": "The ID of the WAF Rule Package that contains the rule.\n"
                },
                "ruleId": {
                    "type": "string",
                    "description": "The WAF Rule ID.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply to.\n"
                }
            },
            "requiredInputs": [
                "mode",
                "ruleId",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WafRule resources.\n",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The ID of the WAF Rule Group that contains the rule.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The mode of the rule, can be one of [\"block\", \"challenge\", \"default\", \"disable\", \"simulate\"] or [\"on\", \"off\"] depending on the WAF Rule type.\n"
                    },
                    "packageId": {
                        "type": "string",
                        "description": "The ID of the WAF Rule Package that contains the rule.\n"
                    },
                    "ruleId": {
                        "type": "string",
                        "description": "The WAF Rule ID.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to apply to.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/waitingRoom:WaitingRoom": {
            "description": "Provides a Cloudflare Waiting Room resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.WaitingRoom(\"example\", {\n    host: \"foo.example.com\",\n    name: \"foo\",\n    newUsersPerMinute: 200,\n    path: \"/\",\n    totalActiveUsers: 200,\n    zoneId: \"ae36f999674d196762efcc5abb06b345\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nWaiting rooms can be imported using a composite ID formed of zone ID and waiting room ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/waitingRoom:WaitingRoom default ae36f999674d196762efcc5abb06b345/d41d8cd98f00b204e9800998ecf8427e\n```\n\n where* `ae36f999674d196762efcc5abb06b345` - the zone ID * `d41d8cd98f00b204e9800998ecf8427e` - waiting room ID as returned by [API](https://api.cloudflare.com/#waiting-room-list-waiting-rooms) ",
            "properties": {
                "customPageHtml": {
                    "type": "string",
                    "description": "This a templated html file that will be rendered at the edge.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description to let users add more details about the waiting room.\n"
                },
                "disableSessionRenewal": {
                    "type": "boolean",
                    "description": "Disables automatic renewal of session cookies. Default: false.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for which the waiting room will be applied (no wildcards).\n"
                },
                "jsonResponseEnabled": {
                    "type": "boolean",
                    "description": "If true, requests to the waiting room with the header Accept: application/json will receive a JSON response object.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify the waiting room.\n"
                },
                "newUsersPerMinute": {
                    "type": "integer",
                    "description": "The number of new users that will be let into the route every minute.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path within the host to enable the waiting room on. Default: \"/\".\n"
                },
                "queueAll": {
                    "type": "boolean",
                    "description": "If queue_all is true all the traffic that is coming to a route will be sent to the waiting room. Default: false.\n"
                },
                "sessionDuration": {
                    "type": "integer",
                    "description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. Default: 5\n"
                },
                "suspended": {
                    "type": "boolean",
                    "description": "If suspended, the traffic doesn't go to the waiting room. Default: false.\n"
                },
                "totalActiveUsers": {
                    "type": "integer",
                    "description": "The total number of active user sessions on the route at a point in time.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply to.\n"
                }
            },
            "required": [
                "host",
                "name",
                "newUsersPerMinute",
                "totalActiveUsers",
                "zoneId"
            ],
            "inputProperties": {
                "customPageHtml": {
                    "type": "string",
                    "description": "This a templated html file that will be rendered at the edge.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description to let users add more details about the waiting room.\n"
                },
                "disableSessionRenewal": {
                    "type": "boolean",
                    "description": "Disables automatic renewal of session cookies. Default: false.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host name for which the waiting room will be applied (no wildcards).\n"
                },
                "jsonResponseEnabled": {
                    "type": "boolean",
                    "description": "If true, requests to the waiting room with the header Accept: application/json will receive a JSON response object.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify the waiting room.\n",
                    "willReplaceOnChanges": true
                },
                "newUsersPerMinute": {
                    "type": "integer",
                    "description": "The number of new users that will be let into the route every minute.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path within the host to enable the waiting room on. Default: \"/\".\n"
                },
                "queueAll": {
                    "type": "boolean",
                    "description": "If queue_all is true all the traffic that is coming to a route will be sent to the waiting room. Default: false.\n"
                },
                "sessionDuration": {
                    "type": "integer",
                    "description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. Default: 5\n"
                },
                "suspended": {
                    "type": "boolean",
                    "description": "If suspended, the traffic doesn't go to the waiting room. Default: false.\n"
                },
                "totalActiveUsers": {
                    "type": "integer",
                    "description": "The total number of active user sessions on the route at a point in time.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to apply to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "host",
                "name",
                "newUsersPerMinute",
                "totalActiveUsers",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WaitingRoom resources.\n",
                "properties": {
                    "customPageHtml": {
                        "type": "string",
                        "description": "This a templated html file that will be rendered at the edge.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description to let users add more details about the waiting room.\n"
                    },
                    "disableSessionRenewal": {
                        "type": "boolean",
                        "description": "Disables automatic renewal of session cookies. Default: false.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host name for which the waiting room will be applied (no wildcards).\n"
                    },
                    "jsonResponseEnabled": {
                        "type": "boolean",
                        "description": "If true, requests to the waiting room with the header Accept: application/json will receive a JSON response object.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name to identify the waiting room.\n",
                        "willReplaceOnChanges": true
                    },
                    "newUsersPerMinute": {
                        "type": "integer",
                        "description": "The number of new users that will be let into the route every minute.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path within the host to enable the waiting room on. Default: \"/\".\n"
                    },
                    "queueAll": {
                        "type": "boolean",
                        "description": "If queue_all is true all the traffic that is coming to a route will be sent to the waiting room. Default: false.\n"
                    },
                    "sessionDuration": {
                        "type": "integer",
                        "description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. Default: 5\n"
                    },
                    "suspended": {
                        "type": "boolean",
                        "description": "If suspended, the traffic doesn't go to the waiting room. Default: false.\n"
                    },
                    "totalActiveUsers": {
                        "type": "integer",
                        "description": "The total number of active user sessions on the route at a point in time.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to apply to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/waitingRoomEvent:WaitingRoomEvent": {
            "description": "Provides a Cloudflare Waiting Room Event resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.WaitingRoomVent(\"example\", {\n    eventEndTime: \"2006-01-02T20:04:05Z\",\n    eventStartTime: \"2006-01-02T15:04:05Z\",\n    name: \"foo\",\n    waitingRoomId: \"d41d8cd98f00b204e9800998ecf8427e\",\n    zoneId: \"ae36f999674d196762efcc5abb06b345\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nWaiting room events can be imported using a composite ID formed of zone ID, waiting room ID, and waiting room event ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/waitingRoomEvent:WaitingRoomEvent default ae36f999674d196762efcc5abb06b345/d41d8cd98f00b204e9800998ecf8427e/25756b2dfe6e378a06b033b670413757\n```\n\n where* `ae36f999674d196762efcc5abb06b345` - the zone ID * `d41d8cd98f00b204e9800998ecf8427e` - waiting room ID as returned by [API](https://api.cloudflare.com/#waiting-room-list-waiting-rooms) * `25756b2dfe6e378a06b033b670413757` - waiting room event ID as returned by [API](https://api.cloudflare.com/#waiting-room-list-events) ",
            "properties": {
                "createdOn": {
                    "type": "string"
                },
                "customPageHtml": {
                    "type": "string",
                    "description": "This a templated html file that will be rendered at the edge.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description to let users add more details about the waiting room event.\n"
                },
                "disableSessionRenewal": {
                    "type": "boolean",
                    "description": "Disables automatic renewal of session cookies. If not specified, the event will inherit it from the waiting room.\n"
                },
                "eventEndTime": {
                    "type": "string",
                    "description": "ISO 8601 timestamp that marks the end of the event.\n"
                },
                "eventStartTime": {
                    "type": "string",
                    "description": "ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. Must occur at least 1 minute before event_end_time.\n"
                },
                "modifiedOn": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify the event. Only alphanumeric characters, hyphens, and underscores are allowed.\n"
                },
                "newUsersPerMinute": {
                    "type": "integer",
                    "description": "The number of new users that will be let into the route every minute.\n"
                },
                "prequeueStartTime": {
                    "type": "string",
                    "description": "ISO 8601 timestamp that marks when to begin queueing all users before the event starts. Must occur at least 5 minutes before event_start_time.\n"
                },
                "queueingMethod": {
                    "type": "string",
                    "description": "The queueing method to be used by the waiting room during the event. If not specified, the event will inherit it from the waiting room.\n"
                },
                "sessionDuration": {
                    "type": "integer",
                    "description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. Default: 5\n"
                },
                "shuffleAtEventStart": {
                    "type": "boolean",
                    "description": "Users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. Default: false.\n"
                },
                "suspended": {
                    "type": "boolean",
                    "description": "If suspended, the traffic doesn't go to the waiting room. Default: false.\n"
                },
                "totalActiveUsers": {
                    "type": "integer",
                    "description": "The total number of active user sessions on the route at a point in time.\n"
                },
                "waitingRoomId": {
                    "type": "string",
                    "description": "The Waiting Room ID the event should apply to.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to apply to.\n"
                }
            },
            "required": [
                "createdOn",
                "eventEndTime",
                "eventStartTime",
                "modifiedOn",
                "name",
                "waitingRoomId",
                "zoneId"
            ],
            "inputProperties": {
                "customPageHtml": {
                    "type": "string",
                    "description": "This a templated html file that will be rendered at the edge.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description to let users add more details about the waiting room event.\n"
                },
                "disableSessionRenewal": {
                    "type": "boolean",
                    "description": "Disables automatic renewal of session cookies. If not specified, the event will inherit it from the waiting room.\n"
                },
                "eventEndTime": {
                    "type": "string",
                    "description": "ISO 8601 timestamp that marks the end of the event.\n",
                    "willReplaceOnChanges": true
                },
                "eventStartTime": {
                    "type": "string",
                    "description": "ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. Must occur at least 1 minute before event_end_time.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "A unique name to identify the event. Only alphanumeric characters, hyphens, and underscores are allowed.\n",
                    "willReplaceOnChanges": true
                },
                "newUsersPerMinute": {
                    "type": "integer",
                    "description": "The number of new users that will be let into the route every minute.\n"
                },
                "prequeueStartTime": {
                    "type": "string",
                    "description": "ISO 8601 timestamp that marks when to begin queueing all users before the event starts. Must occur at least 5 minutes before event_start_time.\n"
                },
                "queueingMethod": {
                    "type": "string",
                    "description": "The queueing method to be used by the waiting room during the event. If not specified, the event will inherit it from the waiting room.\n"
                },
                "sessionDuration": {
                    "type": "integer",
                    "description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. Default: 5\n"
                },
                "shuffleAtEventStart": {
                    "type": "boolean",
                    "description": "Users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. Default: false.\n"
                },
                "suspended": {
                    "type": "boolean",
                    "description": "If suspended, the traffic doesn't go to the waiting room. Default: false.\n"
                },
                "totalActiveUsers": {
                    "type": "integer",
                    "description": "The total number of active user sessions on the route at a point in time.\n"
                },
                "waitingRoomId": {
                    "type": "string",
                    "description": "The Waiting Room ID the event should apply to.\n",
                    "willReplaceOnChanges": true
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to apply to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "eventEndTime",
                "eventStartTime",
                "name",
                "waitingRoomId",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WaitingRoomEvent resources.\n",
                "properties": {
                    "createdOn": {
                        "type": "string"
                    },
                    "customPageHtml": {
                        "type": "string",
                        "description": "This a templated html file that will be rendered at the edge.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description to let users add more details about the waiting room event.\n"
                    },
                    "disableSessionRenewal": {
                        "type": "boolean",
                        "description": "Disables automatic renewal of session cookies. If not specified, the event will inherit it from the waiting room.\n"
                    },
                    "eventEndTime": {
                        "type": "string",
                        "description": "ISO 8601 timestamp that marks the end of the event.\n",
                        "willReplaceOnChanges": true
                    },
                    "eventStartTime": {
                        "type": "string",
                        "description": "ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. Must occur at least 1 minute before event_end_time.\n",
                        "willReplaceOnChanges": true
                    },
                    "modifiedOn": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name to identify the event. Only alphanumeric characters, hyphens, and underscores are allowed.\n",
                        "willReplaceOnChanges": true
                    },
                    "newUsersPerMinute": {
                        "type": "integer",
                        "description": "The number of new users that will be let into the route every minute.\n"
                    },
                    "prequeueStartTime": {
                        "type": "string",
                        "description": "ISO 8601 timestamp that marks when to begin queueing all users before the event starts. Must occur at least 5 minutes before event_start_time.\n"
                    },
                    "queueingMethod": {
                        "type": "string",
                        "description": "The queueing method to be used by the waiting room during the event. If not specified, the event will inherit it from the waiting room.\n"
                    },
                    "sessionDuration": {
                        "type": "integer",
                        "description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. Default: 5\n"
                    },
                    "shuffleAtEventStart": {
                        "type": "boolean",
                        "description": "Users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. Default: false.\n"
                    },
                    "suspended": {
                        "type": "boolean",
                        "description": "If suspended, the traffic doesn't go to the waiting room. Default: false.\n"
                    },
                    "totalActiveUsers": {
                        "type": "integer",
                        "description": "The total number of active user sessions on the route at a point in time.\n"
                    },
                    "waitingRoomId": {
                        "type": "string",
                        "description": "The Waiting Room ID the event should apply to.\n",
                        "willReplaceOnChanges": true
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID to apply to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/workerCronTrigger:WorkerCronTrigger": {
            "description": "Worker Cron Triggers allow users to map a cron expression to a Worker script\nusing a `ScheduledEvent` listener that enables Workers to be executed on a\nschedule. Worker Cron Triggers are ideal for running periodic jobs for\nmaintenance or calling third-party APIs to collect up-to-date data.\n\n\n## Import\n\nWorker Cron Triggers can be imported using the script name of the Worker they are targeting.\n\n```sh\n $ pulumi import cloudflare:index/workerCronTrigger:WorkerCronTrigger example my-script\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of cron expressions to execute the Worker Script\n"
                },
                "scriptName": {
                    "type": "string",
                    "description": "Worker script to target for the schedules\n"
                }
            },
            "required": [
                "accountId",
                "schedules",
                "scriptName"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of cron expressions to execute the Worker Script\n"
                },
                "scriptName": {
                    "type": "string",
                    "description": "Worker script to target for the schedules\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "schedules",
                "scriptName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkerCronTrigger resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of cron expressions to execute the Worker Script\n"
                    },
                    "scriptName": {
                        "type": "string",
                        "description": "Worker script to target for the schedules\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/workerRoute:WorkerRoute": {
            "description": "Provides a Cloudflare worker route resource. A route will also require a `cloudflare.WorkerScript`. *NOTE:*  This resource uses the Cloudflare account APIs. This requires setting the `CLOUDFLARE_ACCOUNT_ID` environment variable or `account_id` provider argument.\n\n\n## Import\n\nRecords can be imported using a composite ID formed of zone ID and route ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/workerRoute:WorkerRoute default d41d8cd98f00b204e9800998ecf8427e/9a7806061c88ada191ed06f989cc3dac\n```\n\n where* `d41d8cd98f00b204e9800998ecf8427e` - zone ID * `9a7806061c88ada191ed06f989cc3dac` - route ID as returned by [API](https://api.cloudflare.com/#worker-filters-list-filters) ",
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "The [route pattern](https://developers.cloudflare.com/workers/about/routes/)\n"
                },
                "scriptName": {
                    "type": "string",
                    "description": "Which worker script to run for requests that match the route pattern. If `script_name` is empty, workers will be skipped for matching requests.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to add the route to.\n"
                }
            },
            "required": [
                "pattern",
                "zoneId"
            ],
            "inputProperties": {
                "pattern": {
                    "type": "string",
                    "description": "The [route pattern](https://developers.cloudflare.com/workers/about/routes/)\n"
                },
                "scriptName": {
                    "type": "string",
                    "description": "Which worker script to run for requests that match the route pattern. If `script_name` is empty, workers will be skipped for matching requests.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone ID to add the route to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "pattern",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkerRoute resources.\n",
                "properties": {
                    "pattern": {
                        "type": "string",
                        "description": "The [route pattern](https://developers.cloudflare.com/workers/about/routes/)\n"
                    },
                    "scriptName": {
                        "type": "string",
                        "description": "Which worker script to run for requests that match the route pattern. If `script_name` is empty, workers will be skipped for matching requests.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID to add the route to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/workerScript:WorkerScript": {
            "description": "Provides a Cloudflare worker script resource. In order for a script to be active, you'll also need to setup a `cloudflare.WorkerRoute`. *NOTE:*  This resource uses the Cloudflare account APIs. This requires setting the `CLOUDFLARE_ACCOUNT_ID` environment variable or `account_id` provider argument.\n\n\n## Import\n\nTo import a script, use a script name, e.g. `script_name`\n\n```sh\n $ pulumi import cloudflare:index/workerScript:WorkerScript default script_name\n```\n\n where* `script_name` - the script name ",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The script content.\n"
                },
                "kvNamespaceBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/WorkerScriptKvNamespaceBinding:WorkerScriptKvNamespaceBinding"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The global variable for the binding in your Worker code.\n"
                },
                "plainTextBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/WorkerScriptPlainTextBinding:WorkerScriptPlainTextBinding"
                    }
                },
                "secretTextBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/WorkerScriptSecretTextBinding:WorkerScriptSecretTextBinding"
                    }
                },
                "webassemblyBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/WorkerScriptWebassemblyBinding:WorkerScriptWebassemblyBinding"
                    }
                }
            },
            "required": [
                "content",
                "name"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "The script content.\n"
                },
                "kvNamespaceBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/WorkerScriptKvNamespaceBinding:WorkerScriptKvNamespaceBinding"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The global variable for the binding in your Worker code.\n",
                    "willReplaceOnChanges": true
                },
                "plainTextBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/WorkerScriptPlainTextBinding:WorkerScriptPlainTextBinding"
                    }
                },
                "secretTextBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/WorkerScriptSecretTextBinding:WorkerScriptSecretTextBinding"
                    }
                },
                "webassemblyBindings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/WorkerScriptWebassemblyBinding:WorkerScriptWebassemblyBinding"
                    }
                }
            },
            "requiredInputs": [
                "content",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkerScript resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The script content.\n"
                    },
                    "kvNamespaceBindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/WorkerScriptKvNamespaceBinding:WorkerScriptKvNamespaceBinding"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The global variable for the binding in your Worker code.\n",
                        "willReplaceOnChanges": true
                    },
                    "plainTextBindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/WorkerScriptPlainTextBinding:WorkerScriptPlainTextBinding"
                        }
                    },
                    "secretTextBindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/WorkerScriptSecretTextBinding:WorkerScriptSecretTextBinding"
                        }
                    },
                    "webassemblyBindings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/WorkerScriptWebassemblyBinding:WorkerScriptWebassemblyBinding"
                        }
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/workersKv:WorkersKv": {
            "description": "Provides a Workers KV Pair.  *NOTE:*  This resource uses the Cloudflare account APIs.  This requires setting the `CLOUDFLARE_ACCOUNT_ID` environment variable or `account_id` provider argument.\n\n\n## Import\n\n\n\n```sh\n $ pulumi import cloudflare:index/workersKv:WorkersKv example beaeb6716c9443eaa4deef11763ccca6/test-key\n```\n\n where- `beaeb6716c9443eaa4deef11763ccca6` is the ID of the namespace and `test-key` is the key ",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The key name\n"
                },
                "namespaceId": {
                    "type": "string",
                    "description": "The ID of the Workers KV namespace in which you want to create the KV pair\n"
                },
                "value": {
                    "type": "string",
                    "description": "The string value to be stored in the key\n"
                }
            },
            "required": [
                "key",
                "namespaceId",
                "value"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "The key name\n"
                },
                "namespaceId": {
                    "type": "string",
                    "description": "The ID of the Workers KV namespace in which you want to create the KV pair\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "The string value to be stored in the key\n"
                }
            },
            "requiredInputs": [
                "key",
                "namespaceId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkersKv resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The key name\n"
                    },
                    "namespaceId": {
                        "type": "string",
                        "description": "The ID of the Workers KV namespace in which you want to create the KV pair\n",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The string value to be stored in the key\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/workersKvNamespace:WorkersKvNamespace": {
            "description": "Provides a Workers KV Namespace\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.WorkersKvNamespace(\"example\", {\n    title: \"test-namespace\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nWorkers KV Namespace settings can be imported using it's ID\n\n```sh\n $ pulumi import cloudflare:index/workersKvNamespace:WorkersKvNamespace example beaeb6716c9443eaa4deef11763ccca6\n```\n\n where- `beaeb6716c9443eaa4deef11763ccca6` is the ID of the namespace ",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The name of the namespace you wish to create.\n"
                }
            },
            "required": [
                "title"
            ],
            "inputProperties": {
                "title": {
                    "type": "string",
                    "description": "The name of the namespace you wish to create.\n"
                }
            },
            "requiredInputs": [
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkersKvNamespace resources.\n",
                "properties": {
                    "title": {
                        "type": "string",
                        "description": "The name of the namespace you wish to create.\n"
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/zone:Zone": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.Zone(\"example\", {\n    zone: \"example.com\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nZone resource can be imported using a zone ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/zone:Zone example d41d8cd98f00b204e9800998ecf8427e\n```\n\n where* `d41d8cd98f00b204e9800998ecf8427e` - zone ID, as returned from [API](https://api.cloudflare.com/#zone-list-zones) ",
            "properties": {
                "jumpStart": {
                    "type": "boolean",
                    "description": "Boolean of whether to scan for DNS records on creation. Ignored after zone is created. Default: false.\n"
                },
                "meta": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cloudflare-assigned name servers. This is only populated for zones that use Cloudflare DNS.\n"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Boolean of whether this zone is paused (traffic bypasses Cloudflare). Default: false.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "The name of the commercial plan to apply to the zone, can be updated once the zone is created; one of `free`, `pro`, `business`, `enterprise`, `partners_free`, `partners_pro`, `partners_business`, `partners_enterprise`, `partners_workers_ss`, `image_resizing_enterprise`.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the zone. Valid values: `active`, `pending`, `initializing`, `moved`, `deleted`, `deactivated`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup. Valid values: `full`, `partial`. Default is `full`.\n"
                },
                "vanityNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Vanity Nameservers (if set).\n* `meta.wildcard_proxiable` - Indicates whether wildcard DNS records can receive Cloudflare security and performance features.\n* `meta.phishing_detected` - Indicates if URLs on the zone have been identified as hosting phishing content.\n"
                },
                "verificationKey": {
                    "type": "string",
                    "description": "Contains the TXT record value to validate domain ownership. This is only populated for zones of type `partial`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The DNS zone name which will be added.\n",
                    "language": {
                        "csharp": {
                            "name": "ZoneName"
                        }
                    }
                }
            },
            "required": [
                "meta",
                "nameServers",
                "plan",
                "status",
                "vanityNameServers",
                "verificationKey",
                "zone"
            ],
            "inputProperties": {
                "jumpStart": {
                    "type": "boolean",
                    "description": "Boolean of whether to scan for DNS records on creation. Ignored after zone is created. Default: false.\n"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Boolean of whether this zone is paused (traffic bypasses Cloudflare). Default: false.\n"
                },
                "plan": {
                    "type": "string",
                    "description": "The name of the commercial plan to apply to the zone, can be updated once the zone is created; one of `free`, `pro`, `business`, `enterprise`, `partners_free`, `partners_pro`, `partners_business`, `partners_enterprise`, `partners_workers_ss`, `image_resizing_enterprise`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup. Valid values: `full`, `partial`. Default is `full`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The DNS zone name which will be added.\n",
                    "language": {
                        "csharp": {
                            "name": "ZoneName"
                        }
                    },
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "jumpStart": {
                        "type": "boolean",
                        "description": "Boolean of whether to scan for DNS records on creation. Ignored after zone is created. Default: false.\n"
                    },
                    "meta": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        }
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloudflare-assigned name servers. This is only populated for zones that use Cloudflare DNS.\n"
                    },
                    "paused": {
                        "type": "boolean",
                        "description": "Boolean of whether this zone is paused (traffic bypasses Cloudflare). Default: false.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "The name of the commercial plan to apply to the zone, can be updated once the zone is created; one of `free`, `pro`, `business`, `enterprise`, `partners_free`, `partners_pro`, `partners_business`, `partners_enterprise`, `partners_workers_ss`, `image_resizing_enterprise`.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the zone. Valid values: `active`, `pending`, `initializing`, `moved`, `deleted`, `deactivated`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup. Valid values: `full`, `partial`. Default is `full`.\n"
                    },
                    "vanityNameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Vanity Nameservers (if set).\n* `meta.wildcard_proxiable` - Indicates whether wildcard DNS records can receive Cloudflare security and performance features.\n* `meta.phishing_detected` - Indicates if URLs on the zone have been identified as hosting phishing content.\n"
                    },
                    "verificationKey": {
                        "type": "string",
                        "description": "Contains the TXT record value to validate domain ownership. This is only populated for zones of type `partial`.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The DNS zone name which will be added.\n",
                        "language": {
                            "csharp": {
                                "name": "ZoneName"
                            }
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/zoneCacheVariants:ZoneCacheVariants": {
            "description": "Provides a resource which customizes Cloudflare zone cache variants.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = new cloudflare.ZoneCacheVariants(\"example\", {\n    avifs: [\n        \"image/avif\",\n        \"image/webp\",\n    ],\n    bmps: [\n        \"image/bmp\",\n        \"image/webp\",\n    ],\n    gifs: [\n        \"image/gif\",\n        \"image/webp\",\n    ],\n    jp2s: [\n        \"image/jp2\",\n        \"image/webp\",\n    ],\n    jpegs: [\n        \"image/jpeg\",\n        \"image/webp\",\n    ],\n    jpgs: [\n        \"image/jpg\",\n        \"image/webp\",\n    ],\n    jpg2s: [\n        \"image/jpg2\",\n        \"image/webp\",\n    ],\n    pngs: [\n        \"image/png\",\n        \"image/webp\",\n    ],\n    tifs: [\n        \"image/tif\",\n        \"image/webp\",\n    ],\n    tiffs: [\n        \"image/tiff\",\n        \"image/webp\",\n    ],\n    webps: [\n        \"image/jpeg\",\n        \"image/webp\",\n    ],\n    zoneId: \"7df50664b7f90274f4d77cdfee701380\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "avifs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for avif\n"
                },
                "bmps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for bmp\n"
                },
                "gifs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for gif\n"
                },
                "jp2s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for jp2\n"
                },
                "jpegs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for jpeg\n"
                },
                "jpg2s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for jpg2\n"
                },
                "jpgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for jpg\n"
                },
                "pngs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for png\n"
                },
                "tiffs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for tiff\n"
                },
                "tifs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for tif\n"
                },
                "webps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for webp\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the DNS zone in which to apply the cache variants setting\n"
                }
            },
            "required": [
                "zoneId"
            ],
            "inputProperties": {
                "avifs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for avif\n"
                },
                "bmps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for bmp\n"
                },
                "gifs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for gif\n"
                },
                "jp2s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for jp2\n"
                },
                "jpegs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for jpeg\n"
                },
                "jpg2s": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for jpg2\n"
                },
                "jpgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for jpg\n"
                },
                "pngs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for png\n"
                },
                "tiffs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for tiff\n"
                },
                "tifs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for tif\n"
                },
                "webps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of strings with the MIME types of all the variants that should be served for webp\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The ID of the DNS zone in which to apply the cache variants setting\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneCacheVariants resources.\n",
                "properties": {
                    "avifs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for avif\n"
                    },
                    "bmps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for bmp\n"
                    },
                    "gifs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for gif\n"
                    },
                    "jp2s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for jp2\n"
                    },
                    "jpegs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for jpeg\n"
                    },
                    "jpg2s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for jpg2\n"
                    },
                    "jpgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for jpg\n"
                    },
                    "pngs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for png\n"
                    },
                    "tiffs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for tiff\n"
                    },
                    "tifs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for tif\n"
                    },
                    "webps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of strings with the MIME types of all the variants that should be served for webp\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The ID of the DNS zone in which to apply the cache variants setting\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/zoneDnssec:ZoneDnssec": {
            "description": "Provides a Cloudflare Zone DNSSEC resource.\n\n\n## Import\n\nZone DNSSEC resource can be imported using a zone ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/zoneDnssec:ZoneDnssec example d41d8cd98f00b204e9800998ecf8427e\n```\n\n where* `d41d8cd98f00b204e9800998ecf8427e` - zone ID, as returned from [API](https://api.cloudflare.com/#zone-list-zones) ",
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Zone DNSSEC algorithm.\n"
                },
                "digest": {
                    "type": "string",
                    "description": "Zone DNSSEC digest.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Digest algorithm use for Zone DNSSEC.\n"
                },
                "digestType": {
                    "type": "string",
                    "description": "Digest Type for Zone DNSSEC.\n"
                },
                "ds": {
                    "type": "string",
                    "description": "DS for the Zone DNSSEC.\n"
                },
                "flags": {
                    "type": "integer",
                    "description": "Zone DNSSEC flags.\n"
                },
                "keyTag": {
                    "type": "integer",
                    "description": "Key Tag for the Zone DNSSEC.\n"
                },
                "keyType": {
                    "type": "string",
                    "description": "Key type used for Zone DNSSEC.\n"
                },
                "modifiedOn": {
                    "type": "string",
                    "description": "Zone DNSSEC updated time.\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "Public Key for the Zone DNSSEC.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the Zone DNSSEC.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone id for the zone.\n"
                }
            },
            "required": [
                "algorithm",
                "digest",
                "digestAlgorithm",
                "digestType",
                "ds",
                "flags",
                "keyTag",
                "keyType",
                "modifiedOn",
                "publicKey",
                "status",
                "zoneId"
            ],
            "inputProperties": {
                "modifiedOn": {
                    "type": "string",
                    "description": "Zone DNSSEC updated time.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The zone id for the zone.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneDnssec resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "Zone DNSSEC algorithm.\n"
                    },
                    "digest": {
                        "type": "string",
                        "description": "Zone DNSSEC digest.\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Digest algorithm use for Zone DNSSEC.\n"
                    },
                    "digestType": {
                        "type": "string",
                        "description": "Digest Type for Zone DNSSEC.\n"
                    },
                    "ds": {
                        "type": "string",
                        "description": "DS for the Zone DNSSEC.\n"
                    },
                    "flags": {
                        "type": "integer",
                        "description": "Zone DNSSEC flags.\n"
                    },
                    "keyTag": {
                        "type": "integer",
                        "description": "Key Tag for the Zone DNSSEC.\n"
                    },
                    "keyType": {
                        "type": "string",
                        "description": "Key type used for Zone DNSSEC.\n"
                    },
                    "modifiedOn": {
                        "type": "string",
                        "description": "Zone DNSSEC updated time.\n"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "Public Key for the Zone DNSSEC.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Zone DNSSEC.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone id for the zone.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/zoneLockdown:ZoneLockdown": {
            "description": "Provides a Cloudflare Zone Lockdown resource. Zone Lockdown allows you to define one or more URLs (with wildcard matching on the domain or path) that will only permit access if the request originates from an IP address that matches a safelist of one or more IP addresses and/or IP ranges.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Restrict access to these endpoints to requests from a known IP address range.\nconst endpointLockdown = new cloudflare.ZoneLockdown(\"endpoint_lockdown\", {\n    configurations: [{\n        target: \"ip_range\",\n        value: \"198.51.100.0/16\",\n    }],\n    description: \"Restrict access to these endpoints to requests from a known IP address range\",\n    paused: false,\n    urls: [\"api.mysite.com/some/endpoint*\"],\n    zoneId: \"d41d8cd98f00b204e9800998ecf8427e\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nRecords can be imported using a composite ID formed of zone name and record ID, e.g.\n\n```sh\n $ pulumi import cloudflare:index/zoneLockdown:ZoneLockdown cloudflare_zone_lockdown d41d8cd98f00b204e9800998ecf8427e/37cb64fe4a90adb5ca3afc04f2c82a2f\n```\n\n where* `d41d8cd98f00b204e9800998ecf8427e` - zone ID * `37cb64fe4a90adb5ca3afc04f2c82a2f` - zone lockdown ID as returned by [API](https://api.cloudflare.com/#zone-lockdown-list-lockdown-rules) ",
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/ZoneLockdownConfiguration:ZoneLockdownConfiguration"
                    },
                    "description": "A list of IP addresses or IP ranges to match the request against specified in target, value pairs.  It's a complex value. See description below.   The order of the configuration entries is unimportant.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.\n"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Boolean of whether this zone lockdown is currently paused. Default: false.\n"
                },
                "priority": {
                    "type": "integer"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to which the access rule should be added.\n"
                }
            },
            "required": [
                "configurations",
                "urls",
                "zoneId"
            ],
            "inputProperties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/ZoneLockdownConfiguration:ZoneLockdownConfiguration"
                    },
                    "description": "A list of IP addresses or IP ranges to match the request against specified in target, value pairs.  It's a complex value. See description below.   The order of the configuration entries is unimportant.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.\n"
                },
                "paused": {
                    "type": "boolean",
                    "description": "Boolean of whether this zone lockdown is currently paused. Default: false.\n"
                },
                "priority": {
                    "type": "integer"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to which the access rule should be added.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "configurations",
                "urls",
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneLockdown resources.\n",
                "properties": {
                    "configurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/ZoneLockdownConfiguration:ZoneLockdownConfiguration"
                        },
                        "description": "A list of IP addresses or IP ranges to match the request against specified in target, value pairs.  It's a complex value. See description below.   The order of the configuration entries is unimportant.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.\n"
                    },
                    "paused": {
                        "type": "boolean",
                        "description": "Boolean of whether this zone lockdown is currently paused. Default: false.\n"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to which the access rule should be added.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "cloudflare:index/zoneSettingsOverride:ZoneSettingsOverride": {
            "description": "Provides a resource which customizes Cloudflare zone settings. Note that after destroying this resource Zone Settings will be reset to their initial values.\n",
            "properties": {
                "initialSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideInitialSetting:ZoneSettingsOverrideInitialSetting"
                    },
                    "description": "Settings present in the zone at the time the resource is created. This will be used to restore the original settings when this resource is destroyed. Shares the same schema as the `settings` attribute (Above).\n"
                },
                "initialSettingsReadAt": {
                    "type": "string",
                    "description": "Time when this resource was created and the `initial_settings` were set.\n"
                },
                "readonlySettings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Which of the current `settings` are not able to be set by the user. Which settings these are is determined by plan level and user permissions.\n* `zone_status`. A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup.\n* `zone_type`. Status of the zone. Valid values: active, pending, initializing, moved, deleted, deactivated.\n"
                },
                "settings": {
                    "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideSettings:ZoneSettingsOverrideSettings",
                    "description": "Settings overrides that will be applied to the zone. If a setting is not specified the existing setting will be used. For a full list of available settings see below.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to which apply settings.\n"
                },
                "zoneStatus": {
                    "type": "string"
                },
                "zoneType": {
                    "type": "string"
                }
            },
            "required": [
                "initialSettings",
                "initialSettingsReadAt",
                "readonlySettings",
                "settings",
                "zoneId",
                "zoneStatus",
                "zoneType"
            ],
            "inputProperties": {
                "settings": {
                    "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideSettings:ZoneSettingsOverrideSettings",
                    "description": "Settings overrides that will be applied to the zone. If a setting is not specified the existing setting will be used. For a full list of available settings see below.\n"
                },
                "zoneId": {
                    "type": "string",
                    "description": "The DNS zone ID to which apply settings.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "zoneId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneSettingsOverride resources.\n",
                "properties": {
                    "initialSettings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideInitialSetting:ZoneSettingsOverrideInitialSetting"
                        },
                        "description": "Settings present in the zone at the time the resource is created. This will be used to restore the original settings when this resource is destroyed. Shares the same schema as the `settings` attribute (Above).\n"
                    },
                    "initialSettingsReadAt": {
                        "type": "string",
                        "description": "Time when this resource was created and the `initial_settings` were set.\n"
                    },
                    "readonlySettings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Which of the current `settings` are not able to be set by the user. Which settings these are is determined by plan level and user permissions.\n* `zone_status`. A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup.\n* `zone_type`. Status of the zone. Valid values: active, pending, initializing, moved, deleted, deactivated.\n"
                    },
                    "settings": {
                        "$ref": "#/types/cloudflare:index/ZoneSettingsOverrideSettings:ZoneSettingsOverrideSettings",
                        "description": "Settings overrides that will be applied to the zone. If a setting is not specified the existing setting will be used. For a full list of available settings see below.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The DNS zone ID to which apply settings.\n",
                        "willReplaceOnChanges": true
                    },
                    "zoneStatus": {
                        "type": "string"
                    },
                    "zoneType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "cloudflare:index/getAccessIdentityProvider:getAccessIdentityProvider": {
            "description": "Use this data source to lookup a single [Access Identity Provider][access_identity_provider_guide] by name.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccessIdentityProvider.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account for which to look for an Access Identity Provider. Conflicts with `zone_id`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access Identity Provider name to search for.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The Zone's ID. Conflicts with `account_id`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccessIdentityProvider.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Access Identity Provider Name\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Access Identity Provider Type\n"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type",
                    "id"
                ]
            }
        },
        "cloudflare:index/getAccountRoles:getAccountRoles": {
            "description": "Use this data source to lookup [Account Roles](https://api.cloudflare.com/#account-roles-properties).\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccountRoles.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account for which to list the roles.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccountRoles.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/getAccountRolesRole:getAccountRolesRole"
                        },
                        "description": "A list of roles object. See below for nested attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "roles",
                    "id"
                ]
            }
        },
        "cloudflare:index/getApiTokenPermissionGroups:getApiTokenPermissionGroups": {
            "description": "Use this data source to look up [API Token Permission Groups](https://developers.cloudflare.com/api/tokens/create/permissions). Commonly used as references within [`cloudflare.ApiToken`](https://www.terraform.io/docs/providers/cloudflare/r/api_token.html) resources.\n",
            "outputs": {
                "description": "A collection of values returned by getApiTokenPermissionGroups.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "A map of permission groups where keys are human-readable permission names\nand values are permission IDs.\n"
                    }
                },
                "type": "object",
                "required": [
                    "permissions",
                    "id"
                ]
            }
        },
        "cloudflare:index/getDevices:getDevices": {
            "description": "Use this data source to lookup [Devices](https://api.cloudflare.com/#devices-list-devices).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst devices = pulumi.output(cloudflare.getDevices({\n    accountId: \"c68973221045fe805dfb9aa520153148\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDevices.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account for which to list the devices.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDevices.\n",
                "properties": {
                    "accountId": {
                        "type": "string"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/getDevicesDevice:getDevicesDevice"
                        },
                        "description": "A list of device object. See below for nested attributes.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "devices",
                    "id"
                ]
            }
        },
        "cloudflare:index/getIpRanges:getIpRanges": {
            "description": "Use this data source to get the [IP ranges](https://www.cloudflare.com/ips/) of Cloudflare edge nodes.\n",
            "outputs": {
                "description": "A collection of values returned by getIpRanges.\n",
                "properties": {
                    "chinaIpv4CidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of only the IPv4 China CIDR blocks.\n"
                    },
                    "chinaIpv6CidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of only the IPv6 China CIDR blocks.\n"
                    },
                    "cidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of all non-China CIDR blocks.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipv4CidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of only the IPv4 CIDR blocks.\n"
                    },
                    "ipv6CidrBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The lexically ordered list of only the IPv6 CIDR blocks.\n"
                    }
                },
                "type": "object",
                "required": [
                    "chinaIpv4CidrBlocks",
                    "chinaIpv6CidrBlocks",
                    "cidrBlocks",
                    "ipv4CidrBlocks",
                    "ipv6CidrBlocks",
                    "id"
                ]
            }
        },
        "cloudflare:index/getOriginCaRootCertificate:getOriginCaRootCertificate": {
            "description": "Use this data source to get the [Origin CA root certificate](https://developers.cloudflare.com/ssl/origin-configuration/origin-ca#4-required-for-some-add-cloudflare-origin-ca-root-certificates) for a given algorithm.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst originCa = pulumi.output(cloudflare.getOriginCaRootCertificate({\n    algorithm: \"\u003calgorithm\u003e\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getOriginCaRootCertificate.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "The name of the algorithm used when creating an Origin CA certificate. Currently-supported values are \"rsa\" and \"ecc\" (case-insensitive).\n"
                    }
                },
                "type": "object",
                "required": [
                    "algorithm"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOriginCaRootCertificate.\n",
                "properties": {
                    "algorithm": {
                        "type": "string"
                    },
                    "certPem": {
                        "type": "string",
                        "description": "The Origin CA root certificate in PEM format.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "algorithm",
                    "certPem",
                    "id"
                ]
            }
        },
        "cloudflare:index/getWafGroups:getWafGroups": {
            "description": "Use this data source to look up [WAF Rule Groups](https://api.cloudflare.com/#waf-rule-groups-properties).\n",
            "inputs": {
                "description": "A collection of arguments for invoking getWafGroups.\n",
                "properties": {
                    "filter": {
                        "$ref": "#/types/cloudflare:index/getWafGroupsFilter:getWafGroupsFilter",
                        "description": "One or more values used to look up WAF Rule Groups. If more than one value is given all\nvalues must match in order to be included, see below for full list.\n"
                    },
                    "packageId": {
                        "type": "string",
                        "description": "The ID of the WAF Rule Package in which to search for the WAF Rule Groups.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The ID of the DNS zone in which to search for the WAF Rule Groups.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zoneId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWafGroups.\n",
                "properties": {
                    "filter": {
                        "$ref": "#/types/cloudflare:index/getWafGroupsFilter:getWafGroupsFilter"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/getWafGroupsGroup:getWafGroupsGroup"
                        },
                        "description": "A map of WAF Rule Groups details. Full list below:\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "packageId": {
                        "type": "string",
                        "description": "The ID of the WAF Rule Package that contains the WAF Rule Group\n"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "zoneId",
                    "id"
                ]
            }
        },
        "cloudflare:index/getWafPackages:getWafPackages": {
            "description": "Use this data source to look up [WAF Rule Packages](https://api.cloudflare.com/#waf-rule-packages-properties).\n",
            "inputs": {
                "description": "A collection of arguments for invoking getWafPackages.\n",
                "properties": {
                    "filter": {
                        "$ref": "#/types/cloudflare:index/getWafPackagesFilter:getWafPackagesFilter",
                        "description": "One or more values used to look up WAF Rule Packages. If more than one value is given all\nvalues must match in order to be included, see below for full list.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The ID of the DNS zone in which to search for the WAF Rule Packages.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zoneId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWafPackages.\n",
                "properties": {
                    "filter": {
                        "$ref": "#/types/cloudflare:index/getWafPackagesFilter:getWafPackagesFilter"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/getWafPackagesPackage:getWafPackagesPackage"
                        },
                        "description": "A map of WAF Rule Packages details. Full list below:\n"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "packages",
                    "zoneId",
                    "id"
                ]
            }
        },
        "cloudflare:index/getWafRules:getWafRules": {
            "description": "Use this data source to look up [WAF Rules](https://api.cloudflare.com/#waf-rule-groups-properties).\n",
            "inputs": {
                "description": "A collection of arguments for invoking getWafRules.\n",
                "properties": {
                    "filter": {
                        "$ref": "#/types/cloudflare:index/getWafRulesFilter:getWafRulesFilter",
                        "description": "One or more values used to look up WAF Rules. If more than one value is given all\nvalues must match in order to be included, see below for full list.\n"
                    },
                    "packageId": {
                        "type": "string",
                        "description": "The ID of the WAF Rule Package in which to search for the WAF Rules.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The ID of the DNS zone in which to search for the WAF Rules.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zoneId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getWafRules.\n",
                "properties": {
                    "filter": {
                        "$ref": "#/types/cloudflare:index/getWafRulesFilter:getWafRulesFilter"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "packageId": {
                        "type": "string",
                        "description": "The ID of the WAF Rule Package that contains the WAF Rule\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/getWafRulesRule:getWafRulesRule"
                        },
                        "description": "A map of WAF Rules details. Full list below:\n"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "rules",
                    "zoneId",
                    "id"
                ]
            }
        },
        "cloudflare:index/getZone:getZone": {
            "description": "Use this data source to look up [zone] info. This is the singular alternative\nto `cloudflare.getZones`.\n\n\u003e **Note** Cloudflare zone names **are not unique**. It is possible for multiple\n  accounts to have the same zone created but in different states. If you are\n  using this setup, it is advised to use the `account_id` attribute on this\n  resource or swap to `cloudflare.getZones` to further filter the results.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// You can also lookup by zone_id if you prefer.\nconst example = pulumi.output(cloudflare.getZone({\n    zoneId: \"0b6d347b01d437a092be84c2edfce72c\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getZone.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account ID associated with the zone.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the zone. Conflicts with `\"zone_id\"`.\n"
                    },
                    "zoneId": {
                        "type": "string",
                        "description": "The zone ID. Conflicts with `\"name\"`.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getZone.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "The account ID associated with the zone.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the zone.\n"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cloudflare assigned name servers. This is only populated for zones that use Cloudflare DNS.\n"
                    },
                    "paused": {
                        "type": "boolean",
                        "description": "`true` if cloudflare is enabled on the zone, otherwise `false`.\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "The name of the plan associated with the zone.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the zone. Values can be: `\"active\"`, `\"pending\"`, `\"initializing\"`, `\"moved\"`, `\"deleted\"`,\nor `\"deactivated\"`.\n"
                    },
                    "vanityNameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Vanity Nameservers (if set).\n"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accountId",
                    "name",
                    "nameServers",
                    "paused",
                    "plan",
                    "status",
                    "vanityNameServers",
                    "zoneId",
                    "id"
                ]
            }
        },
        "cloudflare:index/getZoneDnssec:getZoneDnssec": {
            "description": "Use this data source to look up [Zone][1] DNSSEC settings.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\nconst example = pulumi.output(cloudflare.getZoneDnssec({\n    zoneId: \"\u003czone_id\u003e\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getZoneDnssec.\n",
                "properties": {
                    "zoneId": {
                        "type": "string",
                        "description": "The zone id for the zone.\n"
                    }
                },
                "type": "object",
                "required": [
                    "zoneId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZoneDnssec.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "Zone DNSSEC algorithm.\n"
                    },
                    "digest": {
                        "type": "string",
                        "description": "Zone DNSSEC digest.\n"
                    },
                    "digestAlgorithm": {
                        "type": "string",
                        "description": "Digest algorithm use for Zone DNSSEC.\n"
                    },
                    "digestType": {
                        "type": "string",
                        "description": "Digest Type for Zone DNSSEC.\n"
                    },
                    "ds": {
                        "type": "string",
                        "description": "DS for the Zone DNSSEC.\n"
                    },
                    "flags": {
                        "type": "integer",
                        "description": "Zone DNSSEC flags.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keyTag": {
                        "type": "integer",
                        "description": "Key Tag for the Zone DNSSEC.\n"
                    },
                    "keyType": {
                        "type": "string",
                        "description": "Key type used for Zone DNSSEC.\n"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "Public Key for the Zone DNSSEC.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the Zone DNSSEC.\n"
                    },
                    "zoneId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "algorithm",
                    "digest",
                    "digestAlgorithm",
                    "digestType",
                    "ds",
                    "flags",
                    "keyTag",
                    "keyType",
                    "publicKey",
                    "status",
                    "zoneId",
                    "id"
                ]
            }
        },
        "cloudflare:index/getZones:getZones": {
            "description": "Use this data source to look up [Zone](https://api.cloudflare.com/#zone-properties) records.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nGiven you have the following zones in Cloudflare.\n\n- example.com\n- example.net\n- not-example.com\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Look for a single zone that you know exists using an exact match.\n// API request will be for zones?name=example.com. Will not match not-example.com\n// or example.net.\nconst example = pulumi.output(cloudflare.getZones({\n    filter: {\n        name: \"example.com\",\n    },\n}));\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Look for all zones which include \"example\".\n// API request will be for zones?name=contains:example. Will return all three\n// zones.\nconst example = pulumi.output(cloudflare.getZones({\n    filter: {\n        lookupType: \"contains\",\n        name: \"example\",\n    },\n}));\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Look for all zones which include \"example\" but start with \"not-\".\n// API request will be for zones?name=contains:example. Will perform client side\n// filtering using the provided regex and will only match the single zone,\n// not-example.com.\nconst example = pulumi.output(cloudflare.getZones({\n    filter: {\n        lookupType: \"contains\",\n        match: \"^not-\",\n        name: \"example\",\n    },\n}));\n```\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as cloudflare from \"@pulumi/cloudflare\";\n\n// Look for all active zones in an account\nconst example = pulumi.output(cloudflare.getZones({\n    filter: {\n        accountId: \"1d5fdc9e88c8a8c4518b068cd94331fe\",\n        status: \"active\",\n    },\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getZones.\n",
                "properties": {
                    "filter": {
                        "$ref": "#/types/cloudflare:index/getZonesFilter:getZonesFilter",
                        "description": "One or more values used to look up zone records. If more than one value is given all\nvalues must match in order to be included, see below for full list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZones.\n",
                "properties": {
                    "filter": {
                        "$ref": "#/types/cloudflare:index/getZonesFilter:getZonesFilter"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/cloudflare:index/getZonesZone:getZonesZone"
                        },
                        "description": "A list of zone objects. Object format:\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter",
                    "zones",
                    "id"
                ]
            }
        }
    }
}