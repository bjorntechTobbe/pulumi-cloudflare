// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersAutominifyArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersBrowserTtlArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersCacheKeyArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersEdgeTtlArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersFromListArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersFromValueArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersHeaderArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersMatchedDataArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersOriginArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersOverrideArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersResponseArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersServeStaleArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersSniArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParametersUriArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class RulesetRuleActionParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetRuleActionParametersArgs Empty = new RulesetRuleActionParametersArgs();

    @Import(name="automaticHttpsRewrites", required=true)
    private Output<Boolean> automaticHttpsRewrites;

    public Output<Boolean> automaticHttpsRewrites() {
        return this.automaticHttpsRewrites;
    }

    @Import(name="autominifies", required=true)
    private Output<List<RulesetRuleActionParametersAutominifyArgs>> autominifies;

    public Output<List<RulesetRuleActionParametersAutominifyArgs>> autominifies() {
        return this.autominifies;
    }

    @Import(name="bic", required=true)
    private Output<Boolean> bic;

    public Output<Boolean> bic() {
        return this.bic;
    }

    @Import(name="browserTtls", required=true)
    private Output<List<RulesetRuleActionParametersBrowserTtlArgs>> browserTtls;

    public Output<List<RulesetRuleActionParametersBrowserTtlArgs>> browserTtls() {
        return this.browserTtls;
    }

    @Import(name="cache", required=true)
    private Output<Boolean> cache;

    public Output<Boolean> cache() {
        return this.cache;
    }

    @Import(name="cacheKey", required=true)
    private Output<RulesetRuleActionParametersCacheKeyArgs> cacheKey;

    public Output<RulesetRuleActionParametersCacheKeyArgs> cacheKey() {
        return this.cacheKey;
    }

    @Import(name="content", required=true)
    private Output<String> content;

    public Output<String> content() {
        return this.content;
    }

    @Import(name="contentType", required=true)
    private Output<String> contentType;

    public Output<String> contentType() {
        return this.contentType;
    }

    @Import(name="cookieFields", required=true)
    private Output<List<String>> cookieFields;

    public Output<List<String>> cookieFields() {
        return this.cookieFields;
    }

    @Import(name="disableApps", required=true)
    private Output<Boolean> disableApps;

    public Output<Boolean> disableApps() {
        return this.disableApps;
    }

    @Import(name="disableRailgun", required=true)
    private Output<Boolean> disableRailgun;

    public Output<Boolean> disableRailgun() {
        return this.disableRailgun;
    }

    @Import(name="disableZaraz", required=true)
    private Output<Boolean> disableZaraz;

    public Output<Boolean> disableZaraz() {
        return this.disableZaraz;
    }

    @Import(name="edgeTtl", required=true)
    private Output<RulesetRuleActionParametersEdgeTtlArgs> edgeTtl;

    public Output<RulesetRuleActionParametersEdgeTtlArgs> edgeTtl() {
        return this.edgeTtl;
    }

    @Import(name="emailObfuscation", required=true)
    private Output<Boolean> emailObfuscation;

    public Output<Boolean> emailObfuscation() {
        return this.emailObfuscation;
    }

    @Import(name="fromList", required=true)
    private Output<RulesetRuleActionParametersFromListArgs> fromList;

    public Output<RulesetRuleActionParametersFromListArgs> fromList() {
        return this.fromList;
    }

    @Import(name="fromValues", required=true)
    private Output<List<RulesetRuleActionParametersFromValueArgs>> fromValues;

    public Output<List<RulesetRuleActionParametersFromValueArgs>> fromValues() {
        return this.fromValues;
    }

    @Import(name="headers", required=true)
    private Output<List<RulesetRuleActionParametersHeaderArgs>> headers;

    public Output<List<RulesetRuleActionParametersHeaderArgs>> headers() {
        return this.headers;
    }

    @Import(name="hostHeader", required=true)
    private Output<String> hostHeader;

    public Output<String> hostHeader() {
        return this.hostHeader;
    }

    @Import(name="hotlinkProtection", required=true)
    private Output<Boolean> hotlinkProtection;

    public Output<Boolean> hotlinkProtection() {
        return this.hotlinkProtection;
    }

    /**
     * The identifier of this resource.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The identifier of this resource.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    @Import(name="increment", required=true)
    private Output<Integer> increment;

    public Output<Integer> increment() {
        return this.increment;
    }

    @Import(name="matchedData", required=true)
    private Output<RulesetRuleActionParametersMatchedDataArgs> matchedData;

    public Output<RulesetRuleActionParametersMatchedDataArgs> matchedData() {
        return this.matchedData;
    }

    @Import(name="mirage", required=true)
    private Output<Boolean> mirage;

    public Output<Boolean> mirage() {
        return this.mirage;
    }

    @Import(name="opportunisticEncryption", required=true)
    private Output<Boolean> opportunisticEncryption;

    public Output<Boolean> opportunisticEncryption() {
        return this.opportunisticEncryption;
    }

    @Import(name="originErrorPagePassthru", required=true)
    private Output<Boolean> originErrorPagePassthru;

    public Output<Boolean> originErrorPagePassthru() {
        return this.originErrorPagePassthru;
    }

    @Import(name="origins", required=true)
    private Output<List<RulesetRuleActionParametersOriginArgs>> origins;

    public Output<List<RulesetRuleActionParametersOriginArgs>> origins() {
        return this.origins;
    }

    @Import(name="overrides", required=true)
    private Output<List<RulesetRuleActionParametersOverrideArgs>> overrides;

    public Output<List<RulesetRuleActionParametersOverrideArgs>> overrides() {
        return this.overrides;
    }

    @Import(name="phases", required=true)
    private Output<List<String>> phases;

    public Output<List<String>> phases() {
        return this.phases;
    }

    @Import(name="polish", required=true)
    private Output<String> polish;

    public Output<String> polish() {
        return this.polish;
    }

    @Import(name="products", required=true)
    private Output<List<String>> products;

    public Output<List<String>> products() {
        return this.products;
    }

    @Import(name="requestFields", required=true)
    private Output<List<String>> requestFields;

    public Output<List<String>> requestFields() {
        return this.requestFields;
    }

    @Import(name="respectStrongEtags", required=true)
    private Output<Boolean> respectStrongEtags;

    public Output<Boolean> respectStrongEtags() {
        return this.respectStrongEtags;
    }

    @Import(name="responseFields", required=true)
    private Output<List<String>> responseFields;

    public Output<List<String>> responseFields() {
        return this.responseFields;
    }

    @Import(name="responses", required=true)
    private Output<List<RulesetRuleActionParametersResponseArgs>> responses;

    public Output<List<RulesetRuleActionParametersResponseArgs>> responses() {
        return this.responses;
    }

    @Import(name="rocketLoader", required=true)
    private Output<Boolean> rocketLoader;

    public Output<Boolean> rocketLoader() {
        return this.rocketLoader;
    }

    /**
     * List of rules to apply to the ruleset.
     * 
     */
    @Import(name="rules", required=true)
    private Output<Map<String,String>> rules;

    /**
     * @return List of rules to apply to the ruleset.
     * 
     */
    public Output<Map<String,String>> rules() {
        return this.rules;
    }

    @Import(name="ruleset", required=true)
    private Output<String> ruleset;

    public Output<String> ruleset() {
        return this.ruleset;
    }

    @Import(name="rulesets", required=true)
    private Output<List<String>> rulesets;

    public Output<List<String>> rulesets() {
        return this.rulesets;
    }

    @Import(name="securityLevel", required=true)
    private Output<String> securityLevel;

    public Output<String> securityLevel() {
        return this.securityLevel;
    }

    @Import(name="serveStale", required=true)
    private Output<RulesetRuleActionParametersServeStaleArgs> serveStale;

    public Output<RulesetRuleActionParametersServeStaleArgs> serveStale() {
        return this.serveStale;
    }

    @Import(name="serverSideExcludes", required=true)
    private Output<Boolean> serverSideExcludes;

    public Output<Boolean> serverSideExcludes() {
        return this.serverSideExcludes;
    }

    @Import(name="sni", required=true)
    private Output<RulesetRuleActionParametersSniArgs> sni;

    public Output<RulesetRuleActionParametersSniArgs> sni() {
        return this.sni;
    }

    @Import(name="ssl", required=true)
    private Output<String> ssl;

    public Output<String> ssl() {
        return this.ssl;
    }

    @Import(name="statusCode", required=true)
    private Output<Integer> statusCode;

    public Output<Integer> statusCode() {
        return this.statusCode;
    }

    @Import(name="sxg", required=true)
    private Output<Boolean> sxg;

    public Output<Boolean> sxg() {
        return this.sxg;
    }

    @Import(name="uri", required=true)
    private Output<RulesetRuleActionParametersUriArgs> uri;

    public Output<RulesetRuleActionParametersUriArgs> uri() {
        return this.uri;
    }

    @Import(name="version", required=true)
    private Output<String> version;

    public Output<String> version() {
        return this.version;
    }

    private RulesetRuleActionParametersArgs() {}

    private RulesetRuleActionParametersArgs(RulesetRuleActionParametersArgs $) {
        this.automaticHttpsRewrites = $.automaticHttpsRewrites;
        this.autominifies = $.autominifies;
        this.bic = $.bic;
        this.browserTtls = $.browserTtls;
        this.cache = $.cache;
        this.cacheKey = $.cacheKey;
        this.content = $.content;
        this.contentType = $.contentType;
        this.cookieFields = $.cookieFields;
        this.disableApps = $.disableApps;
        this.disableRailgun = $.disableRailgun;
        this.disableZaraz = $.disableZaraz;
        this.edgeTtl = $.edgeTtl;
        this.emailObfuscation = $.emailObfuscation;
        this.fromList = $.fromList;
        this.fromValues = $.fromValues;
        this.headers = $.headers;
        this.hostHeader = $.hostHeader;
        this.hotlinkProtection = $.hotlinkProtection;
        this.id = $.id;
        this.increment = $.increment;
        this.matchedData = $.matchedData;
        this.mirage = $.mirage;
        this.opportunisticEncryption = $.opportunisticEncryption;
        this.originErrorPagePassthru = $.originErrorPagePassthru;
        this.origins = $.origins;
        this.overrides = $.overrides;
        this.phases = $.phases;
        this.polish = $.polish;
        this.products = $.products;
        this.requestFields = $.requestFields;
        this.respectStrongEtags = $.respectStrongEtags;
        this.responseFields = $.responseFields;
        this.responses = $.responses;
        this.rocketLoader = $.rocketLoader;
        this.rules = $.rules;
        this.ruleset = $.ruleset;
        this.rulesets = $.rulesets;
        this.securityLevel = $.securityLevel;
        this.serveStale = $.serveStale;
        this.serverSideExcludes = $.serverSideExcludes;
        this.sni = $.sni;
        this.ssl = $.ssl;
        this.statusCode = $.statusCode;
        this.sxg = $.sxg;
        this.uri = $.uri;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetRuleActionParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetRuleActionParametersArgs $;

        public Builder() {
            $ = new RulesetRuleActionParametersArgs();
        }

        public Builder(RulesetRuleActionParametersArgs defaults) {
            $ = new RulesetRuleActionParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder automaticHttpsRewrites(Output<Boolean> automaticHttpsRewrites) {
            $.automaticHttpsRewrites = automaticHttpsRewrites;
            return this;
        }

        public Builder automaticHttpsRewrites(Boolean automaticHttpsRewrites) {
            return automaticHttpsRewrites(Output.of(automaticHttpsRewrites));
        }

        public Builder autominifies(Output<List<RulesetRuleActionParametersAutominifyArgs>> autominifies) {
            $.autominifies = autominifies;
            return this;
        }

        public Builder autominifies(List<RulesetRuleActionParametersAutominifyArgs> autominifies) {
            return autominifies(Output.of(autominifies));
        }

        public Builder autominifies(RulesetRuleActionParametersAutominifyArgs... autominifies) {
            return autominifies(List.of(autominifies));
        }

        public Builder bic(Output<Boolean> bic) {
            $.bic = bic;
            return this;
        }

        public Builder bic(Boolean bic) {
            return bic(Output.of(bic));
        }

        public Builder browserTtls(Output<List<RulesetRuleActionParametersBrowserTtlArgs>> browserTtls) {
            $.browserTtls = browserTtls;
            return this;
        }

        public Builder browserTtls(List<RulesetRuleActionParametersBrowserTtlArgs> browserTtls) {
            return browserTtls(Output.of(browserTtls));
        }

        public Builder browserTtls(RulesetRuleActionParametersBrowserTtlArgs... browserTtls) {
            return browserTtls(List.of(browserTtls));
        }

        public Builder cache(Output<Boolean> cache) {
            $.cache = cache;
            return this;
        }

        public Builder cache(Boolean cache) {
            return cache(Output.of(cache));
        }

        public Builder cacheKey(Output<RulesetRuleActionParametersCacheKeyArgs> cacheKey) {
            $.cacheKey = cacheKey;
            return this;
        }

        public Builder cacheKey(RulesetRuleActionParametersCacheKeyArgs cacheKey) {
            return cacheKey(Output.of(cacheKey));
        }

        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        public Builder content(String content) {
            return content(Output.of(content));
        }

        public Builder contentType(Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        public Builder cookieFields(Output<List<String>> cookieFields) {
            $.cookieFields = cookieFields;
            return this;
        }

        public Builder cookieFields(List<String> cookieFields) {
            return cookieFields(Output.of(cookieFields));
        }

        public Builder cookieFields(String... cookieFields) {
            return cookieFields(List.of(cookieFields));
        }

        public Builder disableApps(Output<Boolean> disableApps) {
            $.disableApps = disableApps;
            return this;
        }

        public Builder disableApps(Boolean disableApps) {
            return disableApps(Output.of(disableApps));
        }

        public Builder disableRailgun(Output<Boolean> disableRailgun) {
            $.disableRailgun = disableRailgun;
            return this;
        }

        public Builder disableRailgun(Boolean disableRailgun) {
            return disableRailgun(Output.of(disableRailgun));
        }

        public Builder disableZaraz(Output<Boolean> disableZaraz) {
            $.disableZaraz = disableZaraz;
            return this;
        }

        public Builder disableZaraz(Boolean disableZaraz) {
            return disableZaraz(Output.of(disableZaraz));
        }

        public Builder edgeTtl(Output<RulesetRuleActionParametersEdgeTtlArgs> edgeTtl) {
            $.edgeTtl = edgeTtl;
            return this;
        }

        public Builder edgeTtl(RulesetRuleActionParametersEdgeTtlArgs edgeTtl) {
            return edgeTtl(Output.of(edgeTtl));
        }

        public Builder emailObfuscation(Output<Boolean> emailObfuscation) {
            $.emailObfuscation = emailObfuscation;
            return this;
        }

        public Builder emailObfuscation(Boolean emailObfuscation) {
            return emailObfuscation(Output.of(emailObfuscation));
        }

        public Builder fromList(Output<RulesetRuleActionParametersFromListArgs> fromList) {
            $.fromList = fromList;
            return this;
        }

        public Builder fromList(RulesetRuleActionParametersFromListArgs fromList) {
            return fromList(Output.of(fromList));
        }

        public Builder fromValues(Output<List<RulesetRuleActionParametersFromValueArgs>> fromValues) {
            $.fromValues = fromValues;
            return this;
        }

        public Builder fromValues(List<RulesetRuleActionParametersFromValueArgs> fromValues) {
            return fromValues(Output.of(fromValues));
        }

        public Builder fromValues(RulesetRuleActionParametersFromValueArgs... fromValues) {
            return fromValues(List.of(fromValues));
        }

        public Builder headers(Output<List<RulesetRuleActionParametersHeaderArgs>> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(List<RulesetRuleActionParametersHeaderArgs> headers) {
            return headers(Output.of(headers));
        }

        public Builder headers(RulesetRuleActionParametersHeaderArgs... headers) {
            return headers(List.of(headers));
        }

        public Builder hostHeader(Output<String> hostHeader) {
            $.hostHeader = hostHeader;
            return this;
        }

        public Builder hostHeader(String hostHeader) {
            return hostHeader(Output.of(hostHeader));
        }

        public Builder hotlinkProtection(Output<Boolean> hotlinkProtection) {
            $.hotlinkProtection = hotlinkProtection;
            return this;
        }

        public Builder hotlinkProtection(Boolean hotlinkProtection) {
            return hotlinkProtection(Output.of(hotlinkProtection));
        }

        /**
         * @param id The identifier of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The identifier of this resource.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder increment(Output<Integer> increment) {
            $.increment = increment;
            return this;
        }

        public Builder increment(Integer increment) {
            return increment(Output.of(increment));
        }

        public Builder matchedData(Output<RulesetRuleActionParametersMatchedDataArgs> matchedData) {
            $.matchedData = matchedData;
            return this;
        }

        public Builder matchedData(RulesetRuleActionParametersMatchedDataArgs matchedData) {
            return matchedData(Output.of(matchedData));
        }

        public Builder mirage(Output<Boolean> mirage) {
            $.mirage = mirage;
            return this;
        }

        public Builder mirage(Boolean mirage) {
            return mirage(Output.of(mirage));
        }

        public Builder opportunisticEncryption(Output<Boolean> opportunisticEncryption) {
            $.opportunisticEncryption = opportunisticEncryption;
            return this;
        }

        public Builder opportunisticEncryption(Boolean opportunisticEncryption) {
            return opportunisticEncryption(Output.of(opportunisticEncryption));
        }

        public Builder originErrorPagePassthru(Output<Boolean> originErrorPagePassthru) {
            $.originErrorPagePassthru = originErrorPagePassthru;
            return this;
        }

        public Builder originErrorPagePassthru(Boolean originErrorPagePassthru) {
            return originErrorPagePassthru(Output.of(originErrorPagePassthru));
        }

        public Builder origins(Output<List<RulesetRuleActionParametersOriginArgs>> origins) {
            $.origins = origins;
            return this;
        }

        public Builder origins(List<RulesetRuleActionParametersOriginArgs> origins) {
            return origins(Output.of(origins));
        }

        public Builder origins(RulesetRuleActionParametersOriginArgs... origins) {
            return origins(List.of(origins));
        }

        public Builder overrides(Output<List<RulesetRuleActionParametersOverrideArgs>> overrides) {
            $.overrides = overrides;
            return this;
        }

        public Builder overrides(List<RulesetRuleActionParametersOverrideArgs> overrides) {
            return overrides(Output.of(overrides));
        }

        public Builder overrides(RulesetRuleActionParametersOverrideArgs... overrides) {
            return overrides(List.of(overrides));
        }

        public Builder phases(Output<List<String>> phases) {
            $.phases = phases;
            return this;
        }

        public Builder phases(List<String> phases) {
            return phases(Output.of(phases));
        }

        public Builder phases(String... phases) {
            return phases(List.of(phases));
        }

        public Builder polish(Output<String> polish) {
            $.polish = polish;
            return this;
        }

        public Builder polish(String polish) {
            return polish(Output.of(polish));
        }

        public Builder products(Output<List<String>> products) {
            $.products = products;
            return this;
        }

        public Builder products(List<String> products) {
            return products(Output.of(products));
        }

        public Builder products(String... products) {
            return products(List.of(products));
        }

        public Builder requestFields(Output<List<String>> requestFields) {
            $.requestFields = requestFields;
            return this;
        }

        public Builder requestFields(List<String> requestFields) {
            return requestFields(Output.of(requestFields));
        }

        public Builder requestFields(String... requestFields) {
            return requestFields(List.of(requestFields));
        }

        public Builder respectStrongEtags(Output<Boolean> respectStrongEtags) {
            $.respectStrongEtags = respectStrongEtags;
            return this;
        }

        public Builder respectStrongEtags(Boolean respectStrongEtags) {
            return respectStrongEtags(Output.of(respectStrongEtags));
        }

        public Builder responseFields(Output<List<String>> responseFields) {
            $.responseFields = responseFields;
            return this;
        }

        public Builder responseFields(List<String> responseFields) {
            return responseFields(Output.of(responseFields));
        }

        public Builder responseFields(String... responseFields) {
            return responseFields(List.of(responseFields));
        }

        public Builder responses(Output<List<RulesetRuleActionParametersResponseArgs>> responses) {
            $.responses = responses;
            return this;
        }

        public Builder responses(List<RulesetRuleActionParametersResponseArgs> responses) {
            return responses(Output.of(responses));
        }

        public Builder responses(RulesetRuleActionParametersResponseArgs... responses) {
            return responses(List.of(responses));
        }

        public Builder rocketLoader(Output<Boolean> rocketLoader) {
            $.rocketLoader = rocketLoader;
            return this;
        }

        public Builder rocketLoader(Boolean rocketLoader) {
            return rocketLoader(Output.of(rocketLoader));
        }

        /**
         * @param rules List of rules to apply to the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder rules(Output<Map<String,String>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of rules to apply to the ruleset.
         * 
         * @return builder
         * 
         */
        public Builder rules(Map<String,String> rules) {
            return rules(Output.of(rules));
        }

        public Builder ruleset(Output<String> ruleset) {
            $.ruleset = ruleset;
            return this;
        }

        public Builder ruleset(String ruleset) {
            return ruleset(Output.of(ruleset));
        }

        public Builder rulesets(Output<List<String>> rulesets) {
            $.rulesets = rulesets;
            return this;
        }

        public Builder rulesets(List<String> rulesets) {
            return rulesets(Output.of(rulesets));
        }

        public Builder rulesets(String... rulesets) {
            return rulesets(List.of(rulesets));
        }

        public Builder securityLevel(Output<String> securityLevel) {
            $.securityLevel = securityLevel;
            return this;
        }

        public Builder securityLevel(String securityLevel) {
            return securityLevel(Output.of(securityLevel));
        }

        public Builder serveStale(Output<RulesetRuleActionParametersServeStaleArgs> serveStale) {
            $.serveStale = serveStale;
            return this;
        }

        public Builder serveStale(RulesetRuleActionParametersServeStaleArgs serveStale) {
            return serveStale(Output.of(serveStale));
        }

        public Builder serverSideExcludes(Output<Boolean> serverSideExcludes) {
            $.serverSideExcludes = serverSideExcludes;
            return this;
        }

        public Builder serverSideExcludes(Boolean serverSideExcludes) {
            return serverSideExcludes(Output.of(serverSideExcludes));
        }

        public Builder sni(Output<RulesetRuleActionParametersSniArgs> sni) {
            $.sni = sni;
            return this;
        }

        public Builder sni(RulesetRuleActionParametersSniArgs sni) {
            return sni(Output.of(sni));
        }

        public Builder ssl(Output<String> ssl) {
            $.ssl = ssl;
            return this;
        }

        public Builder ssl(String ssl) {
            return ssl(Output.of(ssl));
        }

        public Builder statusCode(Output<Integer> statusCode) {
            $.statusCode = statusCode;
            return this;
        }

        public Builder statusCode(Integer statusCode) {
            return statusCode(Output.of(statusCode));
        }

        public Builder sxg(Output<Boolean> sxg) {
            $.sxg = sxg;
            return this;
        }

        public Builder sxg(Boolean sxg) {
            return sxg(Output.of(sxg));
        }

        public Builder uri(Output<RulesetRuleActionParametersUriArgs> uri) {
            $.uri = uri;
            return this;
        }

        public Builder uri(RulesetRuleActionParametersUriArgs uri) {
            return uri(Output.of(uri));
        }

        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        public Builder version(String version) {
            return version(Output.of(version));
        }

        public RulesetRuleActionParametersArgs build() {
            $.automaticHttpsRewrites = Objects.requireNonNull($.automaticHttpsRewrites, "expected parameter 'automaticHttpsRewrites' to be non-null");
            $.autominifies = Objects.requireNonNull($.autominifies, "expected parameter 'autominifies' to be non-null");
            $.bic = Objects.requireNonNull($.bic, "expected parameter 'bic' to be non-null");
            $.browserTtls = Objects.requireNonNull($.browserTtls, "expected parameter 'browserTtls' to be non-null");
            $.cache = Objects.requireNonNull($.cache, "expected parameter 'cache' to be non-null");
            $.cacheKey = Objects.requireNonNull($.cacheKey, "expected parameter 'cacheKey' to be non-null");
            $.content = Objects.requireNonNull($.content, "expected parameter 'content' to be non-null");
            $.contentType = Objects.requireNonNull($.contentType, "expected parameter 'contentType' to be non-null");
            $.cookieFields = Objects.requireNonNull($.cookieFields, "expected parameter 'cookieFields' to be non-null");
            $.disableApps = Objects.requireNonNull($.disableApps, "expected parameter 'disableApps' to be non-null");
            $.disableRailgun = Objects.requireNonNull($.disableRailgun, "expected parameter 'disableRailgun' to be non-null");
            $.disableZaraz = Objects.requireNonNull($.disableZaraz, "expected parameter 'disableZaraz' to be non-null");
            $.edgeTtl = Objects.requireNonNull($.edgeTtl, "expected parameter 'edgeTtl' to be non-null");
            $.emailObfuscation = Objects.requireNonNull($.emailObfuscation, "expected parameter 'emailObfuscation' to be non-null");
            $.fromList = Objects.requireNonNull($.fromList, "expected parameter 'fromList' to be non-null");
            $.fromValues = Objects.requireNonNull($.fromValues, "expected parameter 'fromValues' to be non-null");
            $.headers = Objects.requireNonNull($.headers, "expected parameter 'headers' to be non-null");
            $.hostHeader = Objects.requireNonNull($.hostHeader, "expected parameter 'hostHeader' to be non-null");
            $.hotlinkProtection = Objects.requireNonNull($.hotlinkProtection, "expected parameter 'hotlinkProtection' to be non-null");
            $.id = Objects.requireNonNull($.id, "expected parameter 'id' to be non-null");
            $.increment = Objects.requireNonNull($.increment, "expected parameter 'increment' to be non-null");
            $.matchedData = Objects.requireNonNull($.matchedData, "expected parameter 'matchedData' to be non-null");
            $.mirage = Objects.requireNonNull($.mirage, "expected parameter 'mirage' to be non-null");
            $.opportunisticEncryption = Objects.requireNonNull($.opportunisticEncryption, "expected parameter 'opportunisticEncryption' to be non-null");
            $.originErrorPagePassthru = Objects.requireNonNull($.originErrorPagePassthru, "expected parameter 'originErrorPagePassthru' to be non-null");
            $.origins = Objects.requireNonNull($.origins, "expected parameter 'origins' to be non-null");
            $.overrides = Objects.requireNonNull($.overrides, "expected parameter 'overrides' to be non-null");
            $.phases = Objects.requireNonNull($.phases, "expected parameter 'phases' to be non-null");
            $.polish = Objects.requireNonNull($.polish, "expected parameter 'polish' to be non-null");
            $.products = Objects.requireNonNull($.products, "expected parameter 'products' to be non-null");
            $.requestFields = Objects.requireNonNull($.requestFields, "expected parameter 'requestFields' to be non-null");
            $.respectStrongEtags = Objects.requireNonNull($.respectStrongEtags, "expected parameter 'respectStrongEtags' to be non-null");
            $.responseFields = Objects.requireNonNull($.responseFields, "expected parameter 'responseFields' to be non-null");
            $.responses = Objects.requireNonNull($.responses, "expected parameter 'responses' to be non-null");
            $.rocketLoader = Objects.requireNonNull($.rocketLoader, "expected parameter 'rocketLoader' to be non-null");
            $.rules = Objects.requireNonNull($.rules, "expected parameter 'rules' to be non-null");
            $.ruleset = Objects.requireNonNull($.ruleset, "expected parameter 'ruleset' to be non-null");
            $.rulesets = Objects.requireNonNull($.rulesets, "expected parameter 'rulesets' to be non-null");
            $.securityLevel = Objects.requireNonNull($.securityLevel, "expected parameter 'securityLevel' to be non-null");
            $.serveStale = Objects.requireNonNull($.serveStale, "expected parameter 'serveStale' to be non-null");
            $.serverSideExcludes = Objects.requireNonNull($.serverSideExcludes, "expected parameter 'serverSideExcludes' to be non-null");
            $.sni = Objects.requireNonNull($.sni, "expected parameter 'sni' to be non-null");
            $.ssl = Objects.requireNonNull($.ssl, "expected parameter 'ssl' to be non-null");
            $.statusCode = Objects.requireNonNull($.statusCode, "expected parameter 'statusCode' to be non-null");
            $.sxg = Objects.requireNonNull($.sxg, "expected parameter 'sxg' to be non-null");
            $.uri = Objects.requireNonNull($.uri, "expected parameter 'uri' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
