// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.RulesetRuleActionParametersOverrideCategory;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParametersOverrideRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RulesetRuleActionParametersOverride {
    private String action;
    private List<RulesetRuleActionParametersOverrideCategory> categories;
    private Boolean enabled;
    /**
     * @return List of rules to apply to the ruleset.
     * 
     */
    private List<RulesetRuleActionParametersOverrideRule> rules;
    private String sensitivityLevel;

    private RulesetRuleActionParametersOverride() {}
    public String action() {
        return this.action;
    }
    public List<RulesetRuleActionParametersOverrideCategory> categories() {
        return this.categories;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return List of rules to apply to the ruleset.
     * 
     */
    public List<RulesetRuleActionParametersOverrideRule> rules() {
        return this.rules;
    }
    public String sensitivityLevel() {
        return this.sensitivityLevel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesetRuleActionParametersOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private List<RulesetRuleActionParametersOverrideCategory> categories;
        private Boolean enabled;
        private List<RulesetRuleActionParametersOverrideRule> rules;
        private String sensitivityLevel;
        public Builder() {}
        public Builder(RulesetRuleActionParametersOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.categories = defaults.categories;
    	      this.enabled = defaults.enabled;
    	      this.rules = defaults.rules;
    	      this.sensitivityLevel = defaults.sensitivityLevel;
        }

        @CustomType.Setter
        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        @CustomType.Setter
        public Builder categories(List<RulesetRuleActionParametersOverrideCategory> categories) {
            this.categories = Objects.requireNonNull(categories);
            return this;
        }
        public Builder categories(RulesetRuleActionParametersOverrideCategory... categories) {
            return categories(List.of(categories));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<RulesetRuleActionParametersOverrideRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(RulesetRuleActionParametersOverrideRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder sensitivityLevel(String sensitivityLevel) {
            this.sensitivityLevel = Objects.requireNonNull(sensitivityLevel);
            return this;
        }
        public RulesetRuleActionParametersOverride build() {
            final var o = new RulesetRuleActionParametersOverride();
            o.action = action;
            o.categories = categories;
            o.enabled = enabled;
            o.rules = rules;
            o.sensitivityLevel = sensitivityLevel;
            return o;
        }
    }
}
