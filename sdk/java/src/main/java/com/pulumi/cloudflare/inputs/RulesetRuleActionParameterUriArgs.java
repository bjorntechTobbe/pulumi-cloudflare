// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.inputs;

import com.pulumi.cloudflare.inputs.RulesetRuleActionParameterUriPathArgs;
import com.pulumi.cloudflare.inputs.RulesetRuleActionParameterUriQueryArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;


public final class RulesetRuleActionParameterUriArgs extends com.pulumi.resources.ResourceArgs {

    public static final RulesetRuleActionParameterUriArgs Empty = new RulesetRuleActionParameterUriArgs();

    @Import(name="origin", required=true)
    private Output<Boolean> origin;

    public Output<Boolean> origin() {
        return this.origin;
    }

    @Import(name="paths", required=true)
    private Output<List<RulesetRuleActionParameterUriPathArgs>> paths;

    public Output<List<RulesetRuleActionParameterUriPathArgs>> paths() {
        return this.paths;
    }

    @Import(name="queries", required=true)
    private Output<List<RulesetRuleActionParameterUriQueryArgs>> queries;

    public Output<List<RulesetRuleActionParameterUriQueryArgs>> queries() {
        return this.queries;
    }

    private RulesetRuleActionParameterUriArgs() {}

    private RulesetRuleActionParameterUriArgs(RulesetRuleActionParameterUriArgs $) {
        this.origin = $.origin;
        this.paths = $.paths;
        this.queries = $.queries;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RulesetRuleActionParameterUriArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RulesetRuleActionParameterUriArgs $;

        public Builder() {
            $ = new RulesetRuleActionParameterUriArgs();
        }

        public Builder(RulesetRuleActionParameterUriArgs defaults) {
            $ = new RulesetRuleActionParameterUriArgs(Objects.requireNonNull(defaults));
        }

        public Builder origin(Output<Boolean> origin) {
            $.origin = origin;
            return this;
        }

        public Builder origin(Boolean origin) {
            return origin(Output.of(origin));
        }

        public Builder paths(Output<List<RulesetRuleActionParameterUriPathArgs>> paths) {
            $.paths = paths;
            return this;
        }

        public Builder paths(List<RulesetRuleActionParameterUriPathArgs> paths) {
            return paths(Output.of(paths));
        }

        public Builder paths(RulesetRuleActionParameterUriPathArgs... paths) {
            return paths(List.of(paths));
        }

        public Builder queries(Output<List<RulesetRuleActionParameterUriQueryArgs>> queries) {
            $.queries = queries;
            return this;
        }

        public Builder queries(List<RulesetRuleActionParameterUriQueryArgs> queries) {
            return queries(Output.of(queries));
        }

        public Builder queries(RulesetRuleActionParameterUriQueryArgs... queries) {
            return queries(List.of(queries));
        }

        public RulesetRuleActionParameterUriArgs build() {
            $.origin = Objects.requireNonNull($.origin, "expected parameter 'origin' to be non-null");
            $.paths = Objects.requireNonNull($.paths, "expected parameter 'paths' to be non-null");
            $.queries = Objects.requireNonNull($.queries, "expected parameter 'queries' to be non-null");
            return $;
        }
    }

}
