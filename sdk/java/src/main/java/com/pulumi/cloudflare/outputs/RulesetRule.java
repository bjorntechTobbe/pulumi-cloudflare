// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.RulesetRuleActionParameters;
import com.pulumi.cloudflare.outputs.RulesetRuleExposedCredentialCheck;
import com.pulumi.cloudflare.outputs.RulesetRuleLogging;
import com.pulumi.cloudflare.outputs.RulesetRuleRatelimit;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RulesetRule {
    /**
     * @return Action to perform in the ruleset rule. Available values: `allow`, `block`, `challenge`, `ddos_dynamic`, `execute`, `force_connection_close`, `js_challenge`, `log`, `log_custom_field`, `managed_challenge`, `redirect`, `rewrite`, `route`, `score`, `set_cache_settings`, `set_config`, `serve_error`, `skip`.
     * 
     */
    private @Nullable String action;
    /**
     * @return List of parameters that configure the behavior of the ruleset rule action.
     * 
     */
    private RulesetRuleActionParameters actionParameters;
    /**
     * @return Brief summary of the ruleset rule and its intended use.
     * 
     */
    private @Nullable String description;
    /**
     * @return Whether the rule is active.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return List of parameters that configure exposed credential checks.
     * 
     */
    private RulesetRuleExposedCredentialCheck exposedCredentialCheck;
    /**
     * @return Criteria for an HTTP request to trigger the ruleset rule action. Uses the Firewall Rules expression language based on Wireshark display filters. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language) documentation for all available fields, operators, and functions.
     * 
     */
    private String expression;
    /**
     * @return Unique rule identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return The most recent update to this rule.
     * 
     */
    private @Nullable String lastUpdated;
    /**
     * @return List parameters to configure how the rule generates logs.
     * 
     */
    private RulesetRuleLogging logging;
    /**
     * @return List of parameters that configure HTTP rate limiting behaviour.
     * 
     */
    private RulesetRuleRatelimit ratelimit;
    /**
     * @return Rule reference.
     * 
     */
    private @Nullable String ref;
    /**
     * @return Version of the ruleset to deploy.
     * 
     */
    private @Nullable String version;

    private RulesetRule() {}
    /**
     * @return Action to perform in the ruleset rule. Available values: `allow`, `block`, `challenge`, `ddos_dynamic`, `execute`, `force_connection_close`, `js_challenge`, `log`, `log_custom_field`, `managed_challenge`, `redirect`, `rewrite`, `route`, `score`, `set_cache_settings`, `set_config`, `serve_error`, `skip`.
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return List of parameters that configure the behavior of the ruleset rule action.
     * 
     */
    public RulesetRuleActionParameters actionParameters() {
        return this.actionParameters;
    }
    /**
     * @return Brief summary of the ruleset rule and its intended use.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Whether the rule is active.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return List of parameters that configure exposed credential checks.
     * 
     */
    public RulesetRuleExposedCredentialCheck exposedCredentialCheck() {
        return this.exposedCredentialCheck;
    }
    /**
     * @return Criteria for an HTTP request to trigger the ruleset rule action. Uses the Firewall Rules expression language based on Wireshark display filters. Refer to the [Firewall Rules language](https://developers.cloudflare.com/firewall/cf-firewall-language) documentation for all available fields, operators, and functions.
     * 
     */
    public String expression() {
        return this.expression;
    }
    /**
     * @return Unique rule identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The most recent update to this rule.
     * 
     */
    public Optional<String> lastUpdated() {
        return Optional.ofNullable(this.lastUpdated);
    }
    /**
     * @return List parameters to configure how the rule generates logs.
     * 
     */
    public RulesetRuleLogging logging() {
        return this.logging;
    }
    /**
     * @return List of parameters that configure HTTP rate limiting behaviour.
     * 
     */
    public RulesetRuleRatelimit ratelimit() {
        return this.ratelimit;
    }
    /**
     * @return Rule reference.
     * 
     */
    public Optional<String> ref() {
        return Optional.ofNullable(this.ref);
    }
    /**
     * @return Version of the ruleset to deploy.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesetRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private RulesetRuleActionParameters actionParameters;
        private @Nullable String description;
        private @Nullable Boolean enabled;
        private RulesetRuleExposedCredentialCheck exposedCredentialCheck;
        private String expression;
        private @Nullable String id;
        private @Nullable String lastUpdated;
        private RulesetRuleLogging logging;
        private RulesetRuleRatelimit ratelimit;
        private @Nullable String ref;
        private @Nullable String version;
        public Builder() {}
        public Builder(RulesetRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.actionParameters = defaults.actionParameters;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.exposedCredentialCheck = defaults.exposedCredentialCheck;
    	      this.expression = defaults.expression;
    	      this.id = defaults.id;
    	      this.lastUpdated = defaults.lastUpdated;
    	      this.logging = defaults.logging;
    	      this.ratelimit = defaults.ratelimit;
    	      this.ref = defaults.ref;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder actionParameters(RulesetRuleActionParameters actionParameters) {
            this.actionParameters = Objects.requireNonNull(actionParameters);
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder exposedCredentialCheck(RulesetRuleExposedCredentialCheck exposedCredentialCheck) {
            this.exposedCredentialCheck = Objects.requireNonNull(exposedCredentialCheck);
            return this;
        }
        @CustomType.Setter
        public Builder expression(String expression) {
            this.expression = Objects.requireNonNull(expression);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(@Nullable String lastUpdated) {
            this.lastUpdated = lastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder logging(RulesetRuleLogging logging) {
            this.logging = Objects.requireNonNull(logging);
            return this;
        }
        @CustomType.Setter
        public Builder ratelimit(RulesetRuleRatelimit ratelimit) {
            this.ratelimit = Objects.requireNonNull(ratelimit);
            return this;
        }
        @CustomType.Setter
        public Builder ref(@Nullable String ref) {
            this.ref = ref;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public RulesetRule build() {
            final var o = new RulesetRule();
            o.action = action;
            o.actionParameters = actionParameters;
            o.description = description;
            o.enabled = enabled;
            o.exposedCredentialCheck = exposedCredentialCheck;
            o.expression = expression;
            o.id = id;
            o.lastUpdated = lastUpdated;
            o.logging = logging;
            o.ratelimit = ratelimit;
            o.ref = ref;
            o.version = version;
            return o;
        }
    }
}
