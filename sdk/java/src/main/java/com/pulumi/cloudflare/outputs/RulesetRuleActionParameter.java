// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.cloudflare.outputs;

import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterAutominify;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterBrowserTtl;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterCacheKey;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterEdgeTtl;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterFromList;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterFromValue;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterHeader;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterMatchedData;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterOrigin;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterOverride;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterResponse;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterServeStale;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterSni;
import com.pulumi.cloudflare.outputs.RulesetRuleActionParameterUri;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class RulesetRuleActionParameter {
    private Boolean automaticHttpsRewrites;
    private List<RulesetRuleActionParameterAutominify> autominifies;
    private Boolean bic;
    private List<RulesetRuleActionParameterBrowserTtl> browserTtls;
    private Boolean cache;
    private List<RulesetRuleActionParameterCacheKey> cacheKeys;
    private String content;
    private String contentType;
    private List<String> cookieFields;
    private Boolean disableApps;
    private Boolean disableRailgun;
    private Boolean disableZaraz;
    private List<RulesetRuleActionParameterEdgeTtl> edgeTtls;
    private Boolean emailObfuscation;
    private List<RulesetRuleActionParameterFromList> fromLists;
    private List<RulesetRuleActionParameterFromValue> fromValues;
    private List<RulesetRuleActionParameterHeader> headers;
    private String hostHeader;
    private Boolean hotlinkProtection;
    /**
     * @return The identifier of this resource.
     * 
     */
    private String id;
    private Integer increment;
    private List<RulesetRuleActionParameterMatchedData> matchedDatas;
    private Boolean mirage;
    private Boolean opportunisticEncryption;
    private Boolean originErrorPagePassthru;
    private List<RulesetRuleActionParameterOrigin> origins;
    private List<RulesetRuleActionParameterOverride> overrides;
    private List<String> phases;
    private String polish;
    private List<String> products;
    private List<String> requestFields;
    private Boolean respectStrongEtags;
    private List<String> responseFields;
    private List<RulesetRuleActionParameterResponse> responses;
    private Boolean rocketLoader;
    /**
     * @return List of rules to apply to the ruleset.
     * 
     */
    private Map<String,String> rules;
    private String ruleset;
    private List<String> rulesets;
    private String securityLevel;
    private List<RulesetRuleActionParameterServeStale> serveStales;
    private Boolean serverSideExcludes;
    private List<RulesetRuleActionParameterSni> snis;
    private String ssl;
    private Integer statusCode;
    private Boolean sxg;
    private List<RulesetRuleActionParameterUri> uris;
    private String version;

    private RulesetRuleActionParameter() {}
    public Boolean automaticHttpsRewrites() {
        return this.automaticHttpsRewrites;
    }
    public List<RulesetRuleActionParameterAutominify> autominifies() {
        return this.autominifies;
    }
    public Boolean bic() {
        return this.bic;
    }
    public List<RulesetRuleActionParameterBrowserTtl> browserTtls() {
        return this.browserTtls;
    }
    public Boolean cache() {
        return this.cache;
    }
    public List<RulesetRuleActionParameterCacheKey> cacheKeys() {
        return this.cacheKeys;
    }
    public String content() {
        return this.content;
    }
    public String contentType() {
        return this.contentType;
    }
    public List<String> cookieFields() {
        return this.cookieFields;
    }
    public Boolean disableApps() {
        return this.disableApps;
    }
    public Boolean disableRailgun() {
        return this.disableRailgun;
    }
    public Boolean disableZaraz() {
        return this.disableZaraz;
    }
    public List<RulesetRuleActionParameterEdgeTtl> edgeTtls() {
        return this.edgeTtls;
    }
    public Boolean emailObfuscation() {
        return this.emailObfuscation;
    }
    public List<RulesetRuleActionParameterFromList> fromLists() {
        return this.fromLists;
    }
    public List<RulesetRuleActionParameterFromValue> fromValues() {
        return this.fromValues;
    }
    public List<RulesetRuleActionParameterHeader> headers() {
        return this.headers;
    }
    public String hostHeader() {
        return this.hostHeader;
    }
    public Boolean hotlinkProtection() {
        return this.hotlinkProtection;
    }
    /**
     * @return The identifier of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Integer increment() {
        return this.increment;
    }
    public List<RulesetRuleActionParameterMatchedData> matchedDatas() {
        return this.matchedDatas;
    }
    public Boolean mirage() {
        return this.mirage;
    }
    public Boolean opportunisticEncryption() {
        return this.opportunisticEncryption;
    }
    public Boolean originErrorPagePassthru() {
        return this.originErrorPagePassthru;
    }
    public List<RulesetRuleActionParameterOrigin> origins() {
        return this.origins;
    }
    public List<RulesetRuleActionParameterOverride> overrides() {
        return this.overrides;
    }
    public List<String> phases() {
        return this.phases;
    }
    public String polish() {
        return this.polish;
    }
    public List<String> products() {
        return this.products;
    }
    public List<String> requestFields() {
        return this.requestFields;
    }
    public Boolean respectStrongEtags() {
        return this.respectStrongEtags;
    }
    public List<String> responseFields() {
        return this.responseFields;
    }
    public List<RulesetRuleActionParameterResponse> responses() {
        return this.responses;
    }
    public Boolean rocketLoader() {
        return this.rocketLoader;
    }
    /**
     * @return List of rules to apply to the ruleset.
     * 
     */
    public Map<String,String> rules() {
        return this.rules;
    }
    public String ruleset() {
        return this.ruleset;
    }
    public List<String> rulesets() {
        return this.rulesets;
    }
    public String securityLevel() {
        return this.securityLevel;
    }
    public List<RulesetRuleActionParameterServeStale> serveStales() {
        return this.serveStales;
    }
    public Boolean serverSideExcludes() {
        return this.serverSideExcludes;
    }
    public List<RulesetRuleActionParameterSni> snis() {
        return this.snis;
    }
    public String ssl() {
        return this.ssl;
    }
    public Integer statusCode() {
        return this.statusCode;
    }
    public Boolean sxg() {
        return this.sxg;
    }
    public List<RulesetRuleActionParameterUri> uris() {
        return this.uris;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RulesetRuleActionParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean automaticHttpsRewrites;
        private List<RulesetRuleActionParameterAutominify> autominifies;
        private Boolean bic;
        private List<RulesetRuleActionParameterBrowserTtl> browserTtls;
        private Boolean cache;
        private List<RulesetRuleActionParameterCacheKey> cacheKeys;
        private String content;
        private String contentType;
        private List<String> cookieFields;
        private Boolean disableApps;
        private Boolean disableRailgun;
        private Boolean disableZaraz;
        private List<RulesetRuleActionParameterEdgeTtl> edgeTtls;
        private Boolean emailObfuscation;
        private List<RulesetRuleActionParameterFromList> fromLists;
        private List<RulesetRuleActionParameterFromValue> fromValues;
        private List<RulesetRuleActionParameterHeader> headers;
        private String hostHeader;
        private Boolean hotlinkProtection;
        private String id;
        private Integer increment;
        private List<RulesetRuleActionParameterMatchedData> matchedDatas;
        private Boolean mirage;
        private Boolean opportunisticEncryption;
        private Boolean originErrorPagePassthru;
        private List<RulesetRuleActionParameterOrigin> origins;
        private List<RulesetRuleActionParameterOverride> overrides;
        private List<String> phases;
        private String polish;
        private List<String> products;
        private List<String> requestFields;
        private Boolean respectStrongEtags;
        private List<String> responseFields;
        private List<RulesetRuleActionParameterResponse> responses;
        private Boolean rocketLoader;
        private Map<String,String> rules;
        private String ruleset;
        private List<String> rulesets;
        private String securityLevel;
        private List<RulesetRuleActionParameterServeStale> serveStales;
        private Boolean serverSideExcludes;
        private List<RulesetRuleActionParameterSni> snis;
        private String ssl;
        private Integer statusCode;
        private Boolean sxg;
        private List<RulesetRuleActionParameterUri> uris;
        private String version;
        public Builder() {}
        public Builder(RulesetRuleActionParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automaticHttpsRewrites = defaults.automaticHttpsRewrites;
    	      this.autominifies = defaults.autominifies;
    	      this.bic = defaults.bic;
    	      this.browserTtls = defaults.browserTtls;
    	      this.cache = defaults.cache;
    	      this.cacheKeys = defaults.cacheKeys;
    	      this.content = defaults.content;
    	      this.contentType = defaults.contentType;
    	      this.cookieFields = defaults.cookieFields;
    	      this.disableApps = defaults.disableApps;
    	      this.disableRailgun = defaults.disableRailgun;
    	      this.disableZaraz = defaults.disableZaraz;
    	      this.edgeTtls = defaults.edgeTtls;
    	      this.emailObfuscation = defaults.emailObfuscation;
    	      this.fromLists = defaults.fromLists;
    	      this.fromValues = defaults.fromValues;
    	      this.headers = defaults.headers;
    	      this.hostHeader = defaults.hostHeader;
    	      this.hotlinkProtection = defaults.hotlinkProtection;
    	      this.id = defaults.id;
    	      this.increment = defaults.increment;
    	      this.matchedDatas = defaults.matchedDatas;
    	      this.mirage = defaults.mirage;
    	      this.opportunisticEncryption = defaults.opportunisticEncryption;
    	      this.originErrorPagePassthru = defaults.originErrorPagePassthru;
    	      this.origins = defaults.origins;
    	      this.overrides = defaults.overrides;
    	      this.phases = defaults.phases;
    	      this.polish = defaults.polish;
    	      this.products = defaults.products;
    	      this.requestFields = defaults.requestFields;
    	      this.respectStrongEtags = defaults.respectStrongEtags;
    	      this.responseFields = defaults.responseFields;
    	      this.responses = defaults.responses;
    	      this.rocketLoader = defaults.rocketLoader;
    	      this.rules = defaults.rules;
    	      this.ruleset = defaults.ruleset;
    	      this.rulesets = defaults.rulesets;
    	      this.securityLevel = defaults.securityLevel;
    	      this.serveStales = defaults.serveStales;
    	      this.serverSideExcludes = defaults.serverSideExcludes;
    	      this.snis = defaults.snis;
    	      this.ssl = defaults.ssl;
    	      this.statusCode = defaults.statusCode;
    	      this.sxg = defaults.sxg;
    	      this.uris = defaults.uris;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder automaticHttpsRewrites(Boolean automaticHttpsRewrites) {
            this.automaticHttpsRewrites = Objects.requireNonNull(automaticHttpsRewrites);
            return this;
        }
        @CustomType.Setter
        public Builder autominifies(List<RulesetRuleActionParameterAutominify> autominifies) {
            this.autominifies = Objects.requireNonNull(autominifies);
            return this;
        }
        public Builder autominifies(RulesetRuleActionParameterAutominify... autominifies) {
            return autominifies(List.of(autominifies));
        }
        @CustomType.Setter
        public Builder bic(Boolean bic) {
            this.bic = Objects.requireNonNull(bic);
            return this;
        }
        @CustomType.Setter
        public Builder browserTtls(List<RulesetRuleActionParameterBrowserTtl> browserTtls) {
            this.browserTtls = Objects.requireNonNull(browserTtls);
            return this;
        }
        public Builder browserTtls(RulesetRuleActionParameterBrowserTtl... browserTtls) {
            return browserTtls(List.of(browserTtls));
        }
        @CustomType.Setter
        public Builder cache(Boolean cache) {
            this.cache = Objects.requireNonNull(cache);
            return this;
        }
        @CustomType.Setter
        public Builder cacheKeys(List<RulesetRuleActionParameterCacheKey> cacheKeys) {
            this.cacheKeys = Objects.requireNonNull(cacheKeys);
            return this;
        }
        public Builder cacheKeys(RulesetRuleActionParameterCacheKey... cacheKeys) {
            return cacheKeys(List.of(cacheKeys));
        }
        @CustomType.Setter
        public Builder content(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        @CustomType.Setter
        public Builder contentType(String contentType) {
            this.contentType = Objects.requireNonNull(contentType);
            return this;
        }
        @CustomType.Setter
        public Builder cookieFields(List<String> cookieFields) {
            this.cookieFields = Objects.requireNonNull(cookieFields);
            return this;
        }
        public Builder cookieFields(String... cookieFields) {
            return cookieFields(List.of(cookieFields));
        }
        @CustomType.Setter
        public Builder disableApps(Boolean disableApps) {
            this.disableApps = Objects.requireNonNull(disableApps);
            return this;
        }
        @CustomType.Setter
        public Builder disableRailgun(Boolean disableRailgun) {
            this.disableRailgun = Objects.requireNonNull(disableRailgun);
            return this;
        }
        @CustomType.Setter
        public Builder disableZaraz(Boolean disableZaraz) {
            this.disableZaraz = Objects.requireNonNull(disableZaraz);
            return this;
        }
        @CustomType.Setter
        public Builder edgeTtls(List<RulesetRuleActionParameterEdgeTtl> edgeTtls) {
            this.edgeTtls = Objects.requireNonNull(edgeTtls);
            return this;
        }
        public Builder edgeTtls(RulesetRuleActionParameterEdgeTtl... edgeTtls) {
            return edgeTtls(List.of(edgeTtls));
        }
        @CustomType.Setter
        public Builder emailObfuscation(Boolean emailObfuscation) {
            this.emailObfuscation = Objects.requireNonNull(emailObfuscation);
            return this;
        }
        @CustomType.Setter
        public Builder fromLists(List<RulesetRuleActionParameterFromList> fromLists) {
            this.fromLists = Objects.requireNonNull(fromLists);
            return this;
        }
        public Builder fromLists(RulesetRuleActionParameterFromList... fromLists) {
            return fromLists(List.of(fromLists));
        }
        @CustomType.Setter
        public Builder fromValues(List<RulesetRuleActionParameterFromValue> fromValues) {
            this.fromValues = Objects.requireNonNull(fromValues);
            return this;
        }
        public Builder fromValues(RulesetRuleActionParameterFromValue... fromValues) {
            return fromValues(List.of(fromValues));
        }
        @CustomType.Setter
        public Builder headers(List<RulesetRuleActionParameterHeader> headers) {
            this.headers = Objects.requireNonNull(headers);
            return this;
        }
        public Builder headers(RulesetRuleActionParameterHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder hostHeader(String hostHeader) {
            this.hostHeader = Objects.requireNonNull(hostHeader);
            return this;
        }
        @CustomType.Setter
        public Builder hotlinkProtection(Boolean hotlinkProtection) {
            this.hotlinkProtection = Objects.requireNonNull(hotlinkProtection);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder increment(Integer increment) {
            this.increment = Objects.requireNonNull(increment);
            return this;
        }
        @CustomType.Setter
        public Builder matchedDatas(List<RulesetRuleActionParameterMatchedData> matchedDatas) {
            this.matchedDatas = Objects.requireNonNull(matchedDatas);
            return this;
        }
        public Builder matchedDatas(RulesetRuleActionParameterMatchedData... matchedDatas) {
            return matchedDatas(List.of(matchedDatas));
        }
        @CustomType.Setter
        public Builder mirage(Boolean mirage) {
            this.mirage = Objects.requireNonNull(mirage);
            return this;
        }
        @CustomType.Setter
        public Builder opportunisticEncryption(Boolean opportunisticEncryption) {
            this.opportunisticEncryption = Objects.requireNonNull(opportunisticEncryption);
            return this;
        }
        @CustomType.Setter
        public Builder originErrorPagePassthru(Boolean originErrorPagePassthru) {
            this.originErrorPagePassthru = Objects.requireNonNull(originErrorPagePassthru);
            return this;
        }
        @CustomType.Setter
        public Builder origins(List<RulesetRuleActionParameterOrigin> origins) {
            this.origins = Objects.requireNonNull(origins);
            return this;
        }
        public Builder origins(RulesetRuleActionParameterOrigin... origins) {
            return origins(List.of(origins));
        }
        @CustomType.Setter
        public Builder overrides(List<RulesetRuleActionParameterOverride> overrides) {
            this.overrides = Objects.requireNonNull(overrides);
            return this;
        }
        public Builder overrides(RulesetRuleActionParameterOverride... overrides) {
            return overrides(List.of(overrides));
        }
        @CustomType.Setter
        public Builder phases(List<String> phases) {
            this.phases = Objects.requireNonNull(phases);
            return this;
        }
        public Builder phases(String... phases) {
            return phases(List.of(phases));
        }
        @CustomType.Setter
        public Builder polish(String polish) {
            this.polish = Objects.requireNonNull(polish);
            return this;
        }
        @CustomType.Setter
        public Builder products(List<String> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(String... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder requestFields(List<String> requestFields) {
            this.requestFields = Objects.requireNonNull(requestFields);
            return this;
        }
        public Builder requestFields(String... requestFields) {
            return requestFields(List.of(requestFields));
        }
        @CustomType.Setter
        public Builder respectStrongEtags(Boolean respectStrongEtags) {
            this.respectStrongEtags = Objects.requireNonNull(respectStrongEtags);
            return this;
        }
        @CustomType.Setter
        public Builder responseFields(List<String> responseFields) {
            this.responseFields = Objects.requireNonNull(responseFields);
            return this;
        }
        public Builder responseFields(String... responseFields) {
            return responseFields(List.of(responseFields));
        }
        @CustomType.Setter
        public Builder responses(List<RulesetRuleActionParameterResponse> responses) {
            this.responses = Objects.requireNonNull(responses);
            return this;
        }
        public Builder responses(RulesetRuleActionParameterResponse... responses) {
            return responses(List.of(responses));
        }
        @CustomType.Setter
        public Builder rocketLoader(Boolean rocketLoader) {
            this.rocketLoader = Objects.requireNonNull(rocketLoader);
            return this;
        }
        @CustomType.Setter
        public Builder rules(Map<String,String> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        @CustomType.Setter
        public Builder ruleset(String ruleset) {
            this.ruleset = Objects.requireNonNull(ruleset);
            return this;
        }
        @CustomType.Setter
        public Builder rulesets(List<String> rulesets) {
            this.rulesets = Objects.requireNonNull(rulesets);
            return this;
        }
        public Builder rulesets(String... rulesets) {
            return rulesets(List.of(rulesets));
        }
        @CustomType.Setter
        public Builder securityLevel(String securityLevel) {
            this.securityLevel = Objects.requireNonNull(securityLevel);
            return this;
        }
        @CustomType.Setter
        public Builder serveStales(List<RulesetRuleActionParameterServeStale> serveStales) {
            this.serveStales = Objects.requireNonNull(serveStales);
            return this;
        }
        public Builder serveStales(RulesetRuleActionParameterServeStale... serveStales) {
            return serveStales(List.of(serveStales));
        }
        @CustomType.Setter
        public Builder serverSideExcludes(Boolean serverSideExcludes) {
            this.serverSideExcludes = Objects.requireNonNull(serverSideExcludes);
            return this;
        }
        @CustomType.Setter
        public Builder snis(List<RulesetRuleActionParameterSni> snis) {
            this.snis = Objects.requireNonNull(snis);
            return this;
        }
        public Builder snis(RulesetRuleActionParameterSni... snis) {
            return snis(List.of(snis));
        }
        @CustomType.Setter
        public Builder ssl(String ssl) {
            this.ssl = Objects.requireNonNull(ssl);
            return this;
        }
        @CustomType.Setter
        public Builder statusCode(Integer statusCode) {
            this.statusCode = Objects.requireNonNull(statusCode);
            return this;
        }
        @CustomType.Setter
        public Builder sxg(Boolean sxg) {
            this.sxg = Objects.requireNonNull(sxg);
            return this;
        }
        @CustomType.Setter
        public Builder uris(List<RulesetRuleActionParameterUri> uris) {
            this.uris = Objects.requireNonNull(uris);
            return this;
        }
        public Builder uris(RulesetRuleActionParameterUri... uris) {
            return uris(List.of(uris));
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public RulesetRuleActionParameter build() {
            final var o = new RulesetRuleActionParameter();
            o.automaticHttpsRewrites = automaticHttpsRewrites;
            o.autominifies = autominifies;
            o.bic = bic;
            o.browserTtls = browserTtls;
            o.cache = cache;
            o.cacheKeys = cacheKeys;
            o.content = content;
            o.contentType = contentType;
            o.cookieFields = cookieFields;
            o.disableApps = disableApps;
            o.disableRailgun = disableRailgun;
            o.disableZaraz = disableZaraz;
            o.edgeTtls = edgeTtls;
            o.emailObfuscation = emailObfuscation;
            o.fromLists = fromLists;
            o.fromValues = fromValues;
            o.headers = headers;
            o.hostHeader = hostHeader;
            o.hotlinkProtection = hotlinkProtection;
            o.id = id;
            o.increment = increment;
            o.matchedDatas = matchedDatas;
            o.mirage = mirage;
            o.opportunisticEncryption = opportunisticEncryption;
            o.originErrorPagePassthru = originErrorPagePassthru;
            o.origins = origins;
            o.overrides = overrides;
            o.phases = phases;
            o.polish = polish;
            o.products = products;
            o.requestFields = requestFields;
            o.respectStrongEtags = respectStrongEtags;
            o.responseFields = responseFields;
            o.responses = responses;
            o.rocketLoader = rocketLoader;
            o.rules = rules;
            o.ruleset = ruleset;
            o.rulesets = rulesets;
            o.securityLevel = securityLevel;
            o.serveStales = serveStales;
            o.serverSideExcludes = serverSideExcludes;
            o.snis = snis;
            o.ssl = ssl;
            o.statusCode = statusCode;
            o.sxg = sxg;
            o.uris = uris;
            o.version = version;
            return o;
        }
    }
}
